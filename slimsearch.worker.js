/**
* @vue/shared v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function xt(e){const t=Object.create(null);for(const n of e.split(","))t[n]=1;return n=>n in t}const Ot={},St=()=>{},ze=Object.assign,It=Object.prototype.hasOwnProperty,se=(e,t)=>It.call(e,t),z=Array.isArray,Y=e=>Ve(e)==="[object Map]",oe=e=>typeof e=="function",Ce=e=>typeof e=="string",L=e=>typeof e=="symbol",B=e=>e!==null&&typeof e=="object",Nt=Object.prototype.toString,Ve=e=>Nt.call(e),ke=e=>Ve(e).slice(8,-1),ie=e=>Ce(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,Mt=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},Ln=Mt(e=>e.charAt(0).toUpperCase()+e.slice(1)),W=(e,t)=>!Object.is(e,t);let $e;const ce=()=>$e||($e=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});/**
* @vue/reactivity v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Rt(e,...t){console.warn(`[Vue warn] ${e}`,...t)}let Tt,je=0,ae;function ue(){je++}function le(){if(--je>0)return;let e;for(;ae;){let t=ae;for(ae=void 0;t;){const n=t.next;if(t.next=void 0,t.flags&=-9,t.flags&1)try{t.trigger()}catch(s){e||(e=s)}t=n}}if(e)throw e}let G=!0;const De=[];function fe(){De.push(G),G=!1}function de(){const e=De.pop();G=e===void 0?!0:e}class Fe{constructor(t){this.computed=t,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(t){}trigger(t){this.version++,this.notify(t)}notify(t){ue();try{for(let n=this.subs;n;n=n.prevSub)n.sub.notify()&&n.sub.dep.notify()}finally{le()}}}const he=new WeakMap,C=Symbol(""),pe=Symbol(""),H=Symbol("");function E(e,t,n){if(G&&Tt){let s=he.get(e);s||he.set(e,s=new Map);let r=s.get(n);r||(s.set(n,r=new Fe),r.map=s,r.key=n),r.track()}}function I(e,t,n,s,r,o){const i=he.get(e);if(!i)return;const c=a=>{a&&a.trigger()};if(ue(),t==="clear")i.forEach(c);else{const a=z(e),u=a&&ie(n);if(a&&n==="length"){const l=Number(s);i.forEach((f,d)=>{(d==="length"||d===H||!L(d)&&d>=l)&&c(f)})}else switch((n!==void 0||i.has(void 0))&&c(i.get(n)),u&&c(i.get(H)),t){case"add":a?u&&c(i.get("length")):(c(i.get(C)),Y(e)&&c(i.get(pe)));break;case"delete":a||(c(i.get(C)),Y(e)&&c(i.get(pe)));break;case"set":Y(e)&&c(i.get(C));break}}le()}function $(e){const t=p(e);return t===e?t:(E(t,"iterate",H),N(e)?t:t.map(v))}function ge(e){return E(e=p(e),"iterate",H),e}const zt={__proto__:null,[Symbol.iterator](){return _e(this,Symbol.iterator,v)},concat(...e){return $(this).concat(...e.map(t=>z(t)?$(t):t))},entries(){return _e(this,"entries",e=>(e[1]=v(e[1]),e))},every(e,t){return O(this,"every",e,t,void 0,arguments)},filter(e,t){return O(this,"filter",e,t,n=>n.map(v),arguments)},find(e,t){return O(this,"find",e,t,v,arguments)},findIndex(e,t){return O(this,"findIndex",e,t,void 0,arguments)},findLast(e,t){return O(this,"findLast",e,t,v,arguments)},findLastIndex(e,t){return O(this,"findLastIndex",e,t,void 0,arguments)},forEach(e,t){return O(this,"forEach",e,t,void 0,arguments)},includes(...e){return me(this,"includes",e)},indexOf(...e){return me(this,"indexOf",e)},join(e){return $(this).join(e)},lastIndexOf(...e){return me(this,"lastIndexOf",e)},map(e,t){return O(this,"map",e,t,void 0,arguments)},pop(){return K(this,"pop")},push(...e){return K(this,"push",e)},reduce(e,...t){return Pe(this,"reduce",e,t)},reduceRight(e,...t){return Pe(this,"reduceRight",e,t)},shift(){return K(this,"shift")},some(e,t){return O(this,"some",e,t,void 0,arguments)},splice(...e){return K(this,"splice",e)},toReversed(){return $(this).toReversed()},toSorted(e){return $(this).toSorted(e)},toSpliced(...e){return $(this).toSpliced(...e)},unshift(...e){return K(this,"unshift",e)},values(){return _e(this,"values",v)}};function _e(e,t,n){const s=ge(e),r=s[t]();return s!==e&&!N(e)&&(r._next=r.next,r.next=()=>{const o=r._next();return o.value&&(o.value=n(o.value)),o}),r}const Ct=Array.prototype;function O(e,t,n,s,r,o){const i=ge(e),c=i!==e&&!N(e),a=i[t];if(a!==Ct[t]){const f=a.apply(e,o);return c?v(f):f}let u=n;i!==e&&(c?u=function(f,d){return n.call(this,v(f),d,e)}:n.length>2&&(u=function(f,d){return n.call(this,f,d,e)}));const l=a.call(i,u,s);return c&&r?r(l):l}function Pe(e,t,n,s){const r=ge(e);let o=n;return r!==e&&(N(e)?n.length>3&&(o=function(i,c,a){return n.call(this,i,c,a,e)}):o=function(i,c,a){return n.call(this,i,v(c),a,e)}),r[t](o,...s)}function me(e,t,n){const s=p(e);E(s,"iterate",H);const r=s[t](...n);return(r===-1||r===!1)&&Jt(n[0])?(n[0]=p(n[0]),s[t](...n)):r}function K(e,t,n=[]){fe(),ue();const s=p(e)[t].apply(e,n);return le(),de(),s}const Vt=xt("__proto__,__v_isRef,__isVue"),Ae=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(L));function kt(e){L(e)||(e=String(e));const t=p(this);return E(t,"has",e),t.hasOwnProperty(e)}class Le{constructor(t=!1,n=!1){this._isReadonly=t,this._isShallow=n}get(t,n,s){if(n==="__v_skip")return t.__v_skip;const r=this._isReadonly,o=this._isShallow;if(n==="__v_isReactive")return!r;if(n==="__v_isReadonly")return r;if(n==="__v_isShallow")return o;if(n==="__v_raw")return s===(r?o?Kt:Ke:o?Ht:He).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(s)?t:void 0;const i=z(t);if(!r){let a;if(i&&(a=zt[n]))return a;if(n==="hasOwnProperty")return kt}const c=Reflect.get(t,n,V(t)?t:s);return(L(n)?Ae.has(n):Vt(n))||(r||E(t,"get",n),o)?c:V(c)?i&&ie(n)?c:c.value:B(c)?r?Ue(c):qe(c):c}}class $t extends Le{constructor(t=!1){super(!1,t)}set(t,n,s,r){let o=t[n];if(!this._isShallow){const a=j(o);if(!N(s)&&!j(s)&&(o=p(o),s=p(s)),!z(t)&&V(o)&&!V(s))return a?!1:(o.value=s,!0)}const i=z(t)&&ie(n)?Number(n)<t.length:se(t,n),c=Reflect.set(t,n,s,V(t)?t:r);return t===p(r)&&(i?W(s,o)&&I(t,"set",n,s,o):I(t,"add",n,s)),c}deleteProperty(t,n){const s=se(t,n),r=t[n],o=Reflect.deleteProperty(t,n);return o&&s&&I(t,"delete",n,void 0,r),o}has(t,n){const s=Reflect.has(t,n);return(!L(n)||!Ae.has(n))&&E(t,"has",n),s}ownKeys(t){return E(t,"iterate",z(t)?"length":C),Reflect.ownKeys(t)}}class jt extends Le{constructor(t=!1){super(!0,t)}set(t,n){return!0}deleteProperty(t,n){return!0}}const Dt=new $t,Ft=new jt,ye=e=>e,Q=e=>Reflect.getPrototypeOf(e);function Pt(e,t,n){return function(...s){const r=this.__v_raw,o=p(r),i=Y(o),c=e==="entries"||e===Symbol.iterator&&i,a=e==="keys"&&i,u=r[e](...s),l=n?ye:t?we:v;return!t&&E(o,"iterate",a?pe:C),{next(){const{value:f,done:d}=u.next();return d?{value:f,done:d}:{value:c?[l(f[0]),l(f[1])]:l(f),done:d}},[Symbol.iterator](){return this}}}}function X(e){return function(...t){return e==="delete"?!1:e==="clear"?void 0:this}}function At(e,t){const n={get(r){const o=this.__v_raw,i=p(o),c=p(r);e||(W(r,c)&&E(i,"get",r),E(i,"get",c));const{has:a}=Q(i),u=t?ye:e?we:v;if(a.call(i,r))return u(o.get(r));if(a.call(i,c))return u(o.get(c));o!==i&&o.get(r)},get size(){const r=this.__v_raw;return!e&&E(p(r),"iterate",C),Reflect.get(r,"size",r)},has(r){const o=this.__v_raw,i=p(o),c=p(r);return e||(W(r,c)&&E(i,"has",r),E(i,"has",c)),r===c?o.has(r):o.has(r)||o.has(c)},forEach(r,o){const i=this,c=i.__v_raw,a=p(c),u=t?ye:e?we:v;return!e&&E(a,"iterate",C),c.forEach((l,f)=>r.call(o,u(l),u(f),i))}};return ze(n,e?{add:X("add"),set:X("set"),delete:X("delete"),clear:X("clear")}:{add(r){!t&&!N(r)&&!j(r)&&(r=p(r));const o=p(this);return Q(o).has.call(o,r)||(o.add(r),I(o,"add",r,r)),this},set(r,o){!t&&!N(o)&&!j(o)&&(o=p(o));const i=p(this),{has:c,get:a}=Q(i);let u=c.call(i,r);u||(r=p(r),u=c.call(i,r));const l=a.call(i,r);return i.set(r,o),u?W(o,l)&&I(i,"set",r,o,l):I(i,"add",r,o),this},delete(r){const o=p(this),{has:i,get:c}=Q(o);let a=i.call(o,r);a||(r=p(r),a=i.call(o,r));const u=c?c.call(o,r):void 0,l=o.delete(r);return a&&I(o,"delete",r,void 0,u),l},clear(){const r=p(this),o=r.size!==0,i=void 0,c=r.clear();return o&&I(r,"clear",void 0,void 0,i),c}}),["keys","values","entries",Symbol.iterator].forEach(r=>{n[r]=Pt(r,e,t)}),n}function We(e,t){const n=At(e,t);return(s,r,o)=>r==="__v_isReactive"?!e:r==="__v_isReadonly"?e:r==="__v_raw"?s:Reflect.get(se(n,r)&&r in s?n:s,r,o)}const Lt={get:We(!1,!1)},Wt={get:We(!0,!1)};function Wn(e,t,n){const s=p(n);if(s!==n&&t.call(e,s)){const r=ke(e);Rt(`Reactive ${r} contains both the raw and reactive versions of the same object${r==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}const He=new WeakMap,Ht=new WeakMap,Ke=new WeakMap,Kt=new WeakMap;function qt(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Ut(e){return e.__v_skip||!Object.isExtensible(e)?0:qt(ke(e))}function qe(e){return j(e)?e:Je(e,!1,Dt,Lt,He)}function Ue(e){return Je(e,!0,Ft,Wt,Ke)}function Je(e,t,n,s,r){if(!B(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const o=Ut(e);if(o===0)return e;const i=r.get(e);if(i)return i;const c=new Proxy(e,o===2?s:n);return r.set(e,c),c}function j(e){return!!(e&&e.__v_isReadonly)}function N(e){return!!(e&&e.__v_isShallow)}function Jt(e){return e?!!e.__v_raw:!1}function p(e){const t=e&&e.__v_raw;return t?p(t):e}const v=e=>B(e)?qe(e):e,we=e=>B(e)?Ue(e):e;function V(e){return e?e.__v_isRef===!0:!1}function Yt(e){return Bt(e,!1)}function Bt(e,t){return V(e)?e:new Gt(e,t)}class Gt{constructor(t,n){this.dep=new Fe,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=n?t:p(t),this._value=n?t:v(t),this.__v_isShallow=n}get value(){return this.dep.track(),this._value}set value(t){const n=this._rawValue,s=this.__v_isShallow||N(t)||j(t);t=s?t:p(t),W(t,n)&&(this._rawValue=t,this._value=s?t:v(t),this.dep.trigger())}}/**
* @vue/runtime-core v3.5.17
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const k=[];function Hn(e){k.push(e)}function Kn(){k.pop()}let be=!1;function qn(e,...t){if(be)return;be=!0,fe();const n=k.length?k[k.length-1].component:null,s=n&&n.appContext.config.warnHandler,r=Qt();if(s)ve(s,n,11,[e+t.map(o=>{var i,c;return(c=(i=o.toString)==null?void 0:i.call(o))!=null?c:JSON.stringify(o)}).join(""),n&&n.proxy,r.map(({vnode:o})=>`at <${et(n,o.type)}>`).join(`
`),r]);else{const o=[`[Vue warn]: ${e}`,...t];r.length&&o.push(`
`,...Xt(r)),console.warn(...o)}de(),be=!1}function Qt(){let e=k[k.length-1];if(!e)return[];const t=[];for(;e;){const n=t[0];n&&n.vnode===e?n.recurseCount++:t.push({vnode:e,recurseCount:0});const s=e.component&&e.component.parent;e=s&&s.vnode}return t}function Xt(e){const t=[];return e.forEach((n,s)=>{t.push(...s===0?[]:[`
`],...Zt(n))}),t}function Zt({vnode:e,recurseCount:t}){const n=t>0?`... (${t} recursive calls)`:"",s=e.component?e.component.parent==null:!1,r=` at <${et(e.component,e.type,s)}`,o=">"+n;return e.props?[r,...en(e.props),o]:[r+o]}function en(e){const t=[],n=Object.keys(e);return n.slice(0,3).forEach(s=>{t.push(...Ye(s,e[s]))}),n.length>3&&t.push(" ..."),t}function Ye(e,t,n){return Ce(t)?(t=JSON.stringify(t),n?t:[`${e}=${t}`]):typeof t=="number"||typeof t=="boolean"||t==null?n?t:[`${e}=${t}`]:V(t)?(t=Ye(e,p(t.value),!0),n?t:[`${e}=Ref<`,t,">"]):oe(t)?[`${e}=fn${t.name?`<${t.name}>`:""}`]:(t=p(t),n?t:[`${e}=`,t])}const Un={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",0:"setup function",1:"render function",2:"watcher getter",3:"watcher callback",4:"watcher cleanup function",5:"native event handler",6:"component event handler",7:"vnode hook",8:"directive hook",9:"transition hook",10:"app errorHandler",11:"app warnHandler",12:"ref function",13:"async component loader",14:"scheduler flush",15:"component update",16:"app unmount cleanup function"};function ve(e,t,n,s){try{return s?e(...s):e()}catch(r){Be(r,t,n)}}function Be(e,t,n,s=!0){const r=t?t.vnode:null,{errorHandler:o,throwUnhandledErrorInProduction:i}=t&&t.appContext.config||Ot;if(t){let c=t.parent;const a=t.proxy,u=`https://vuejs.org/error-reference/#runtime-${n}`;for(;c;){const l=c.ec;if(l){for(let f=0;f<l.length;f++)if(l[f](e,a,u)===!1)return}c=c.parent}if(o){fe(),ve(o,null,10,[e,a,u]),de();return}}tn(e,n,r,s,i)}function tn(e,t,n,s=!0,r=!1){if(r)throw e;console.error(e)}const x=[];let S=-1;const D=[];let M=null,F=0;const nn=Promise.resolve();let Ee=null;const rn=100;function sn(e){let t=S+1,n=x.length;for(;t<n;){const s=t+n>>>1,r=x[s],o=q(r);o<e||o===e&&r.flags&2?t=s+1:n=s}return t}function on(e){if(!(e.flags&1)){const t=q(e),n=x[x.length-1];!n||!(e.flags&2)&&t>=q(n)?x.push(e):x.splice(sn(t),0,e),e.flags|=1,Ge()}}function Ge(){Ee||(Ee=nn.then(Qe))}function cn(e){z(e)?D.push(...e):M&&e.id===-1?M.splice(F+1,0,e):e.flags&1||(D.push(e),e.flags|=1),Ge()}function an(e){if(D.length){const t=[...new Set(D)].sort((n,s)=>q(n)-q(s));if(D.length=0,M){M.push(...t);return}for(M=t,F=0;F<M.length;F++){const n=M[F];n.flags&4&&(n.flags&=-2),n.flags&8||n(),n.flags&=-2}M=null,F=0}}const q=e=>e.id==null?e.flags&2?-1:1/0:e.id;function Qe(e){const t=St;try{for(S=0;S<x.length;S++){const n=x[S];n&&!(n.flags&8)&&(n.flags&4&&(n.flags&=-2),ve(n,n.i,n.i?15:14),n.flags&4||(n.flags&=-2))}}finally{for(;S<x.length;S++){const n=x[S];n&&(n.flags&=-2)}S=-1,x.length=0,an(e),Ee=null,(x.length||D.length)&&Qe(e)}}function Jn(e,t){const n=e.get(t)||0;if(n>rn){const s=t.i,r=s&&Ze(s.type);return Be(`Maximum recursive updates exceeded${r?` in component <${r}>`:""}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`,null,10),!0}return e.set(t,n+1),!1}const xe=new Map,Z=new Map;function Yn(e,t){return Z.has(e)?!1:(Z.set(e,{initialDef:ee(t),instances:new Set}),!0)}function ee(e){return fn(e)?e.__vccOpts:e}function Bn(e,t){const n=Z.get(e);n&&(n.initialDef.render=t,[...n.instances].forEach(s=>{t&&(s.render=t,ee(s.type).render=t),s.renderCache=[],s.update()}))}function Gn(e,t){const n=Z.get(e);if(!n)return;t=ee(t),Xe(n.initialDef,t);const s=[...n.instances];for(let r=0;r<s.length;r++){const o=s[r],i=ee(o.type);let c=xe.get(i);c||(i!==n.initialDef&&Xe(i,t),xe.set(i,c=new Set)),c.add(o),o.appContext.propsCache.delete(o.type),o.appContext.emitsCache.delete(o.type),o.appContext.optionsCache.delete(o.type),o.ceReload?(c.add(o),o.ceReload(t.styles),c.delete(o)):o.parent?on(()=>{o.parent.update(),c.delete(o)}):o.appContext.reload?o.appContext.reload():typeof window<"u"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required."),o.root.ce&&o!==o.root&&o.root.ce._removeChildStyle(i)}cn(()=>{xe.clear()})}function Xe(e,t){ze(e,t);for(const n in e)n!=="__file"&&!(n in t)&&delete e[n]}function Qn(e){return(t,n)=>{try{return e(t,n)}catch(s){console.error(s),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}ce().requestIdleCallback,ce().cancelIdleCallback;const Xn={};{const e=ce(),t=(n,s)=>{let r;return(r=e[n])||(r=e[n]=[]),r.push(s),o=>{r.length>1?r.forEach(i=>i(o)):r[0](o)}};t("__VUE_INSTANCE_SETTERS__",n=>n),t("__VUE_SSR_SETTERS__",n=>n)}const un=/(?:^|[-_])(\w)/g,ln=e=>e.replace(un,t=>t.toUpperCase()).replace(/[-_]/g,"");function Ze(e,t=!0){return oe(e)?e.displayName||e.name:e.name||t&&e.__name}function et(e,t,n=!1){let s=Ze(t);if(!s&&t.__file){const r=t.__file.match(/([^/\\]+)\.\w+$/);r&&(s=r[1])}if(!s&&e&&e.parent){const r=o=>{for(const i in o)if(o[i]===t)return i};s=r(e.components||e.parent.type.components)||r(e.appContext.components)}return s?ln(s):n?"App":"Anonymous"}function fn(e){return oe(e)&&"__vccOpts"in e}const tt=()=>document.documentElement.getAttribute("data-theme")==="dark";[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:dn}=Object,{fromEntries:hn}=Object,nt=Yt(!1);typeof document<"u"&&(nt.value=tt(),new MutationObserver(()=>{nt.value=tt()}).observe(document.documentElement,{attributeFilter:["data-theme"],attributes:!0}));const pn="ENTRIES",rt="KEYS",st="VALUES",w="";class Oe{set;_type;_path;constructor(t,n){const s=t._tree,r=Array.from(s.keys());this.set=t,this._type=n,this._path=r.length>0?[{node:s,keys:r}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:n}=P(this._path);if(P(n)===w)return{done:!1,value:this.result()};const s=t.get(P(n));return this._path.push({node:s,keys:Array.from(s.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=P(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>P(t)).filter(t=>t!==w).join("")}value(){return P(this._path).node.get(w)}result(){switch(this._type){case st:return this.value();case rt:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const P=e=>e[e.length-1],gn=(e,t,n)=>{const s=new Map;if(typeof t!="string")return s;const r=t.length+1,o=r+n,i=new Uint8Array(o*r).fill(n+1);for(let c=0;c<r;++c)i[c]=c;for(let c=1;c<o;++c)i[c*r]=c;return ot(e,t,n,s,i,1,r,""),s},ot=(e,t,n,s,r,o,i,c)=>{const a=o*i;e:for(const u of e.keys())if(u===w){const l=r[a-1];l<=n&&s.set(c,[e.get(u),l])}else{let l=o;for(let f=0;f<u.length;++f,++l){const d=u[f],m=i*l,b=m-i;let g=r[m];const h=Math.max(0,l-n-1),_=Math.min(i-1,l+n);for(let y=h;y<_;++y){const R=d!==t[y],re=r[b+y]+ +R,J=r[b+y+1]+1,T=r[m+y]+1,A=r[m+y+1]=Math.min(re,J,T);A<g&&(g=A)}if(g>n)continue e}ot(e.get(u),t,n,s,r,l,i,c+u)}};let it=class U{_tree;_prefix;_size=void 0;constructor(t=new Map,n=""){this._tree=t,this._prefix=n}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[n,s]=te(this._tree,t.slice(this._prefix.length));if(n===void 0){const[r,o]=Ne(s);for(const i of r.keys())if(i!==w&&i.startsWith(o)){const c=new Map;return c.set(i.slice(o.length),r.get(i)),new U(c,t)}}return new U(n,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,_n(this._tree,t)}entries(){return new Oe(this,pn)}forEach(t){for(const[n,s]of this)t(n,s,this)}fuzzyGet(t,n){return gn(this._tree,t,n)}get(t){const n=Se(this._tree,t);return n!==void 0?n.get(w):void 0}has(t){return Se(this._tree,t)?.has(w)??!1}keys(){return new Oe(this,rt)}set(t,n){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,Ie(this._tree,t).set(w,n),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,n){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const s=Ie(this._tree,t);return s.set(w,n(s.get(w))),this}fetch(t,n){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const s=Ie(this._tree,t);let r=s.get(w);return r===void 0&&s.set(w,r=n()),r}values(){return new Oe(this,st)}[Symbol.iterator](){return this.entries()}static from(t){const n=new U;for(const[s,r]of t)n.set(s,r);return n}static fromObject(t){return U.from(Object.entries(t))}};const te=(e,t,n=[])=>{if(t.length===0||e==null)return[e,n];for(const s of e.keys())if(s!==w&&t.startsWith(s))return n.push([e,s]),te(e.get(s),t.slice(s.length),n);return n.push([e,t]),te(void 0,"",n)},Se=(e,t)=>{if(t.length===0||!e)return e;for(const n of e.keys())if(n!==w&&t.startsWith(n))return Se(e.get(n),t.slice(n.length))},Ie=(e,t)=>{const n=t.length;e:for(let s=0;e&&s<n;){for(const o of e.keys())if(o!==w&&t[s]===o[0]){const i=Math.min(n-s,o.length);let c=1;for(;c<i&&t[s+c]===o[c];)++c;const a=e.get(o);if(c===o.length)e=a;else{const u=new Map;u.set(o.slice(c),a),e.set(t.slice(s,s+c),u),e.delete(o),e=u}s+=c;continue e}const r=new Map;return e.set(t.slice(s),r),r}return e},_n=(e,t)=>{const[n,s]=te(e,t);if(n!==void 0){if(n.delete(w),n.size===0)ct(s);else if(n.size===1){const[r,o]=n.entries().next().value;at(s,r,o)}}},ct=e=>{if(e.length===0)return;const[t,n]=Ne(e);if(t.delete(n),t.size===0)ct(e.slice(0,-1));else if(t.size===1){const[s,r]=t.entries().next().value;s!==w&&at(e.slice(0,-1),s,r)}},at=(e,t,n)=>{if(e.length===0)return;const[s,r]=Ne(e);s.set(r+t,n),s.delete(r)},Ne=e=>e[e.length-1],mn=(e,t)=>{const n=e._idToShortId.get(t);if(n!=null)return e._storedFields.get(n)},yn=/[\n\r\p{Z}\p{P}]+/u,Me="or",ut="and",wn="and_not",bn=(e,t)=>{e.includes(t)||e.push(t)},lt=(e,t)=>{for(const n of t)e.includes(n)||e.push(n)},ft=({score:e},{score:t})=>t-e,vn=()=>new Map,ne=e=>{const t=new Map;for(const n of Object.keys(e))t.set(parseInt(n,10),e[n]);return t},dt=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[Me]:(e,t)=>{for(const n of t.keys()){const s=e.get(n);if(s==null)e.set(n,t.get(n));else{const{score:r,terms:o,match:i}=t.get(n);s.score=s.score+r,s.match=Object.assign(s.match,i),lt(s.terms,o)}}return e},[ut]:(e,t)=>{const n=new Map;for(const s of t.keys()){const r=e.get(s);if(r==null)continue;const{score:o,terms:i,match:c}=t.get(s);lt(r.terms,i),n.set(s,{score:r.score+o,terms:r.terms,match:Object.assign(r.match,c)})}return n},[wn]:(e,t)=>{for(const n of t.keys())e.delete(n);return e}},En=(e,t,n,s,r,o)=>{const{k:i,b:c,d:a}=o;return Math.log(1+(n-t+.5)/(t+.5))*(a+e*(i+1)/(e+i*(1-c+c*s/r)))},xn=e=>(t,n,s)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,n,s):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,n,s):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,n,s):1}),pt=(e,t,n,s)=>{for(const r of Object.keys(e._fieldIds))if(e._fieldIds[r]===n){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${s}" was not present in field "${r}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},On=(e,t,n,s)=>{if(!e._index.has(s)){pt(e,n,t,s);return}const r=e._index.fetch(s,vn),o=r.get(t),i=o?.get(n);!o||typeof i>"u"?pt(e,n,t,s):i<=1?o.size<=1?r.delete(t):o.delete(n):o.set(n,i-1),e._index.get(s).size===0&&e._index.delete(s)},Sn={k:1.2,b:.7,d:.5},In={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(yn),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},gt={combineWith:Me,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:Sn},Nn={combineWith:ut,prefix:(e,t,n)=>t===n.length-1},Mn={batchSize:1e3,batchWait:10},_t={minDirtFactor:.1,minDirtCount:20},Rn={...Mn,..._t},mt=Symbol("*"),Tn=(e,t)=>{const n=new Map,s={...e._options.searchOptions,...t};for(const[r,o]of e._documentIds){const i=s.boostDocument?s.boostDocument(o,"",e._storedFields.get(r)):1;n.set(r,{score:i,terms:[],match:{}})}return n},yt=(e,t=Me)=>{if(e.length===0)return new Map;const n=t.toLowerCase();if(!(n in ht))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(ht[n])},Re=(e,t,n,s,r,o,i,c,a,u=new Map)=>{if(o==null)return u;for(const l of Object.keys(i)){const f=i[l],d=e._fieldIds[l],m=o.get(d);if(m==null)continue;let b=m.size;const g=e._avgFieldLength[d];for(const h of m.keys()){if(!e._documentIds.has(h)){On(e,d,h,n),b-=1;continue}const _=c?c(e._documentIds.get(h),n,e._storedFields.get(h)):1;if(!_)continue;const y=m.get(h),R=e._fieldLength.get(h)[d],re=En(y,b,e._documentCount,R,g,a),J=s*r*f*_*re,T=u.get(h);if(T){T.score+=J,bn(T.terms,t);const A=dt(T.match,n);A?A.push(l):T.match[n]=[l]}else u.set(h,{score:J,terms:[t],match:{[n]:[l]}})}}return u},zn=(e,t,n)=>{const s={...e._options.searchOptions,...n},r=(s.fields??e._options.fields).reduce((g,h)=>({...g,[h]:dt(s.boost,h)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:c,bm25:a}=s,{fuzzy:u,prefix:l}={...gt.weights,...i},f=e._index.get(t.term),d=Re(e,t.term,t.term,1,t.termBoost,f,r,o,a);let m,b;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const g=t.fuzzy===!0?.2:t.fuzzy,h=g<1?Math.min(c,Math.round(t.term.length*g)):g;h&&(b=e._index.fuzzyGet(t.term,h))}if(m)for(const[g,h]of m){const _=g.length-t.term.length;if(!_)continue;b?.delete(g);const y=l*g.length/(g.length+.3*_);Re(e,t.term,g,y,t.termBoost,h,r,o,a,d)}if(b)for(const g of b.keys()){const[h,_]=b.get(g);if(!_)continue;const y=u*g.length/(g.length+_);Re(e,t.term,g,y,t.termBoost,h,r,o,a,d)}return d},wt=(e,t,n={})=>{if(t===mt)return Tn(e,n);if(typeof t!="string"){const l={...n,...t,queries:void 0},f=t.queries.map(d=>wt(e,d,l));return yt(f,l.combineWith)}const{tokenize:s,processTerm:r,searchOptions:o}=e._options,i={tokenize:s,processTerm:r,...o,...n},{tokenize:c,processTerm:a}=i,u=c(t).flatMap(l=>a(l)).filter(l=>!!l).map(xn(i)).map(l=>zn(e,l,i));return yt(u,i.combineWith)},bt=(e,t,n={})=>{const{searchOptions:s}=e._options,r={...s,...n},o=wt(e,t,n),i=[];for(const[c,{score:a,terms:u,match:l}]of o){const f=u.length||1,d={id:e._documentIds.get(c),score:a*f,terms:Object.keys(l),queryTerms:u,match:l};Object.assign(d,e._storedFields.get(c)),(r.filter==null||r.filter(d))&&i.push(d)}return t===mt&&r.boostDocument==null||i.sort(ft),i},Cn=(e,t,n={})=>{n={...e._options.autoSuggestOptions,...n};const s=new Map;for(const{score:o,terms:i}of bt(e,t,n)){const c=i.join(" "),a=s.get(c);a!=null?(a.score+=o,a.count+=1):s.set(c,{score:o,terms:i,count:1})}const r=[];for(const[o,{score:i,terms:c,count:a}]of s)r.push({suggestion:o,terms:c,score:i/a});return r.sort(ft),r};class Vn{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const n=t.autoVacuum==null||t.autoVacuum===!0?Rn:t.autoVacuum;this._options={...In,...t,autoVacuum:n,searchOptions:{...gt,...t.searchOptions},autoSuggestOptions:{...Nn,...t.autoSuggestOptions}},this._index=new it,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=_t,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[n,s]of this._index){const r={};for(const[o,i]of s)r[o]=Object.fromEntries(i);t.push([n,r])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let n=0;n<t.length;n++)this._fieldIds[t[n]]=n}}const kn=e=>new Vn(e),$n=({documentCount:e,nextId:t,fieldIds:n,averageFieldLength:s,dirtCount:r,version:o},i)=>{if(o!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=kn(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=n,c._avgFieldLength=s,c._dirtCount=r??0,c._index=new it,c},jn=(e,t)=>{const{index:n,documentIds:s,fieldLength:r,storedFields:o}=e,i=$n(e,t);i._documentIds=ne(s),i._fieldLength=ne(r),i._storedFields=ne(o);for(const[c,a]of i._documentIds)i._idToShortId.set(a,c);for(const[c,a]of n){const u=new Map;for(const l of Object.keys(a))u.set(parseInt(l,10),ne(a[l]));i._index.set(c,u)}return i},Te=(e,t)=>{const n=e.toLowerCase(),s=t.toLowerCase(),r=[];let o=0,i=0;const c=(u,l=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:l?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&r.push(f),i+=f.length,l||(r.push(["mark",t]),i+=t.length,i>=100&&r.push(" …"))};let a=n.indexOf(s,o);if(a===-1)return null;for(;a>=0;){const u=a+s.length;if(c(e.slice(o,a)),o=u,i>100)break;a=n.indexOf(s,o)}return i<100&&c(e.slice(o),!0),r},{entries:Dn}=Object,Fn=(e,t)=>t.contents.reduce((n,[,s])=>n+s,0)-e.contents.reduce((n,[,s])=>n+s,0),Pn=(e,t)=>Math.max(...t.contents.map(([,n])=>n))-Math.max(...e.contents.map(([,n])=>n)),vt=(e,t,n={},s="max")=>{const r={};return bt(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...n}).forEach(o=>{const{id:i,terms:c,score:a}=o,u=i.includes("@"),l=i.includes("#"),[f,d]=i.split(/[#@]/),m=Number(f),b=c.sort((h,_)=>h.length-_.length).filter((h,_)=>c.slice(_+1).every(y=>!y.includes(h))),{contents:g}=r[m]??={title:"",contents:[]};if(u)g.push([{type:"customField",id:m,index:d,display:b.map(h=>o.c.map(_=>Te(_,h))).flat().filter(h=>h!==null)},a]);else{const h=b.map(_=>Te(o.h,_)).filter(_=>_!==null);if(h.length&&g.push([{type:l?"heading":"title",id:m,...l&&{anchor:d},display:h},a]),"t"in o&&o.t)for(const _ of o.t){const y=b.map(R=>Te(_,R)).filter(R=>R!==null);y.length&&g.push([{type:"text",id:m,...l&&{anchor:d},display:y},a])}}}),Dn(r).sort(([,o],[,i])=>(s?Fn:Pn)(o,i)).map(([o,{title:i,contents:c}])=>{if(!i){const a=mn(t,o);a&&(i=a.h)}return{title:i,contents:c.map(([a])=>a)}})},Et=(e,t,n={})=>{const s=Cn(t,e,{fuzzy:.2,maxFuzzy:3,...n}).map(({suggestion:r})=>r);return e.includes(" ")?s:s.filter(r=>!r.includes(" "))},An=hn(dn(JSON.parse("{\"/\":{\"documentCount\":244,\"nextId\":244,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\",\"3\":\"2@0\",\"4\":\"3\",\"5\":\"3@0\",\"6\":\"4\",\"7\":\"4@0\",\"8\":\"5\",\"9\":\"5@0\",\"10\":\"6\",\"11\":\"6@0\",\"12\":\"7\",\"13\":\"7@0\",\"14\":\"8\",\"15\":\"8@0\",\"16\":\"8@1\",\"17\":\"9\",\"18\":\"9@0\",\"19\":\"9@1\",\"20\":\"10\",\"21\":\"10#一、多媒体工具\",\"22\":\"10#录屏工具\",\"23\":\"10#gif工具\",\"24\":\"10#截图工具\",\"25\":\"10#解压缩文件\",\"26\":\"10#贴图处理\",\"27\":\"10#二、unity游戏解包\",\"28\":\"10#三、开发工具\",\"29\":\"10#安卓终端\",\"30\":\"10@0\",\"31\":\"10@1\",\"32\":\"11\",\"33\":\"11#前言\",\"34\":\"11#dependencies\",\"35\":\"11#todos\",\"36\":\"11@0\",\"37\":\"11@1\",\"38\":\"12\",\"39\":\"12@0\",\"40\":\"13\",\"41\":\"13@0\",\"42\":\"14\",\"43\":\"14@0\",\"44\":\"14@1\",\"45\":\"15\",\"46\":\"15#_0-前言\",\"47\":\"15#_1-原理\",\"48\":\"15#_2-具体实现\",\"49\":\"15#_3-详细证明\",\"50\":\"15#_4-unity中实现flowmap\",\"51\":\"15@0\",\"52\":\"15@1\",\"53\":\"16\",\"54\":\"16@0\",\"55\":\"17\",\"56\":\"17@0\",\"57\":\"18\",\"58\":\"18#线性空间和gamma空间\",\"59\":\"18#附件\",\"60\":\"18#_1-unity生成线性空间和gamma空间图片的自定义窗口\",\"61\":\"18#_2-matlab绘制转换函数曲线\",\"62\":\"18@0\",\"63\":\"18@1\",\"64\":\"19\",\"65\":\"19#_1-git代理设置\",\"66\":\"19#_2-tortoisegit-ssh客户端配置\",\"67\":\"19@0\",\"68\":\"19@1\",\"69\":\"20\",\"70\":\"20@0\",\"71\":\"21\",\"72\":\"21#一、-安装samba\",\"73\":\"21#二、-创建共享文件夹\",\"74\":\"21#三、-配置samba\",\"75\":\"21#四、-设置samba用户\",\"76\":\"21#五、-重启samba服务\",\"77\":\"21#六、-访问共享\",\"78\":\"21#_1-华为手机访问\",\"79\":\"21#_2-windows访问\",\"80\":\"21#_3-windows挂载\",\"81\":\"21#_4-ipad挂载\",\"82\":\"21#七、-troubleshoot\",\"83\":\"21@0\",\"84\":\"21@1\",\"85\":\"22\",\"86\":\"22@0\",\"87\":\"23\",\"88\":\"23#在ubuntu上部署git-server\",\"89\":\"23#一、部署服务器\",\"90\":\"23#_1-安装必需的软件包\",\"91\":\"23#_2-配置gitweb\",\"92\":\"23#_3-配置apache\",\"93\":\"23#_4-测试配置\",\"94\":\"23#二、gitserver管理\",\"95\":\"23#_1-创建git用户\",\"96\":\"23#_2-初始化仓库\",\"97\":\"23#_3-配置ssh访问-可选\",\"98\":\"23#_4-测试\",\"99\":\"23@0\",\"100\":\"23@1\",\"101\":\"24\",\"102\":\"24@0\",\"103\":\"25\",\"104\":\"25#_1-通过软件源安装\",\"105\":\"25#_1-添加公钥\",\"106\":\"25#_2-添加-v2raya-软件源\",\"107\":\"25#_3-安装-v2raya\",\"108\":\"25#_2-初始化配置\",\"109\":\"25@0\",\"110\":\"25@1\",\"111\":\"26\",\"112\":\"26#_1-树莓派安装ubuntu-server后-每次开机卡在-a-start-job-is-running-for-wait-for-network-to-be-configured\",\"113\":\"26@0\",\"114\":\"26@1\",\"115\":\"27\",\"116\":\"27@0\",\"117\":\"28\",\"118\":\"28@0\",\"119\":\"28@1\",\"120\":\"29\",\"121\":\"29@0\",\"122\":\"30\",\"123\":\"30#_1-参数解释\",\"124\":\"30#_2-solidworks建模\",\"125\":\"30#_3-便捷工具\",\"126\":\"30@0\",\"127\":\"30@1\",\"128\":\"31\",\"129\":\"31@0\",\"130\":\"32\",\"131\":\"32#一、-基于platformio和stm32cubemx\",\"132\":\"32#_1-stm32cubemx生成工程代码\",\"133\":\"32#_2-安装platformio-配置项目\",\"134\":\"32#_3-编译、上传、调试\",\"135\":\"32#二、-基于vscode和stm32-vs-code-extension\",\"136\":\"32#_1-下载stm32cubemx和stm32cubeclt\",\"137\":\"32#_2-stm32-vs-code-extension配置\",\"138\":\"32@0\",\"139\":\"32@1\",\"140\":\"33\",\"141\":\"33@0\",\"142\":\"34\",\"143\":\"34#零、-数据结构\",\"144\":\"34#一、-射线与aabb求交算法\",\"145\":\"34#二、-线段与aabb求交算法\",\"146\":\"34#_1-射线法\",\"147\":\"34#_2-liang-barsky算法\",\"148\":\"34#_3-cohen-sutherland算法\",\"149\":\"34#三、-测试代码\",\"150\":\"34@0\",\"151\":\"34@1\",\"152\":\"35\",\"153\":\"35@0\",\"154\":\"35@1\",\"155\":\"36\",\"156\":\"36@0\",\"157\":\"37\",\"158\":\"37@0\",\"159\":\"37@1\",\"160\":\"38\",\"161\":\"38#_1-大数字分隔显示\",\"162\":\"38#_2-文本对齐与填充\",\"163\":\"38#_3-日期时间格式化\",\"164\":\"38#_4-数字精准格式化\",\"165\":\"38#_5-调试神器\",\"166\":\"38@0\",\"167\":\"38@1\",\"168\":\"39\",\"169\":\"39@0\",\"170\":\"40\",\"171\":\"40@0\",\"172\":\"41\",\"173\":\"41#_1-miniconda安装\",\"174\":\"41#_2-pytorch安装\",\"175\":\"41@0\",\"176\":\"41@1\",\"177\":\"42\",\"178\":\"42@0\",\"179\":\"43\",\"180\":\"43#一、unity-hub启用网络代理\",\"181\":\"43#二、通过python实现其他协议代理转http协议代理\",\"182\":\"43@0\",\"183\":\"43@1\",\"184\":\"44\",\"185\":\"44@0\",\"186\":\"45\",\"187\":\"45#阶段一\",\"188\":\"45#阶段二\",\"189\":\"45@0\",\"190\":\"45@1\",\"191\":\"46\",\"192\":\"46#_1-自旋锁\",\"193\":\"46#_2-互斥锁\",\"194\":\"46#_3-读写锁\",\"195\":\"46@0\",\"196\":\"46@1\",\"197\":\"47\",\"198\":\"47#_1-搭建环境\",\"199\":\"47#_2-部署到github-page\",\"200\":\"47#_3-插件安装\",\"201\":\"47@0\",\"202\":\"47@1\",\"203\":\"48\",\"204\":\"48@0\",\"205\":\"49\",\"206\":\"49@0\",\"207\":\"49@1\",\"208\":\"50\",\"209\":\"50@0\",\"210\":\"51\",\"211\":\"51#一、资源逆向\",\"212\":\"51#二、代码逆向\",\"213\":\"51@0\",\"214\":\"51@1\",\"215\":\"52\",\"216\":\"52@0\",\"217\":\"52@1\",\"218\":\"53\",\"219\":\"53@0\",\"220\":\"54\",\"221\":\"54@0\",\"222\":\"54@1\",\"223\":\"55\",\"224\":\"55#一、-安装并配置android-studio\",\"225\":\"55#_1-选择自定义安装并指定sdk目录\",\"226\":\"55#_2-进入sdk-manager中安装android-sdk-command-line-tools\",\"227\":\"55#_3-将sdk目录设置为环境变量-android-home\",\"228\":\"55#二、-unreal配置android环境\",\"229\":\"55#_1-执行engine-extras-android-setupandroid-bat\",\"230\":\"55#_2-配置sdk\",\"231\":\"55#_3-打包测试\",\"232\":\"55#三、-安装并使用agde插件\",\"233\":\"55@0\",\"234\":\"55@1\",\"235\":\"56\",\"236\":\"57\",\"237\":\"58\",\"238\":\"59\",\"239\":\"60\",\"240\":\"61\",\"241\":\"62\",\"242\":\"63\",\"243\":\"64\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,2],\"1\":[1],\"2\":[1],\"3\":[null,null,1],\"4\":[1],\"5\":[null,null,1],\"6\":[1],\"7\":[null,null,1],\"8\":[1],\"9\":[null,null,2],\"10\":[1],\"11\":[null,null,1],\"12\":[1],\"13\":[null,null,2],\"14\":[2],\"15\":[null,null,1],\"16\":[null,null,2],\"17\":[3],\"18\":[null,null,1],\"19\":[null,null,2],\"20\":[1],\"21\":[2],\"22\":[1,2],\"23\":[1,1],\"24\":[1,1],\"25\":[1,2],\"26\":[1,1],\"27\":[2,6],\"28\":[2],\"29\":[1,2],\"30\":[null,null,1],\"31\":[null,null,1],\"32\":[1],\"33\":[1,6],\"34\":[1,3],\"35\":[1,2],\"36\":[null,null,1],\"37\":[null,null,3],\"38\":[1],\"39\":[null,null,1],\"40\":[1],\"41\":[null,null,2],\"42\":[1,2],\"43\":[null,null,1],\"44\":[null,null,3],\"45\":[1,3],\"46\":[2,7],\"47\":[2,19],\"48\":[2,43],\"49\":[2,36],\"50\":[2,6],\"51\":[null,null,1],\"52\":[null,null,2],\"53\":[1],\"54\":[null,null,2],\"55\":[1],\"56\":[null,null,2],\"57\":[1],\"58\":[1,23],\"59\":[1],\"60\":[2,154],\"61\":[2,71],\"62\":[null,null,1],\"63\":[null,null,2],\"64\":[1,1],\"65\":[2,35],\"66\":[3,8],\"67\":[null,null,1],\"68\":[null,null,1],\"69\":[1],\"70\":[null,null,1],\"71\":[1,3],\"72\":[2,4],\"73\":[2,6],\"74\":[2,22],\"75\":[2,7],\"76\":[2,7],\"77\":[2],\"78\":[2,6],\"79\":[2,8],\"80\":[2,5],\"81\":[2,9],\"82\":[2,11],\"83\":[null,null,1],\"84\":[null,null,2],\"85\":[1],\"86\":[null,null,1],\"87\":[1],\"88\":[2],\"89\":[2],\"90\":[2,10],\"91\":[2,26],\"92\":[2,42],\"93\":[2,6],\"94\":[2,4],\"95\":[2,15],\"96\":[2,14],\"97\":[4,32],\"98\":[2,7],\"99\":[null,null,1],\"100\":[null,null,3],\"101\":[1],\"102\":[null,null,1],\"103\":[2,2],\"104\":[2],\"105\":[2,14],\"106\":[4,19],\"107\":[3,8],\"108\":[2,14],\"109\":[null,null,1],\"110\":[null,null,2],\"111\":[2],\"112\":[16,64],\"113\":[null,null,1],\"114\":[null,null,2],\"115\":[1],\"116\":[null,null,1],\"117\":[1,25],\"118\":[null,null,1],\"119\":[null,null,3],\"120\":[1],\"121\":[null,null,1],\"122\":[1,5],\"123\":[2,58],\"124\":[2,15],\"125\":[2,70],\"126\":[null,null,1],\"127\":[null,null,2],\"128\":[1],\"129\":[null,null,1],\"130\":[1,2],\"131\":[2],\"132\":[2,16],\"133\":[3,30],\"134\":[4,3],\"135\":[5],\"136\":[2],\"137\":[5,4],\"138\":[null,null,1],\"139\":[null,null,2],\"140\":[1],\"141\":[null,null,1],\"142\":[1,7],\"143\":[2,36],\"144\":[2,73],\"145\":[2],\"146\":[2,66],\"147\":[3,89],\"148\":[3,97],\"149\":[2,105],\"150\":[null,null,1],\"151\":[null,null,2],\"152\":[2],\"153\":[null,null,1],\"154\":[null,null,1],\"155\":[1],\"156\":[null,null,1],\"157\":[1],\"158\":[null,null,1],\"159\":[null,null,1],\"160\":[2,4],\"161\":[2,13],\"162\":[2,19],\"163\":[2,27],\"164\":[2,19],\"165\":[2,26],\"166\":[null,null,1],\"167\":[null,null,1],\"168\":[1],\"169\":[null,null,1],\"170\":[1],\"171\":[null,null,1],\"172\":[1,3],\"173\":[1,36],\"174\":[1,17],\"175\":[null,null,1],\"176\":[null,null,2],\"177\":[1],\"178\":[null,null,1],\"179\":[2],\"180\":[3,40],\"181\":[2,138],\"182\":[null,null,1],\"183\":[null,null,2],\"184\":[1],\"185\":[null,null,1],\"186\":[1,9],\"187\":[1,20],\"188\":[1,41],\"189\":[null,null,1],\"190\":[null,null,2],\"191\":[1,45],\"192\":[2,24],\"193\":[2,2],\"194\":[2,3],\"195\":[null,null,1],\"196\":[null,null,2],\"197\":[1],\"198\":[2,6],\"199\":[3,11],\"200\":[2,22],\"201\":[null,null,1],\"202\":[null,null,1],\"203\":[1],\"204\":[null,null,1],\"205\":[2,6],\"206\":[null,null,1],\"207\":[null,null,3],\"208\":[1],\"209\":[null,null,1],\"210\":[1],\"211\":[2,4],\"212\":[2,2],\"213\":[null,null,1],\"214\":[null,null,2],\"215\":[1],\"216\":[null,null,1],\"217\":[null,null,2],\"218\":[2],\"219\":[null,null,1],\"220\":[2],\"221\":[null,null,1],\"222\":[null,null,4],\"223\":[2,2],\"224\":[1],\"225\":[2,4],\"226\":[7,5],\"227\":[2,21],\"228\":[2],\"229\":[6,15],\"230\":[2,8],\"231\":[2,4],\"232\":[1,19],\"233\":[null,null,1],\"234\":[null,null,2],\"235\":[1,3],\"236\":[1],\"237\":[1],\"238\":[2],\"239\":[1],\"240\":[1],\"241\":[1],\"242\":[1],\"243\":[1]},\"averageFieldLength\":[1.718860191773324,14.234978454580677,1.1843801407433545],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"将你的个人介绍和档案放置在此处。\"]},\"1\":{\"h\":\"博客主页\"},\"2\":{\"h\":\"文章分享\"},\"3\":{\"c\":[\"分享\"]},\"4\":{\"h\":\"技术美术\"},\"5\":{\"c\":[\"技术美术\"]},\"6\":{\"h\":\"极客小屋\"},\"7\":{\"c\":[\"DIY\"]},\"8\":{\"h\":\"游戏开发\"},\"9\":{\"c\":[\"Game Develop\"]},\"10\":{\"h\":\"人工智能\"},\"11\":{\"c\":[\"人工智能\"]},\"12\":{\"h\":\"游戏引擎\"},\"13\":{\"c\":[\"Game Engine\"]},\"14\":{\"h\":\"一、C++自定义内存分配和统计\"},\"15\":{\"c\":[\"Program\"]},\"16\":{\"c\":[\"C++\",\"内存\"]},\"17\":{\"h\":\"二、类的构造与析构准则——三五法则\"},\"18\":{\"c\":[\"Program\"]},\"19\":{\"c\":[\"C++\",\"构造与析构\"]},\"20\":{\"h\":\"实用工具推荐\"},\"21\":{\"h\":\"一、多媒体工具\"},\"22\":{\"h\":\"录屏工具\",\"t\":[\"OBS Studio\"]},\"23\":{\"h\":\"GIF工具\",\"t\":[\"ScreenToGif\"]},\"24\":{\"h\":\"截图工具\",\"t\":[\"Pixpin\"]},\"25\":{\"h\":\"解压缩文件\",\"t\":[\"7-zip\"]},\"26\":{\"h\":\"贴图处理\",\"t\":[\"PVRTexTool\"]},\"27\":{\"h\":\"二、Unity游戏解包\",\"t\":[\"参考教程：Unity游戏Shader提取\",\"AssetStudio\",\"AssetRipper\",\"AssetView\",\"UnityPy\"]},\"28\":{\"h\":\"三、开发工具\"},\"29\":{\"h\":\"安卓终端\",\"t\":[\"termux-app\"]},\"30\":{\"c\":[\"Others\"]},\"31\":{\"c\":[\"Tools\"]},\"32\":{\"h\":\"Csv数据转Fbx模型\"},\"33\":{\"h\":\"前言\",\"t\":[\"本来想用猛兽派对的尼莫模型尝试一下毛发渲染。但截帧拿到模型csv后，在用现成工具转fbx这一步总是出现各种问题【比如某个通道的数据读不出来balabala..】，遂决定自己写一个csv转fbx的工具。\",\"比较好用的一个转换工具是CsvConverter\"]},\"34\":{\"h\":\"Dependencies\",\"t\":[\"FBX SDK\",\"rapidcsv\"]},\"35\":{\"h\":\"TODOs\",\"t\":[\"添加渲染窗口\",\"添加imgui面板\"]},\"36\":{\"c\":[\"Render\"]},\"37\":{\"c\":[\"RenderDoc\",\"Render\",\"FBX\"]},\"38\":{\"h\":\"RenderDoc\"},\"39\":{\"c\":[\"RenderDoc\"]},\"40\":{\"h\":\"图像压缩\"},\"41\":{\"c\":[\"Image compression\"]},\"42\":{\"h\":\"图像压缩算法\",\"t\":[\"Block Compression\"]},\"43\":{\"c\":[\"Render\"]},\"44\":{\"c\":[\"Render\",\"Image compression\"]},\"45\":{\"h\":\"FlowMap采样原理\",\"t\":[\"对FlowMap的原理进行解释，并在Unity Shader中做简单实现\"]},\"46\":{\"h\":\"0.前言\",\"t\":[\"FlowMap的关键并不在于使用两个相隔半个周期的采样。FlowMap可以使用任意多次且不低于一次的采样，其关键在于如何构造这些采样结果的权重，使得每个采样在跳变时权重为0。\",\"其实一次采样也行，保证新旧周期切换时uv连续即可。\"]},\"47\":{\"h\":\"1.原理\",\"t\":[\"想要让图形在视觉上发生运动，不外乎两种情况：改变顶点位置和改变顶点颜色。让模型（普通mesh或蒙皮mesh）发生运动就属于前者，而神奇的FlowMap就属于后者。\",\"改变模型UV实现流动效果\",\"假设现在需要制作一个水面在球体表面循环流动的效果，上图中就是两种典型的实现方式。左边是通过旋转模型实现，右边是通过改变模型UV实现。\",\"FlowMap在时间尺度上通过更改顶点的UV坐标，让顶点上的发生变化，就仿佛上一个帧中颜色相同的顶点移动到当前顶点一样。如果在一片区域内实现这种效果，就可以看到某块区域发生移动的视觉效果，这就是FlowMap的魔法。\"]},\"48\":{\"h\":\"2.具体实现\",\"t\":[\"想要在视觉上实现自然运动，那最应该避免的就是防止顶点瞬移，在FlowMap中就是要防止顶点颜色突然跳变，即【顶点颜色需要在时间尺度上连续】\",\"如果让整个贴图的uv在同一方向上移动，只需要保证BaseMap四方连续就好（如上方gif右侧的球体所示）。但是如果只是让贴图某个区域周期性流动呢？\",\"不妨将BaseMap的采样抽象为函数c=f(u,v)\",\"应用FlowMap的过程抽象为:\",\"(ut​,vt​)=flow(u,v,t)=(u,v)+dir⋅t\",\"但是一般情况下认为顶点是从附近移动过来的而不是无穷远处，因此不会让时间t过大而采样到很远的点。故上式改写为\",\"(ut​,vt​)=flow(u,v,t)=(u,v)+dir⋅fract(t)\",\"故使用FlowMap后的顶点颜色为\",\"ct​=f(ut​,vt​)=g(u,v,t)\",\"很明显 ct​ 是一个周期函数，这是从 fract(t) 这个操作引入进来的。因此顶点色ct​在新旧周期切换时很容易发生突变，除非恰好在切换时uv是连续的（但这通常很难做到，因为BaseMap上有很多像素，而FlowMap上记录的流动方向一般并不是整体一致的）。\",\"因此可以进行多次错开周期的采样，让每次采样颜色的权重在接近周期切换时权重渐变到0，最后将这些采样颜色加权求和作为最终输出颜色。因为每个采样颜色在发生跳变时权重为0，所以并不会导致最终颜色发生跳变。\"]},\"49\":{\"h\":\"3.详细证明\",\"t\":[\"上图可点击此链接查看\",\"这里使用x指代时间t，f指代顶点色c，y指代采样uv(u,v)\",\"另外w表示采样频率，采样周期为T=w1​\",\"假设使用两次FlowMap采样，第二次采样比第一次提前d个周期，故有：\",\"y1​=mod(wx,1)\",\"y2​=mod(wx+d,1)\",\"进一步假设BaseMap的采样函数为：f=y3+y2，故有：\",\"f1​=y13​+y12​\",\"f2​=y23​+y22​\",\"f1​和f2​关于时间的变化如下图所示，很明显两者关于时间是不连续的\",\"单次采样颜色关于时间的变化\",\"但是可以通过两者混合加权来实现最终颜色c=f1​w1​+f2​w2​在时间上是连续的，只需要保证f1​和f2​的权重w1​和w2​在新旧周期更换时值为0\",\"本文构造的权重函数为：\",\"w1​=min(1−dy1​​,d1−y1​​)\",\"w2​=1−w1​\",\"关于时间的变化如下图所示\",\"权重关于时间的变化\",\"最终颜色c=f1​w1​+f2​w2​在时间上是连续的。【虽然目前一阶不连续，但是可以通过构造更加巧妙的权重函数来实现一阶连续】\",\"最终颜色关于时间的变化\"]},\"50\":{\"h\":\"4.Unity中实现FlowMap\",\"t\":[\"使用ASE编写了FlowMap采样的Shader，实现一个简陋的流动效果\",\"Shader\",\"效果\",\"unitypackage文件\",\"制作FlowMap的Houdini文件\"]},\"51\":{\"c\":[\"Render\"]},\"52\":{\"c\":[\"Render\",\"FlowMap\"]},\"53\":{\"h\":\"经典算法\"},\"54\":{\"c\":[\"Technical Art\"]},\"55\":{\"h\":\"色彩空间\"},\"56\":{\"c\":[\"Color Space\"]},\"57\":{\"h\":\"色彩空间的作用及各空间之间的转换\"},\"58\":{\"h\":\"线性空间和Gamma空间\",\"t\":[\"下面是Unity生成的线性空间和Gamma空间的颜色强度图像，可以看到线性空间下能表征暗部（视觉意义上的暗部）的数值区域十分有限，而Gamma空间下明暗很均匀。\",\"线性空间(从左到右线性空间下从0增长到1)\",\"Gamma空间(从左到右Gamma空间下从0增长到1)\",\"首先要明确两者所描述物理量的不同：\",\"线性空间是色彩在物理强度上的线性表达\",\"Gamma空间是色彩在人眼感知强度上的线性表达\",\"因为人眼对光线的感知强度与光线的物理强度之间是非线性的，想要将感知强度真真正正地记录到数据中需要进行转换。\",\"以物理强度为横轴、感知强度为纵轴，拟合得到一个幂函数曲线y=x^2.2 以感知强度为横轴、物理强度为纵轴，拟合得到一个幂函数曲线y=x^0.4545\",\"转换函数\"]},\"59\":{\"h\":\"附件\"},\"60\":{\"h\":\"1.Unity生成线性空间和Gamma空间图片的自定义窗口\",\"t\":[\"using System.IO; using UnityEditor; using UnityEngine; public class TextureCreator : EditorWindow { [MenuItem(\\\"QSTX Tools/TextureCreator\\\")] public static void OpenWindow() { GetWindow<TextureCreator>(); } private const string filefolder = \\\"LinearGamma/\\\"; private string filename = \\\"\\\"; private bool is_gamma = false; private void OnGUI() { //filename = GUILayout.TextField(filename); is_gamma = GUILayout.Toggle(is_gamma, \\\"is_gamma\\\"); if (GUILayout.Button(\\\"生成\\\")) { filename = (is_gamma ? \\\"Gamma\\\" : \\\"Linear\\\"); Create(filename,is_gamma); } } void SaveTextureAsPNG(Texture2D texture, string fileName) { // 将Texture转换为PNG格式 byte[] bytes = texture.EncodeToPNG(); // 将文件保存到项目文件夹下 string filePath = Path.Combine(Application.dataPath, Path.Combine(filefolder,fileName)); File.WriteAllBytes(filePath, bytes); Debug.Log(\\\"Texture saved to \\\" + filePath); } void Create(string filename,bool is_gamma) { // 创建一个新的Texture2D对象 int width = 512; int height = 64; Texture2D texture = new Texture2D(width, height,TextureFormat.RGBAFloat,0,!is_gamma); // 填充Texture，设置每个像素的颜色 for (int y = 0; y < height; y++) { for (int x = 0; x < width; x++) { float stren = x / (float)width; Color strenColor = new Color(stren, stren, stren); texture.SetPixel(x, y, strenColor); } } // 应用设置的像素颜色 texture.Apply(); // 保存Texture为PNG文件 SaveTextureAsPNG(texture, $\\\"{filename}.png\\\"); AssetDatabase.Refresh(); } Color GammaToLinearSpace (Color sRGB) { // Approximate version from http://chilliant.blogspot.com.au/2012/08/srgb-approximations-for-hlsl.html?m=1 return sRGB * (sRGB * (sRGB * 0.305306011f + new Color(0.682171111f,0.682171111f,0.682171111f)) + new Color(0.012522878f,0.012522878f,0.012522878f)); // Precise version, useful for debugging. //return half3(GammaToLinearSpaceExact(sRGB.r), GammaToLinearSpaceExact(sRGB.g), GammaToLinearSpaceExact(sRGB.b)); } float GammaToLinearSpaceExact (float value) { if (value <= 0.04045F) return value / 12.92F; else if (value < 1.0F) return Mathf.Pow((value + 0.055F)/1.055F, 2.4F); else return Mathf.Pow(value, 2.2F); } Vector4 Pow(Vector4 v, float p) { return new Vector4(Mathf.Pow(v.x, p), Mathf.Pow(v.y, p), Mathf.Pow(v.z, p), Mathf.Pow(v.w, p)); } Color LinearToGammaSpace (Color linRGB) { Vector4 colorVector4 = linRGB; colorVector4 = Vector4.Max(colorVector4,Vector4.zero); // An almost-perfect approximation from http://chilliant.blogspot.com.au/2012/08/srgb-approximations-for-hlsl.html?m=1 return Vector4.Max(1.055f * Pow(linRGB, 0.416666667f) - new Vector4(0.055f,0.055f,0.055f,0.055f), Vector4.zero); // Exact version, useful for debugging. //return half3(LinearToGammaSpaceExact(linRGB.r), LinearToGammaSpaceExact(linRGB.g), LinearToGammaSpaceExact(linRGB.b)); } float LinearToGammaSpaceExact (float value) { if (value <= 0.0F) return 0.0F; else if (value <= 0.0031308F) return 12.92F * value; else if (value < 1.0F) return 1.055F * Mathf.Pow(value, 0.4166667F) - 0.055F; else return Mathf.Pow(value, 0.45454545F); } }\"]},\"61\":{\"h\":\"2.Matlab绘制转换函数曲线\",\"t\":[\"% 定义 Gamma 值 gamma_value = 2.2; % 定义输入亮度值（0 到 1 之间） x = linspace(0, 1, 256); % 计算 Gamma 校正后的输出值（Gamma 空间 -> 线性空间） y_gamma_to_linear = x .^ (1 / gamma_value); % 计算从线性空间到 Gamma 空间的输出值 y_linear_to_gamma = x .^ gamma_value; % 绘制曲线 figure; % 创建新图形窗口 hold on; % 保持当前图像，使得可以在同一图上绘制多条曲线 % 绘制 Gamma 到线性空间的转换曲线 plot(x, y_gamma_to_linear, 'r-', 'LineWidth', 2, 'DisplayName', 'Gamma to Linear'); % 绘制线性空间到 Gamma 空间的转换曲线 plot(x, y_linear_to_gamma, 'b--', 'LineWidth', 2, 'DisplayName', 'Linear to Gamma'); % 设置图例位置为左上角 legend('Location', 'northwest'); % 设置 x 轴和 y 轴等长 axis equal; % 设置图像属性 grid on; % 打开网格 xlabel('Input Intensity'); % x 轴标签 ylabel('Output Intensity'); % y 轴标签 title(['Gamma Correction and Inverse (\\\\gamma = ', num2str(gamma_value), ')']); % 标题，显示 Gamma 值 hold off; % 释放图像\"]},\"62\":{\"c\":[\"Render\"]},\"63\":{\"c\":[\"Color Space\"]},\"64\":{\"h\":\"Git使用技巧\",\"t\":[\"Git使用过程一些细碎问题的解决方案\"]},\"65\":{\"h\":\"1.Git代理设置\",\"t\":[\"通过ssh拉取仓库正常，但是https方式拉取仓库报错：\",\"fatal: unable to access 'https://server/user/repository/': Failed to connect to server port 443 after 21282 ms: Couldn't connect to server\",\"解决方法：\",\"查看代理软件的协议及端口，然后设置git代理\",\"本地代理协议及端口\",\"git config --global http.proxy \\\"socks5://127.0.0.1:10808\\\" git config --global https.proxy \\\"socks5://127.0.0.1:10808\\\"\",\"设置完成后可通过git config --global -l查看配置结果\"]},\"66\":{\"h\":\"2.TortoiseGit SSH客户端配置\",\"t\":[\"拉取时权限错误，No public key\",\"解决方法：\",\"在TortoiseGit的设置中将ssh client改为已安装Git所使用的ssh\",\"配置ssh\"]},\"67\":{\"c\":[\"Git\"]},\"68\":{\"c\":[\"Git\"]},\"69\":{\"h\":\"Git\"},\"70\":{\"c\":[\"Git\"]},\"71\":{\"h\":\"基于树莓派的小巧NAS实现\",\"t\":[\"在Ubuntu上使用Samba搭建个人NAS（网络附加存储），可以共享文件并在网络上的不同设备之间轻松访问\"]},\"72\":{\"h\":\"一、 安装Samba\",\"t\":[\"sudo apt install samba\"]},\"73\":{\"h\":\"二、 创建共享文件夹\",\"t\":[\"sudo mkdir -p /srv/samba/share\"]},\"74\":{\"h\":\"三、 配置Samba\",\"t\":[\"编辑Samba配置文件 /etc/samba/smb.conf：\",\"sudo nano /etc/samba/smb.conf\",\"[Share] #记住这个名字，这是连接时的文件夹地址 path = /srv/samba/share browsable = yes writable = yes guest ok = no read only = no\"]},\"75\":{\"h\":\"四、 设置Samba用户\",\"t\":[\"如果需要用户认证，请创建Samba用户：\",\"sudo smbpasswd -a your_username\"]},\"76\":{\"h\":\"五、 重启Samba服务\",\"t\":[\"保存配置文件后，重启Samba服务以应用更改：\",\"sudo systemctl restart smbd sudo systemctl restart nmbd\"]},\"77\":{\"h\":\"六、 访问共享\"},\"78\":{\"h\":\"1. 华为手机访问\",\"t\":[\"在【文件管理->浏览->网上邻居】中点击扫描到的设备，输入用户名密码即可访问\"]},\"79\":{\"h\":\"2. Windows访问\",\"t\":[\"资源管理器输入下方地址\",\"\\\\\\\\samba_ip\\\\Share #Share是smb.conf文件中配置的名称\",\"弹窗输入用户名密码即可访问\",\"Windows访问\"]},\"80\":{\"h\":\"3. Windows挂载\",\"t\":[\"在【此电脑->映射网络驱动器】中访问\",\"Windows挂载\"]},\"81\":{\"h\":\"4. iPad挂载\",\"t\":[\"【文件->连接到服务器】，输入smb://samba_ip/Share，填好用户密码即可\",\"iPad挂载\"]},\"82\":{\"h\":\"七、 Troubleshoot\",\"t\":[\"在iPad OS上文件App访问samba文件全都是只读的情况，需要在smb.conf的[global]这个配置块下增加如下配置即可：\",\"[global] vfs objects = streams_xattr\"]},\"83\":{\"c\":[\"DIY\"]},\"84\":{\"c\":[\"NAS\",\"RaspberryPi\"]},\"85\":{\"h\":\"NAS\"},\"86\":{\"c\":[\"Git\"]},\"87\":{\"h\":\"局域网Git服务器\"},\"88\":{\"h\":\"在Ubuntu上部署Git Server\"},\"89\":{\"h\":\"一、部署服务器\"},\"90\":{\"h\":\"1.安装必需的软件包\",\"t\":[\"首先，安装Git、Apache和GitWeb：\",\"sudo apt install git gitweb apache2 -y\"]},\"91\":{\"h\":\"2.配置GitWeb\",\"t\":[\"sudo nano /etc/gitweb.conf\",\"GitWeb通常在Apache的配置文件中定义。首先，编辑GitWeb配置文件：\",\"$projectroot = \\\"/srv/git\\\"; $git_temp = \\\"/tmp\\\"; $home_link = $my_uri || \\\"/\\\"; $site_name = \\\"My Git Server\\\";\"]},\"92\":{\"h\":\"3.配置Apache\",\"t\":[\"编辑Apache的GitWeb配置文件：\",\"sudo nano /etc/apache2/conf-available/gitweb.conf\",\"一般不需要修改，文件内容如下：\",\"<IfModule mod_alias.c> <IfModule mod_mime.c> <IfModule mod_cgi.c> Define ENABLE_GITWEB </IfModule> <IfModule mod_cgid.c> Define ENABLE_GITWEB </IfModule> </IfModule> </IfModule> <IfDefine ENABLE_GITWEB> Alias /gitweb /usr/share/gitweb <Directory /usr/share/gitweb> Options +FollowSymLinks +ExecCGI AddHandler cgi-script .cgi </Directory> </IfDefine>\",\"启用GitWeb配置和CGI模块，然后重启Apache：\",\"sudo a2enconf gitweb sudo a2enmod cgi sudo systemctl restart apache2\"]},\"93\":{\"h\":\"4.测试配置\",\"t\":[\"在浏览器中打开以下URL来访问GitWeb界面： http://your_server_ip/gitweb\",\"gitweb\"]},\"94\":{\"h\":\"二、GitServer管理\",\"t\":[\"在Ubuntu上创建一个单独的git用户，用于专门维护Git服务器。这有助于提高安全性和简化权限管理。\"]},\"95\":{\"h\":\"1.创建git用户\",\"t\":[\"使用以下命令创建一个名为git的新用户，并为其设置一个登录shell（通常为/usr/bin/git-shell，这将限制用户只能进行Git相关操作）：\",\"sudo adduser --system --shell /usr/bin/git-shell --group --disabled-password --home /home/git git\"]},\"96\":{\"h\":\"2.初始化仓库\",\"t\":[\"切换到git用户，初始化一个裸仓库：\",\"sudo -u git -H sh -c 'cd /srv/git && git init --bare gittest.git'\"]},\"97\":{\"h\":\"3.配置SSH访问（可选）\",\"t\":[\"使用/usr/bin/git-shell作为git用户的shell将限制该用户只能执行Git操作，无法执行其他命令。这有助于增强安全性。如果需要进一步限制，考虑使用SSH的配置来限制允许的命令和操作。\",\"如果希望通过SSH访问Git仓库，需要为git用户配置SSH公钥认证：\",\"1.切换到git用户：\",\"sudo -u git -H sh -c 'cd ~ && mkdir -p .ssh && chmod 700 .ssh'\",\"2.添加SSH公钥到authorized_keys文件中：\",\"sudo nano /home/git/.ssh/authorized_keys\"]},\"98\":{\"h\":\"4.测试\",\"t\":[\"git clone git@your_server_ip:/srv/git/gittest.git\"]},\"99\":{\"c\":[\"DIY\"]},\"100\":{\"c\":[\"NAS\",\"RaspberryPi\",\"Ubuntu\"]},\"101\":{\"h\":\"Ubuntu\"},\"102\":{\"c\":[\"Ubuntu\"]},\"103\":{\"h\":\"Ubuntu Server安装VPN\",\"t\":[\"Ubuntu Server安装VPN代理来解决仓库拉取失败的问题\"]},\"104\":{\"h\":\"1. 通过软件源安装\"},\"105\":{\"h\":\"1. 添加公钥\",\"t\":[\"wget -qO - https://apt.v2raya.org/key/public-key.asc | sudo tee /etc/apt/keyrings/v2raya.asc\"]},\"106\":{\"h\":\"2. 添加 V2RayA 软件源\",\"t\":[\"echo \\\"deb [signed-by=/etc/apt/keyrings/v2raya.asc] https://apt.v2raya.org/ v2raya main\\\" | sudo tee /etc/apt/sources.list.d/v2raya.list sudo apt update\"]},\"107\":{\"h\":\"3. 安装 V2RayA\",\"t\":[\"sudo apt install v2raya v2ray ## 也可以使用 xray 包\"]},\"108\":{\"h\":\"2. 初始化配置\",\"t\":[\"启动 v2rayA\",\"sudo systemctl start v2raya.service\",\"设置开机自动启动\",\"sudo systemctl enable v2raya.service\",\"配置网页\",\"访问http://localhost:2017进入网页UI\",\"推荐配置\"]},\"109\":{\"c\":[\"DIY\"]},\"110\":{\"c\":[\"Ubuntu\",\"RaspberryPi\"]},\"111\":{\"h\":\"树莓派、Ubuntu相关问题汇总\"},\"112\":{\"h\":\"1. 树莓派安装Ubuntu Server后，每次开机卡在“A start job is running for wait for network to be Configured”\",\"t\":[\"开机卡在网络配置\",\"此时应该正在配置必选的网络，可能是有线也可能是无线\",\"修改/etc/netplan/50-cloud-init.yaml，将所有可能的网络类型都设置为可选【optional: true】，而非必选\",\"# This file is generated from information provided by the datasource. Changes # to it will not persist across an instance reboot. To disable cloud-init's # network configuration capabilities, write a file # /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following: # network: {config: disabled} network: version: 2 ethernets: renderer: networkd eth0: dhcp4: true optional: true wifis: renderer: networkd wlan0: access-points: Xiaomi_19DE: password: 212ab2fc321ef91189d7858a8a4bc589af7ea380be6764b1d0078291467ca4f9 dhcp4: true optional: true\"]},\"113\":{\"c\":[\"DIY\"]},\"114\":{\"c\":[\"Ubuntu\",\"RaspberryPi\"]},\"115\":{\"h\":\"WalleBot\"},\"116\":{\"c\":[\"DIY\"]},\"117\":{\"h\":\"Walle机器人开发\",\"t\":[\"Micro-ros Agent启动：ros2 run micro_ros_agent micro_ros_agent serial --dev /dev/ttyUSB0\",\"速度话题发布：ros2 topic pub /speed_subscriber std_msgs/msg/Int16MultiArray \\\"{layout: {dim: [], data_offset: 0}, data: [1, 0, 1, 0]}\\\" -1\"]},\"118\":{\"c\":[\"DIY\"]},\"119\":{\"c\":[\"STM32\",\"嵌入式\",\"ROS2\"]},\"120\":{\"h\":\"机械设计\"},\"121\":{\"c\":[\"DIY\"]},\"122\":{\"h\":\"标准齿轮建模\",\"t\":[\"最近想打印一个齿轮，动手之前觉得自己一个机械工程专业的人搞这个应该手到擒来，下载打开SolidWorks后发现知识全还给老师了，于是快速复习记录一下。\"]},\"123\":{\"h\":\"1. 参数解释\",\"t\":[\"参数\",\"参数名\",\"定义\",\"作用\",\"公式\",\"m\",\"模数\",\"齿轮的基准尺寸，表示齿轮齿距大小，只有模数相等的齿轮才能啮合\",\"模数越大，齿轮的齿越大，适合传递较大的力\",\"z\",\"齿数\",\"齿轮上齿的总数\",\"齿数决定了齿轮的分度圆直径和传动比\",\"d\",\"分度圆直径\",\"齿轮的基本尺寸，用于计算齿轮啮合\",\"分度圆是设计齿轮参数的参考圆\",\"d=mz\",\"α\",\"压力角\",\"分度圆上齿形法线与啮合线之间的夹角，标准值为20°或25°\",\"影响齿轮的接触强度和传动效率\",\"ha​\",\"齿顶高\",\"齿顶到分度圆的距离，通常齿顶高系数ha​∗=1\",\"ha​=m\",\"hf​\",\"齿根高\",\"齿根到分度圆的距离，通常齿根高系数hf​∗=1.25\",\"hf​=1.25m\",\"da​\",\"齿顶圆直径\",\"齿顶形成的圆的直径\",\"da​=d+2ha​\",\"df​\",\"齿跟圆直径\",\"齿根形成的圆的直径\",\"df​=d−2hf​\",\"a\",\"中心距\",\"两相啮合齿轮分度圆圆心之间的距离\",\"a=2m(z1​+z2​)​\",\"i\",\"传动比\",\"主动轮与从动轮转速的比值\",\"i=n2​n1​​=z1​z2​​\"]},\"124\":{\"h\":\"2. SolidWorks建模\",\"t\":[\"正常情况下是要分析受力情况，根据工况选用合适的模数、齿数，而且还要反复迭代修改（想起来学机械设计的痛苦日子了 (Y^Y)）。但是DIY嘛，乐呵一下就好了。\",\"初定模数、齿数和分度圆：这一步决定了基本的装配结构和传动比\",\"然后计算齿顶圆、齿根圆、基圆\",\"在SolidWorks中建模\"]},\"125\":{\"h\":\"3. 便捷工具\",\"t\":[\"参考了下SolidWorks绘制齿轮这个视频，把方程式进行参数化：\",\"m模数 m= z 齿数 z= α 压力角(α=20°)(α=pi/9) ha* 齿顶高系数 (ha*=1) c* 顶隙系数 (c*=0.25) ---------------------------------------------------- d 分度圆直径 d=m*z=m*z ha 齿顶圆直径 ha=(z+2ha*)*m=(z+2)*m hf 齿根圆直径 hf=(z-2ha*-2c*)*m=(z-2-0.5)*m db 基圆直径 db=d*cos(α)=m*z*cos(pi/9) rb 基圆半径 rb=db/2=d*cos(pi/9)/2 ---------------------------------------------------- 渐开线方程 (t取0到pi/3) xt=rb*sin(t)-rb*t*cos(t) yt=rb*cos(t)+rb*t*sin(t) ↓ xt=m*z*cos(pi/9)/2*sin(t)-m*z*cos(pi/9)/2*t*cos(t) yt=m*z*cos(pi/9)/2*cos(t)+m*z*cos(pi/9)/2*t*sin(t) ---------------------------------------------------- 中心距 a=m*(z1+z2)/2=m*(z1+z2)/2 镜像轴偏移角度1 360/z/4=360/z/4 镜像轴偏移角度2 360/z/4=360/z/4*3\",\"使用我下面这个链接也能很方便进行计算，还能实时看到绘制效果\",\"齿轮图形画板\"]},\"126\":{\"c\":[\"DIY\"]},\"127\":{\"c\":[\"机械设计\",\"SolidWorks\"]},\"128\":{\"h\":\"嵌入式开发\"},\"129\":{\"c\":[\"DIY\"]},\"130\":{\"h\":\"STM32开发环境搭建\",\"t\":[\"介绍几种STM32开发环境搭建的方式，主要还是围绕VSCode\"]},\"131\":{\"h\":\"一、 基于PlatformIO和STM32CubeMX\"},\"132\":{\"h\":\"1. STM32CubeMX生成工程代码\",\"t\":[\"进入STM32下载页面下载并安装STM32CubeMX。\",\"打开STM32CubeMX，进入【Help->Manage embeded software packages】安装对应的固件包。\",\"配置时钟和引脚（参考视频），配置工程各种设置\",\"点击“GENERATE CODE”，生成工程代码\"]},\"133\":{\"h\":\"2. 安装PlatformIO，配置项目\",\"t\":[\"VSCode插件中搜索并安装PlatformIO\",\"PlatformIO中创建工程，选择合适的开发板和框架，确保目录为STM32CubeMX输出的目录\",\"配置platformio.ini文件（参考文章）\",\"[env:genericSTM32F103C8] platform = ststm32 board = genericSTM32F103C8 framework = stm32cube build_flags = ;决定头文件 -ICore/Inc build_src_filter = ;决定源文件 +<../Core/src> upload_protocol = serial ;代码上传方式\"]},\"134\":{\"h\":\"3. 编译、上传、调试\",\"t\":[\"VSCode左下角是编译、上传相关的命令\",\"编译和上传\"]},\"135\":{\"h\":\"二、 基于VSCode和STM32 VS Code Extension\"},\"136\":{\"h\":\"1. 下载STM32CubeMX和STM32CubeCLT\"},\"137\":{\"h\":\"2. STM32 VS Code Extension配置\",\"t\":[\"STM32 VS Code Extension设置\"]},\"138\":{\"c\":[\"DIY\"]},\"139\":{\"c\":[\"STM32\",\"嵌入式\"]},\"140\":{\"h\":\"AABB求交算法\"},\"141\":{\"c\":[\"AABB求交算法\"]},\"142\":{\"h\":\"线段与AABB求交的算法\",\"t\":[\"如何快速判断任意线段与任意AABB是否相交？首先想到的方法是借助射线与AABB求交的算法，获得射线进入和离开的时机，在射线与AABB相交的前提下保证进入时机在线段终点之前。\",\"下面是搜集到的三种算法即实现，并且通过添加轴的的维度完全可以应用于三维情况。\"]},\"143\":{\"h\":\"零、 数据结构\",\"t\":[\"import random import time import numpy as np import matplotlib.pyplot as plt class Vec2D: def __init__(self, x, y): self.v = np.array([x, y]) def __sub__(self, other): return Vec2D(self.v[0] - other.v[0], self.v[1] - other.v[1]) def __getitem__(self, index): return self.v[index] def __mul__(self, scalar): return Vec2D(self.v[0] * scalar, self.v[1] * scalar) def __add__(self, other): return Vec2D(self.v[0] + other.v[0], self.v[1] + other.v[1]) def ToString(self): return f'({self.v[0]},{self.v[1]})' class Rect: def __init__(self, min_x, min_y, max_x, max_y): self.min = Vec2D(min_x, min_y) self.max = Vec2D(max_x, max_y) def ToString(self): return f'{{ {self.min.ToString()},{self.max.ToString()} }}'\"]},\"144\":{\"h\":\"一、 射线与AABB求交算法\",\"t\":[\"假设：\",\"射线起点为x0​，方向向量为d，射线方程为x=x0​+t∗d(t≥0)\",\"AABB包围盒表示为{xmin​,xmax​}\",\"算法：\",\"计算射线进入各个轴的时间，取最大值作为进入AABB的时间 tenter​\",\"计算射线离开各个轴的时间，取最小值作为离开AABB的时间 texit​\",\"判断 tenter​≤texit​ 是否成立（先进入、后离开），成立则相交，不成立则不相交\",\"如需计算交点，计算 x=x0​+tenter​∗d 和 x=x0​+texit​∗d 即为所求\",\"画板链接\",\"实现：\",\"# p1决定射线起点，p1、p2共同决定射线方向 def ray_aabb(p1, p2, aabb): d = np.linalg.norm(p2 - p1) t_min = 0 t_max = float('inf') for axis in range(2): inv_d = 1.0 / d[axis] if d[axis] != 0 else float('inf') t0 = (aabb.min[axis] - p1[axis]) * inv_d t1 = (aabb.max[axis] - p1[axis]) * inv_d if inv_d < 0: t0, t1 = t1, t0 t_min = max(t_min, t0) t_max = min(t_max, t1) if t_min > t_max: return False return True\",\"Tricks:\",\"根据方向向量 d 在指定轴上投影 daxis​ 的正负决定进入和离开该轴的时间\",\"某个轴上出现 tmin​>tmax​ 的情况，必不相交\"]},\"145\":{\"h\":\"二、 线段与AABB求交算法\"},\"146\":{\"h\":\"1. 射线法\",\"t\":[\"假设：\",\"线段起点为x0​，终点为x1​，方向 d=x1​−x0​，线段方程为x=x0​+t∗d(0≤t≤1)\",\"AABB包围盒表示为{xmin​,xmax​}\",\"算法：\",\"参考射线与AABB求交的算法，只是方向非单位向量，参数t的上限约束到1\",\"计算线段进入各个轴的时间，取最大值作为进入AABB的时间 tenter​\",\"计算线段离开各个轴的时间，取最小值作为离开AABB的时间 texit​\",\"判断 tenter​≤texit​ 是否成立（先进入、后离开），成立则相交，不成立则不相交\",\"如需计算交点，计算 x=x0​+tenter​∗d 和 x=x0​+texit​∗d 即为所求\",\"# p1决定线段起点，p2决定线段终点 def seg_aabb(p1, p2, aabb): d = p2 - p1 t_min = 0 t_max = 1 for axis in range(2): inv_d = 1.0 / d[axis] if d[axis] != 0 else float('inf') t0 = (aabb.min[axis] - p1[axis]) * inv_d t1 = (aabb.max[axis] - p1[axis]) * inv_d if inv_d < 0: t0, t1 = t1, t0 t_min = max(t_min, t0) t_max = min(t_max, t1) if t_min > t_max: return False return True\",\"Tricks:\",\"将线段视为有上限的射线\"]},\"147\":{\"h\":\"2. liang_barsky算法\",\"t\":[\"假设：\",\"线段起点为x0​，终点为x1​，方向 d=x1​−x0​，线段方程为x=x0​+t∗d(0≤t≤1)\",\"AABB包围盒表示为{xmin​,xmax​}\",\"算法：\",\"联立方程\",\"x=x0​+t∗d\",\"xmin​≤x≤xmax​\",\"获得满足位于AABB内的点\",\"td≥x0​−xmin​\",\"−td≥xmax​−x0​\",\"计算逐个轴中 t 的上下限，以x轴为例：\",\"tx​∗dx​≥x0x​−xminx​\",\"−tx​∗dx​≥xmaxx​−x0x​\",\"预计算不等式中的各项，以x轴为例：\",\"p0​=dx​\",\"p1​=−dx​\",\"q0​=x0x​−xminx​\",\"q1​=xmaxx​−x0x​\",\"根据预计算结果，逐轴计算实际 t 的上下限并判断该轴内是否可能相交，以x轴为例：\",\"tx​≥p0​q0​​,p0​>0\",\"tx​≤p0​q0​​,p0​<0\",\"tx​≥p1​q1​​,p1​>0\",\"tx​≤p1​q1​​,p1​<0\",\"即：\",\"tx​≥pi​qi​​,pi​>0\",\"tx​≤pi​qi​​,pi​<0\",\"如需计算交点，计算 x=x0​+tmin​∗d 和 x=x0​+tmax​∗d 即为所求\",\"实现：\",\"def liang_barsky(p1, p2, aabb): dx = p2[0] - p1[0] dy = p2[1] - p1[1] p = [-dx, dx, -dy, dy] q = [p1[0] - aabb.min[0], aabb.max[0] - p1[0], p1[1] - aabb.min[1], aabb.max[1] - p1[1]] t0, t1 = 0.0, 1.0 for i in range(4): if p[i] == 0: # 线段平行于矩形的某一边 if q[i] < 0: # 线段在边界之外 return False else: t = q[i] / p[i] if p[i] < 0: if t > t1: return False # 线段完全在边界外 if t > t0: t0 = t # 向内裁剪 else: if t < t0: return False # 线段完全在边界外 if t < t1: t1 = t # 向内裁剪 return True # 线段与矩形相交\",\"Tricks:\",\"中间结果预计算\",\"根据被除项的正负决定是上限还是下限\"]},\"148\":{\"h\":\"3. Cohen-Sutherland算法\",\"t\":[\"原理： 将整个空间用AABB四条边划分为9个区域，并对区域进行编码，根据线段两端点所在区域编码快速决定线段与AABB的关系。无法立即判断的情况下对线段进行裁剪，递归判断\",\"实现：\",\"对空间进行编码，左中右分别使用10、00、01，上中下分别使用10、00、01，并加以组合获取9个编码\",\"左\",\"中\",\"右\",\"上\",\"10 10\",\"10 00\",\"10 01\",\"中\",\"00 10\",\"00 00\",\"00 01\",\"下\",\"01 10\",\"01 00\",\"01 01\",\"获得线段两端点 x0​ ， x1​ 所在区域的编码 c0​ ， c1​\",\"快速判断相交情况:\",\"$ c_0 | c_1 = 0 $ ， 必相交（线段全在AABB内）\",\"$ c_0 & c_1 \\\\neq 0 $ ， 必不相交（线段两端点均在AABB某一侧）\",\"其余情况需按照左右上下的顺序，求出虚交点 xn​ 迭代判断\",\"实现：\",\"def compute_outcode(point, aabb): # 计算点的区域编码 code = 0 for axis in range(2): code = code << 2 if point[axis] < aabb.min[axis]: code |= 0b01 elif point[axis] > aabb.max[axis]: code |= 0b10 else: code |= 0b00 return code def cohen_sutherland_clip(p0, p1, aabb): outcode0 = compute_outcode(p0, aabb) outcode1 = compute_outcode(p1, aabb) accept = False while True: # 如果两个端点都在裁剪窗口内，则接受该线段 if not (outcode0 | outcode1): accept = True break # 如果两个端点的区域编码按位与不为零，则线段完全在裁剪窗口外 elif outcode0 & outcode1: break else: # 选择在裁剪窗口外的点 outcode_out = outcode0 if outcode0 else outcode1 # 计算交点 # 需要确定是哪个边界 for axis in range(2): # 线段与轴的下限相交 if outcode_out & (0b01 << 2 * (2 - 1 - axis)): t = (aabb.min[axis] - p0[axis]) / (p1[axis] - p0[axis]) p = p0 + (p1 - p0) * t break # 线段与轴的上限相交 elif outcode_out & (0b10 << 2 * (2 - 1 - axis)): t = (aabb.max[axis] - p0[axis]) / (p1[axis] - p0[axis]) p = p0 + (p1 - p0) * t break # 更新点和区域编码 if outcode_out == outcode0: p0 = p outcode0 = compute_outcode(p0, aabb) else: p1 = p outcode1 = compute_outcode(p1, aabb) if accept: return True # (p0, p1) else: return False # None\",\"alt text\"]},\"149\":{\"h\":\"三、 测试代码\",\"t\":[\"测试结果\",\"def visualize(): center = np.array([random.uniform(-10, 10), random.uniform(-10, 10)]) extend = np.array([random.uniform(0.1, 6.5), random.uniform(0.1, 6.5)]) aabb = Rect(center[0] - extend[0], center[1] - extend[1], center[0] + extend[0], center[1] + extend[1]) # aabb = Rect(2,1,3,4) # 绘制 AABB rectangle = plt.Rectangle((aabb.min[0], aabb.min[1]), aabb.max[0] - aabb.min[0], aabb.max[1] - aabb.min[1], linewidth=1, edgecolor='r', facecolor='none', linestyle='--', label='AABB') plt.gca().add_patch(rectangle) for t in range(1, 20): p1 = Vec2D(random.uniform(-10, 10), random.uniform(-10, 10)) p2 = Vec2D(random.uniform(-10, 10), random.uniform(-10, 10)) # p1 = Vec2D(-1.40,-1.79) # p2 = Vec2D(4.54,1.39) # 检查并显示检测结果 # is_collision = seg_aabb(p1, p2, aabb) # is_collision = liang_barsky(p1, p2, aabb) is_collision = cohen_sutherland_clip(p1, p2, aabb) print(f'{p1.ToString()}->{p2.ToString()},{aabb.ToString()},{is_collision}') if is_collision: line_color = 'r' else: line_color = 'g' # 绘制线段 plt.plot([p1[0], p2[0]], [p1[1], p2[1]], color=line_color) # 设置坐标轴范围 plt.xlim(-10, 10) plt.ylim(-10, 10) plt.axhline(0, color='black', linewidth=0.5, ls='--') plt.axvline(0, color='black', linewidth=0.5, ls='--') plt.grid(color='gray', linestyle='--', linewidth=0.5) plt.title('Line Segment vs AABB') plt.xlabel('X-axis') plt.ylabel('Y-axis') plt.legend() plt.show() def test(t): start = time.perf_counter() for i in range(t): p1 = Vec2D(random.uniform(-10, 10), random.uniform(-10, 10)) p2 = Vec2D(random.uniform(-10, 10), random.uniform(-10, 10)) center = np.array([random.uniform(-10, 10), random.uniform(-10, 10)]) extend = np.array([random.uniform(0.1, 6.5), random.uniform(0.1, 6.5)]) aabb = Rect(center[0] - extend[0], center[1] - extend[1], center[0] + extend[0], center[1] + extend[1]) is_collision = liang_barsky(p1, p2, aabb) end = time.perf_counter() runTime = end - start print(\\\"运行时间：\\\", runTime, \\\"秒\\\") start = time.perf_counter() for i in range(t): p1 = Vec2D(random.uniform(-10, 10), random.uniform(-10, 10)) p2 = Vec2D(random.uniform(-10, 10), random.uniform(-10, 10)) center = np.array([random.uniform(-10, 10), random.uniform(-10, 10)]) extend = np.array([random.uniform(0.1, 6.5), random.uniform(0.1, 6.5)]) aabb = Rect(center[0] - extend[0], center[1] - extend[1], center[0] + extend[0], center[1] + extend[1]) is_collision = liang_barsky(p1, p2, aabb) end = time.perf_counter() runTime = end - start print(\\\"运行时间：\\\", runTime, \\\"秒\\\") visualize() #test(1000000)\"]},\"150\":{\"c\":[\"GameDev\"]},\"151\":{\"c\":[\"GameDev\",\"Graphics\"]},\"152\":{\"h\":\"A*寻路算法\"},\"153\":{\"c\":[\"GameDev\"]},\"154\":{\"c\":[\"GameDev\"]},\"155\":{\"h\":\"路径搜索算法\"},\"156\":{\"c\":[\"路径搜索算法\"]},\"157\":{\"h\":\"跳点搜索寻路算法\"},\"158\":{\"c\":[\"GameDev\"]},\"159\":{\"c\":[\"GameDev\"]},\"160\":{\"h\":\"Python中五个必须会用的f-string技巧\",\"t\":[\"参考视频，感觉这几个格式化打印都很有用，于是记录一下。\"]},\"161\":{\"h\":\"1.大数字分隔显示\",\"t\":[\"用{n:_}或{n:,}为大整数添加千位分隔符（下划线或逗号），提升可读性，不影响实际数值。\",\"n: int = 1000000000 print(f'{n:_}') print(f'{n:,}')\"]},\"162\":{\"h\":\"2.文本对齐与填充\",\"t\":[\"通过{var:>20}（右对齐）、{var:<20}（左对齐）、{var:^20}（居中）指定占位宽度，还可搭配{var:#>20}等填充字符（如#、_）美化输出。\",\"var: str = 'var' print(f'{var:_>20}') print(f'{var:#<20}') print(f'{var:|^20}')\"]},\"163\":{\"h\":\"3.日期时间格式化\",\"t\":[\"直接在 F 字符串中使用日期格式符（如%Y-%m-%d、%H:%M:%S），快速将datetime对象转为指定格式的字符串，支持本地时间与 12/24 小时制等。\",\"from datetime import datetime now: datetime = datetime.now() print(f'{now:%d.%m.%y ((%H :%M:%S)}') print(f'{now:%c}') print(f'{now:%I%p}')\"]},\"164\":{\"h\":\"4.数字精准格式化\",\"t\":[\"结合舍入与千位分隔符，如{num:.2f}保留两位小数，{num:,}添加千位逗号，甚至{num:,.3f}同时实现分隔与精度控制。\",\"n: float = 1234.5678 print(f'Result: {n:.2f}') print(f'Result: {n:.0f}') print(f'Result: {n:_.3f}')\"]},\"165\":{\"h\":\"5.调试神器\",\"t\":[\"自动表达式显示：用{表达式=}直接输出表达式及其结果（如{a + b=}自动显示a + b = 15），简化调试时的变量打印，避免硬编码。\",\"a: int = 5 b: int = 10 my_var: str = 'Bob says hi' print(f'{a + b = }') print(f'{my_var = }')\"]},\"166\":{\"c\":[\"Python\"]},\"167\":{\"c\":[\"Python\"]},\"168\":{\"h\":\"Python\"},\"169\":{\"c\":[\"Python\"]},\"170\":{\"h\":\"环境搭建\"},\"171\":{\"c\":[\"AI\"]},\"172\":{\"h\":\"基于conda的python环境搭建\",\"t\":[\"总结下conda中部署python、pytorch、cuda的过程\"]},\"173\":{\"h\":\"安装\",\"t\":[\"Anaconda是带有GUI的Miniconda，适合不熟悉命令行的用户。但在服务器上部署Miniconda是必须的。\",\"wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh bash ~/Miniconda3-latest-Linux-x86_64.sh\",\"常用conda命令：\",\"查看现有环境\",\"conda env list\",\"创建环境\",\"conda create --name <my-env> [-y] python=3.10\",\"删除环境\",\"conda env remove --name <my-env>\",\"切换环境\",\"conda activate <my-env>\",\"退出环境\",\"conda deactivate\"]},\"174\":{\"h\":\"安装\",\"t\":[\"首先将环境切换到正确环境后，在下图官方界面选择合适的版本，并复制命令执行即可安装最新gpu版。\",\"pytorch官方页面\",\"pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124\"]},\"175\":{\"c\":[\"Python\"]},\"176\":{\"c\":[\"Python\",\"Conda\"]},\"177\":{\"h\":\"Unity\"},\"178\":{\"c\":[\"Unity\"]},\"179\":{\"h\":\"Unity Hub设置代理\"},\"180\":{\"h\":\"一、Unity Hub启用网络代理\",\"t\":[\"在Unity Hub的设置中，没有专门的选项来设置网络代理。有时下载安装安卓相关的模块容易报错，例如Android Build Support Download failed: Validation Failed。\",\"此时可以通过bat设置代理并启动Unity Hub，具体脚本如下。请自行修改ip和端口、Unity Hub路径。\",\"@echo off set HTTP_PROXY=http://127.0.0.1:10807 set HTTPS_PROXY=http://127.0.0.1:10807 REM Set NODE_TLS_REJECT_UNAUTHORIZED=0 start \\\"\\\" \\\"E:\\\\Unity Hub\\\\Unity Hub.exe\\\" \\\" --trace-deprecation\\\"\",\"注意Unity Hub只能使用http协议的代理\"]},\"181\":{\"h\":\"二、通过python实现其他协议代理转http协议代理\",\"t\":[\"下方代码是将socks协议转成http协议，请自行修改ip和端口。\",\"import socketserver import socket import threading import select import urllib.parse import socks import time import traceback SOCKS_HOST = \\\"127.0.0.1\\\" SOCKS_PORT = 10808 HTTP_HOST = \\\"127.0.0.1\\\" HTTP_PORT = 10807 # 全局锁，避免多线程输出冲突 print_lock = threading.Lock() def extract_host_and_port(request, method, url): parsed_url = urllib.parse.urlparse(url) host = parsed_url.hostname port = parsed_url.port if host is None: headers = request.decode(errors=\\\"ignore\\\").split(\\\"\\\\r\\\\n\\\") for h in headers: if h.lower().startswith(\\\"host:\\\"): host_line = h.split(\\\":\\\", 1)[1].strip() if \\\":\\\" in host_line: host, port = host_line.split(\\\":\\\") port = int(port) else: host = host_line port = 80 if method.upper() != \\\"CONNECT\\\" else 443 break if port is None: port = 443 if method.upper() == \\\"CONNECT\\\" else 80 return host, port def handle_client(client_socket): try: request = client_socket.recv(4096) if not request: client_socket.close() return first_line = request.split(b'\\\\n')[0].decode(errors=\\\"ignore\\\") method, url, _ = first_line.split() host, port = extract_host_and_port(request, method, url) s = socks.socksocket() s.set_proxy(socks.SOCKS5, SOCKS_HOST, SOCKS_PORT) s.connect((host, port)) if method.upper() == \\\"CONNECT\\\": client_socket.sendall(b\\\"HTTP/1.1 200 Connection established\\\\r\\\\n\\\\r\\\\n\\\") else: s.sendall(request) bytes_sent = 0 bytes_recv = 0 start_time = time.time() last_report = start_time sockets = [client_socket, s] while True: r, _, _ = select.select(sockets, [], [], 1) if not r: continue for sock in r: data = sock.recv(4096) if not data: client_socket.close() s.close() return if sock is s: client_socket.sendall(data) bytes_recv += len(data) else: s.sendall(data) bytes_sent += len(data) now = time.time() if now - last_report >= 1.0: with print_lock: up_speed = bytes_sent / (now - start_time) / 1024 down_speed = bytes_recv / (now - start_time) / 1024 print(f\\\"[{threading.current_thread().name}] ⬆ {up_speed:.2f} KB/s ⬇ {down_speed:.2f} KB/s\\\") last_report = now except Exception as e: with print_lock: print(f\\\"[ERROR] {e}\\\") traceback.print_exc() try: client_socket.close() except: pass class ProxyHandler(socketserver.BaseRequestHandler): def handle(self): handle_client(self.request) class ThreadedTCPServer(socketserver.ThreadingMixIn, socketserver.TCPServer): allow_reuse_address = True if __name__ == \\\"__main__\\\": server = ThreadedTCPServer((HTTP_HOST, HTTP_PORT), ProxyHandler) print(f\\\"[+] HTTP proxy running at http://{HTTP_HOST}:{HTTP_PORT} -> SOCKS5 {SOCKS_HOST}:{SOCKS_PORT}\\\") server.serve_forever()\"]},\"182\":{\"c\":[\"Unity\"]},\"183\":{\"c\":[\"Network Proxy\"]},\"184\":{\"h\":\"Unreal\"},\"185\":{\"c\":[\"Unity\"]},\"186\":{\"h\":\"C++单例模式\",\"t\":[\"众所周知，根据创建时机单例模式分为懒汉式和饿汉式，根据线程是否安全分为线程安全和线程不安全。\",\"最近看Cherno的一个讲解视频，对于单例模式有了一个新的认识。Cherno认为，给单例提供一个随时随地的访问接口不利于游戏引擎这种底层框架的设计，会打乱程序的树状架构。\"]},\"187\":{\"h\":\"阶段一\",\"t\":[\"对于下面这个单例实现方式，根据静态对象的构造时机以及C++11后局部静态变量在第一次被访问时初始化是线程安全的特性，很容易得到这是饿汉式线程安全的一种实现。但这种方式不能直观地显式创建和销毁单例对象，尤其是当应用程序有多个单例，而且单例间存在依赖关系，需要特定的创建和销毁顺序。\",\"class Singleton { public: //单例对象创建在全局数据区 static Singleton GetInstance() { static Singleton instance; return instance } //单例对象创建在堆，此处引用的静态指针位置在全局数据区 static Singleton* GetInstance() { static Singleton* instance = new Singleton(); return instance } };\"]},\"188\":{\"h\":\"阶段二\",\"t\":[\"下面这个单例实现方式，将对象的创建和销毁的控制权交给了使用者，更容易掌控单例对象的创建和销毁时机。\",\"class Singleton { public: static Singleton* GetInstance() { return instance } static void Init() { s_instance = new Singleton(); } static void Shutdown() { delete s_instance; s_instance = nullptr; } private: static Singleton* instance; }; static Singleton* instance = nullptr;\",\"此外，Cherno建议将instance指针放在类外，如下：\",\"//Singleton.h class Singleton { public: static Singleton* GetInstance(); static void Init(); static void Shutdown(); }; //Singleton.cpp static Singleton* s_instance = nullptr; void Singleton::Init() { s_instance = new Singleton(); } void Singleton::Shutdown() { delete s_instance; s_instance = nullptr; } Singleton* Singleton::GetInstance() { return s_instance; }\",\"此时单例对象的指针处于文件作用域，无法被外部访问，完全被保护起来，但感觉和类内也差不多？ 我个人觉得还是放在类内比较好，可以防止命名空间污染，总不能都叫s_instance吧？虽然可以套上不同命名空间，但感觉还是不合适。\",\"如果想让s_instance可以在其他地方访问，将其声明为非静态，然后在访问的地方extern即可：\",\"//Singleton.cpp Singleton* s_instance = nullptr; //Main.cpp extern Singleton* instance;\"]},\"189\":{\"c\":[\"Program\"]},\"190\":{\"c\":[\"C++\",\"设计模式\"]},\"191\":{\"h\":\"C++锁的实现\",\"t\":[\"最近发现C++里面可以通过实现lock、unlock两个方法实现自定义锁，因此去看了下MSVC中std::lock_guard的C++11实现。lock_guard通过在构造函数中调用lock函数上锁、在unlock函数解锁。\",\"_EXPORT_STD template <class _Mutex> class _NODISCARD_LOCK lock_guard { // class with destructor that unlocks a mutex public: using mutex_type = _Mutex; explicit lock_guard(_Mutex& _Mtx) : _MyMutex(_Mtx) { // construct and lock _MyMutex.lock(); } lock_guard(_Mutex& _Mtx, adopt_lock_t) noexcept // strengthened : _MyMutex(_Mtx) {} // construct but don't lock ~lock_guard() noexcept { _MyMutex.unlock(); } lock_guard(const lock_guard&) = delete; lock_guard& operator=(const lock_guard&) = delete; private: _Mutex& _MyMutex; };\"]},\"192\":{\"h\":\"1.自旋锁\",\"t\":[\"获取不到资源时忙等待，适用于等待时间较短的情况，避免线程频繁切换。具体实现如下:\",\"class SpinLock { private: std::atomic_flag flag; public: SpinLock() :flag() {} void lock() { while (flag.test_and_set(std::memory_order_acquire)); } void unlock() { flag.clear(std::memory_order_release); } };\"]},\"193\":{\"h\":\"2.互斥锁\",\"t\":[\"获取不到资源时线程阻塞，适用于等待时间较长的情况\"]},\"194\":{\"h\":\"3.读写锁\",\"t\":[\"允许多个线程同时读取共享资源，但在写入时会阻塞所有读者和其他写者。\"]},\"195\":{\"c\":[\"Program\"]},\"196\":{\"c\":[\"C++\",\"锁\"]},\"197\":{\"h\":\"搭建个人博客网站\"},\"198\":{\"h\":\"1.搭建环境\",\"t\":[\"跟着官网VuePress快速上手教程一路走就好。\",\"先后安装相应功能包【记得选择添加默认的github工作流，网络的话需要后面手动添加】，设置git地址。\"]},\"199\":{\"h\":\"2.部署到Github Page\",\"t\":[\"保证工作流配置的分支为正常的工作分支，该工作流会将网页配置到gh-pages分支上【分支可在deploy-docs.yml文件中配置】\",\"工作流配置\",\"绑定域名和分支\",\"Settings>Pages>Build and deployment\"]},\"200\":{\"h\":\"3.插件安装\",\"t\":[\"稍微参考了下个人博客搭建教程，但版本不同差异较大。\",\"以安装vuepress-plugin-search-pro为例，执行以下命令安装相关包\",\"npm i -D vuepress-plugin-search-pro\",\"在theme.js文件中添加\",\"export default hopeTheme({ plugins: { searchPro: true,//添加此行即可 } })\"]},\"201\":{\"c\":[\"DIY\"]},\"202\":{\"c\":[\"VuePress\"]},\"203\":{\"h\":\"Unity插件\"},\"204\":{\"c\":[\"Unity\"]},\"205\":{\"h\":\"Unity导入RenderDoc Mesh\",\"t\":[\"插件地址：com.qstx.rdc_importer\",\"具体食用方法请看下方视频\"]},\"206\":{\"c\":[\"Unity\"]},\"207\":{\"c\":[\"Unity Plugins\",\"RenderDoc\"]},\"208\":{\"h\":\"Unity游戏逆向\"},\"209\":{\"c\":[\"Unity\"]},\"210\":{\"h\":\"Unity游戏逆向工具汇总\"},\"211\":{\"h\":\"一、资源逆向\",\"t\":[\"AssetStudio\",\"AssetRipper\",\"AssetView\",\"UnityPy\"]},\"212\":{\"h\":\"二、代码逆向\",\"t\":[\"Zygisk-Il2CppDumper\",\"Il2CppDumper\"]},\"213\":{\"c\":[\"Unity\"]},\"214\":{\"c\":[\"Unity Tools\"]},\"215\":{\"h\":\"猛兽派对效果复刻\"},\"216\":{\"c\":[\"Unity\"]},\"217\":{\"c\":[\"猛兽派对\",\"毛发效果\"]},\"218\":{\"h\":\"自定义Renderer Feature\"},\"219\":{\"c\":[\"Unity\"]},\"220\":{\"h\":\"基于Compute Shader的高斯模糊\"},\"221\":{\"c\":[\"Unity\"]},\"222\":{\"c\":[\"Compute Shader\",\"Renderer Feature\"]},\"223\":{\"h\":\"UE5.5安卓环境搭建及调试\",\"t\":[\"Epic官方教程大概看下就可，文档维护的不像Unity那么清楚\"]},\"224\":{\"h\":\"\"},\"225\":{\"h\":\"1. 选择自定义安装并指定Sdk目录\",\"t\":[\"Custom Install\",\"Sdk Path\"]},\"226\":{\"h\":\"2. 进入SDK Manager中安装Android SDK Command-line Tools\",\"t\":[\"安装Android SDK Command-line Tools\"]},\"227\":{\"h\":\"3.\",\"t\":[\"目前发现STUDIO_SDK_PATH这个变量在注册表里面为空，下图SetupAndroid.bat中第44行查询的值为空。又由于本文不是默认路径下安装Sdk，因此ANDROID_LOCAL这个文件夹必不存在。最终STUDIO_SDK_PATH为环境变量 %ANDROID_HOME% 的值。\",\"注册表中的STUDIO_SDK_PATH值\",\"STUDIO_SDK_PATH\",\"不然后面Unreal的bat脚本无法找到Sdk安装目录，进入AndroidSetup.bat第55行报错\",\"定位不到Sdk目录\"]},\"228\":{\"h\":\"二、 Unreal配置Android环境\"},\"229\":{\"h\":\"1. 执行Engine\\\\Extras\\\\Android\\\\SetupAndroid.bat\",\"t\":[\"Unreal会在这一步主要工作：\",\"帮你安装合适的sdk和ndk\",\"在用户环境变量中设置ANDROID_HOME、JAVA_HOME、NDKROOT、NDK_ROOT的值，删除ANDROID_SDK_HOME\",\"在用户PATH环境中添加platform-tools等环境变量，以访问adb.exe等\",\"环境变量操作\"]},\"230\":{\"h\":\"2. 配置sdk\",\"t\":[\"安装完成后，因为我是安装在自定义目录下，打包环境无法找到安卓环境，需要手动配置\",\"按照下图配置Android SDK路径即可\",\"引擎内配置Android SDK\"]},\"231\":{\"h\":\"3. 打包测试\",\"t\":[\"重启编辑器后确保打包环境能识别到SDK，并执行打包到手机上\",\"确保SDK被识别\",\"确保能够打包后继续\"]},\"232\":{\"h\":\"\",\"t\":[\"将解决方案配置（Solution Configuration） 设置为 DebugGame ，并在解决方案平台（Solution Platform） 中添加 Android，这一步会卡顿一段时间\",\"新增平台设置\",\"退出Visual Studio重新生成解决方案，Unreal将会自动填写所需的Android调试变量\",\"Android调试变量\",\"目前只能手机先启动游戏再附加到进程调试。之前成功过一次直接launch调试，不知道是不是因为直接launch有符号没有被加载，后面有空再探索\"]},\"233\":{\"c\":[\"Python\"]},\"234\":{\"c\":[\"Python\",\"Conda\"]},\"235\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"236\":{\"h\":\"Cpp练级\"},\"237\":{\"h\":\"工具推荐\"},\"238\":{\"h\":\"Csv2 Fbx\"},\"239\":{\"h\":\"设计模式\"},\"240\":{\"h\":\"锁\"},\"241\":{\"h\":\"个人主页\"},\"242\":{\"h\":\"网页搭建\"},\"243\":{\"h\":\"安卓平台\"}},\"dirtCount\":0,\"index\":[[\"网页搭建\",{\"0\":{\"242\":1}}],[\"网络的话需要后面手动添加\",{\"1\":{\"198\":1}}],[\"网络附加存储\",{\"1\":{\"71\":1}}],[\"个人主页\",{\"0\":{\"241\":1}}],[\"工具推荐\",{\"0\":{\"237\":1}}],[\"工作流配置\",{\"1\":{\"199\":1}}],[\"后面有空再探索\",{\"1\":{\"232\":1}}],[\"后离开\",{\"1\":{\"144\":1,\"146\":1}}],[\"之前成功过一次直接launch调试\",{\"1\":{\"232\":1}}],[\"之间\",{\"1\":{\"61\":1}}],[\"目前只能手机先启动游戏再附加到进程调试\",{\"1\":{\"232\":1}}],[\"目前发现studio\",{\"1\":{\"227\":1}}],[\"退出visual\",{\"1\":{\"232\":1}}],[\"退出环境\",{\"1\":{\"173\":1}}],[\"新增平台设置\",{\"1\":{\"232\":1}}],[\"确保能够打包后继续\",{\"1\":{\"231\":1}}],[\"确保sdk被识别\",{\"1\":{\"231\":1}}],[\"确保目录为stm32cubemx输出的目录\",{\"1\":{\"133\":1}}],[\"重启编辑器后确保打包环境能识别到sdk\",{\"1\":{\"231\":1}}],[\"重启samba服务以应用更改\",{\"1\":{\"76\":1}}],[\"重启samba服务\",{\"0\":{\"76\":1}}],[\"引擎内配置android\",{\"1\":{\"230\":1}}],[\"按照下图配置android\",{\"1\":{\"230\":1}}],[\"打包测试\",{\"0\":{\"231\":1}}],[\"打包环境无法找到安卓环境\",{\"1\":{\"230\":1}}],[\"打开stm32cubemx\",{\"1\":{\"132\":1}}],[\"打开网格\",{\"1\":{\"61\":1}}],[\"环境变量操作\",{\"1\":{\"229\":1}}],[\"环境搭建\",{\"0\":{\"170\":1}}],[\"删除android\",{\"1\":{\"229\":1}}],[\"删除环境\",{\"1\":{\"173\":1}}],[\"帮你安装合适的sdk和ndk\",{\"1\":{\"229\":1}}],[\"执行engine\",{\"0\":{\"229\":1}}],[\"执行以下命令安装相关包\",{\"1\":{\"200\":1}}],[\"定位不到sdk目录\",{\"1\":{\"227\":1}}],[\"定义输入亮度值\",{\"1\":{\"61\":1}}],[\"定义\",{\"1\":{\"61\":1,\"123\":1}}],[\"注册表中的studio\",{\"1\":{\"227\":1}}],[\"注意unity\",{\"1\":{\"180\":1}}],[\"又由于本文不是默认路径下安装sdk\",{\"1\":{\"227\":1}}],[\"毛发效果\",{\"2\":{\"217\":1}}],[\"猛兽派对\",{\"2\":{\"217\":1}}],[\"猛兽派对效果复刻\",{\"0\":{\"215\":1}}],[\"代码逆向\",{\"0\":{\"212\":1}}],[\"代码上传方式\",{\"1\":{\"133\":1}}],[\"资源逆向\",{\"0\":{\"211\":1}}],[\"资源管理器输入下方地址\",{\"1\":{\"79\":1}}],[\"插件地址\",{\"1\":{\"205\":1}}],[\"插件安装\",{\"0\":{\"200\":1}}],[\"java\",{\"1\":{\"229\":1}}],[\"js文件中添加\",{\"1\":{\"200\":1}}],[\"job\",{\"0\":{\"112\":1}}],[\"稍微参考了下个人博客搭建教程\",{\"1\":{\"200\":1}}],[\"绑定域名和分支\",{\"1\":{\"199\":1}}],[\"该工作流会将网页配置到gh\",{\"1\":{\"199\":1}}],[\"部署到github\",{\"0\":{\"199\":1}}],[\"部署服务器\",{\"0\":{\"89\":1}}],[\"记得选择添加默认的github工作流\",{\"1\":{\"198\":1}}],[\"记住这个名字\",{\"1\":{\"74\":1}}],[\"先后安装相应功能包\",{\"1\":{\"198\":1}}],[\"先进入\",{\"1\":{\"144\":1,\"146\":1}}],[\"跟着官网vuepress快速上手教程一路走就好\",{\"1\":{\"198\":1}}],[\"搭建环境\",{\"0\":{\"198\":1}}],[\"搭建个人博客网站\",{\"0\":{\"197\":1}}],[\"锁\",{\"0\":{\"240\":1},\"2\":{\"196\":1}}],[\"允许多个线程同时读取共享资源\",{\"1\":{\"194\":1}}],[\"读写锁\",{\"0\":{\"194\":1}}],[\"互斥锁\",{\"0\":{\"193\":1}}],[\"适用于等待时间较长的情况\",{\"1\":{\"193\":1}}],[\"适用于等待时间较短的情况\",{\"1\":{\"192\":1}}],[\"适合不熟悉命令行的用户\",{\"1\":{\"173\":1}}],[\"适合传递较大的力\",{\"1\":{\"123\":1}}],[\"获取不到资源时线程阻塞\",{\"1\":{\"193\":1}}],[\"获取不到资源时忙等待\",{\"1\":{\"192\":1}}],[\"获得线段两端点\",{\"1\":{\"148\":1}}],[\"获得满足位于aabb内的点\",{\"1\":{\"147\":1}}],[\"获得射线进入和离开的时机\",{\"1\":{\"142\":1}}],[\"自定义renderer\",{\"0\":{\"218\":1}}],[\"自旋锁\",{\"0\":{\"192\":1}}],[\"自动显示a\",{\"1\":{\"165\":1}}],[\"自动表达式显示\",{\"1\":{\"165\":1}}],[\"设计模式\",{\"0\":{\"239\":1},\"2\":{\"190\":1}}],[\"设置为\",{\"1\":{\"232\":1}}],[\"设置git地址\",{\"1\":{\"198\":1}}],[\"设置坐标轴范围\",{\"1\":{\"149\":1}}],[\"设置开机自动启动\",{\"1\":{\"108\":1}}],[\"设置samba用户\",{\"0\":{\"75\":1}}],[\"设置完成后可通过git\",{\"1\":{\"65\":1}}],[\"设置图像属性\",{\"1\":{\"61\":1}}],[\"设置图例位置为左上角\",{\"1\":{\"61\":1}}],[\"设置\",{\"1\":{\"61\":1}}],[\"设置每个像素的颜色\",{\"1\":{\"60\":1}}],[\"虽然可以套上不同命名空间\",{\"1\":{\"188\":1}}],[\"虽然目前一阶不连续\",{\"1\":{\"49\":1}}],[\"总不能都叫s\",{\"1\":{\"188\":1}}],[\"总结下conda中部署python\",{\"1\":{\"172\":1}}],[\"我个人觉得还是放在类内比较好\",{\"1\":{\"188\":1}}],[\"完全被保护起来\",{\"1\":{\"188\":1}}],[\"更容易掌控单例对象的创建和销毁时机\",{\"1\":{\"188\":1}}],[\"更新点和区域编码\",{\"1\":{\"148\":1}}],[\"阶段二\",{\"0\":{\"188\":1}}],[\"阶段一\",{\"0\":{\"187\":1}}],[\"单例对象创建在堆\",{\"1\":{\"187\":1}}],[\"单例对象创建在全局数据区\",{\"1\":{\"187\":1}}],[\"单次采样颜色关于时间的变化\",{\"1\":{\"49\":1}}],[\"尤其是当应用程序有多个单例\",{\"1\":{\"187\":1}}],[\"很容易得到这是饿汉式线程安全的一种实现\",{\"1\":{\"187\":1}}],[\"很明显两者关于时间是不连续的\",{\"1\":{\"49\":1}}],[\"很明显\",{\"1\":{\"48\":1}}],[\"会打乱程序的树状架构\",{\"1\":{\"186\":1}}],[\"给单例提供一个随时随地的访问接口不利于游戏引擎这种底层框架的设计\",{\"1\":{\"186\":1}}],[\"众所周知\",{\"1\":{\"186\":1}}],[\"⬇\",{\"1\":{\"181\":1}}],[\"kb\",{\"1\":{\"181\":2}}],[\"keyrings\",{\"1\":{\"105\":1,\"106\":1}}],[\"keys\",{\"1\":{\"97\":1}}],[\"keys文件中\",{\"1\":{\"97\":1}}],[\"key\",{\"1\":{\"66\":1,\"105\":2}}],[\"⬆\",{\"1\":{\"181\":1}}],[\"80\",{\"1\":{\"181\":2}}],[\"避免线程频繁切换\",{\"1\":{\"192\":1}}],[\"避免多线程输出冲突\",{\"1\":{\"181\":1}}],[\"避免硬编码\",{\"1\":{\"165\":1}}],[\"全局锁\",{\"1\":{\"181\":1}}],[\"请自行修改ip和端口\",{\"1\":{\"180\":1,\"181\":1}}],[\"请创建samba用户\",{\"1\":{\"75\":1}}],[\"具体食用方法请看下方视频\",{\"1\":{\"205\":1}}],[\"具体脚本如下\",{\"1\":{\"180\":1}}],[\"具体实现如下\",{\"1\":{\"192\":1}}],[\"具体实现\",{\"0\":{\"48\":1}}],[\"例如android\",{\"1\":{\"180\":1}}],[\"有时下载安装安卓相关的模块容易报错\",{\"1\":{\"180\":1}}],[\"没有专门的选项来设置网络代理\",{\"1\":{\"180\":1}}],[\"切换环境\",{\"1\":{\"173\":1}}],[\"切换到git用户\",{\"1\":{\"96\":1,\"97\":1}}],[\"查看现有环境\",{\"1\":{\"173\":1}}],[\"查看代理软件的协议及端口\",{\"1\":{\"65\":1}}],[\"常用conda命令\",{\"1\":{\"173\":1}}],[\"简化调试时的变量打印\",{\"1\":{\"165\":1}}],[\"直接输出表达式及其结果\",{\"1\":{\"165\":1}}],[\"直接在\",{\"1\":{\"163\":1}}],[\"表达式=\",{\"1\":{\"165\":1}}],[\"表示齿轮齿距大小\",{\"1\":{\"123\":1}}],[\"同时实现分隔与精度控制\",{\"1\":{\"164\":1}}],[\"甚至\",{\"1\":{\"164\":1}}],[\"结合舍入与千位分隔符\",{\"1\":{\"164\":1}}],[\"数字精准格式化\",{\"0\":{\"164\":1}}],[\"数据结构\",{\"0\":{\"143\":1}}],[\"小时制等\",{\"1\":{\"163\":1}}],[\"支持本地时间与\",{\"1\":{\"163\":1}}],[\"快速将datetime对象转为指定格式的字符串\",{\"1\":{\"163\":1}}],[\"快速判断相交情况\",{\"1\":{\"148\":1}}],[\"字符串中使用日期格式符\",{\"1\":{\"163\":1}}],[\"日期时间格式化\",{\"0\":{\"163\":1}}],[\"美化输出\",{\"1\":{\"162\":1}}],[\"等填充字符\",{\"1\":{\"162\":1}}],[\"还可搭配\",{\"1\":{\"162\":1}}],[\"还能实时看到绘制效果\",{\"1\":{\"125\":1}}],[\"指定占位宽度\",{\"1\":{\"162\":1}}],[\"居中\",{\"1\":{\"162\":1}}],[\"提升可读性\",{\"1\":{\"161\":1}}],[\"为大整数添加千位分隔符\",{\"1\":{\"161\":1}}],[\"或\",{\"1\":{\"161\":1}}],[\"用\",{\"1\":{\"161\":1,\"165\":1}}],[\"用于计算齿轮啮合\",{\"1\":{\"123\":1}}],[\"用于专门维护git服务器\",{\"1\":{\"94\":1}}],[\"大数字分隔显示\",{\"0\":{\"161\":1}}],[\"于是记录一下\",{\"1\":{\"160\":1}}],[\"于是快速复习记录一下\",{\"1\":{\"122\":1}}],[\"感觉这几个格式化打印都很有用\",{\"1\":{\"160\":1}}],[\"感知强度为纵轴\",{\"1\":{\"58\":1}}],[\"跳点搜索寻路算法\",{\"0\":{\"157\":1}}],[\"路径搜索算法\",{\"0\":{\"155\":1},\"2\":{\"156\":1}}],[\"寻路算法\",{\"0\":{\"152\":1}}],[\"秒\",{\"1\":{\"149\":2}}],[\"运行时间\",{\"1\":{\"149\":2}}],[\"检查并显示检测结果\",{\"1\":{\"149\":1}}],[\"选择自定义安装并指定sdk目录\",{\"0\":{\"225\":1}}],[\"选择在裁剪窗口外的点\",{\"1\":{\"148\":1}}],[\"选择合适的开发板和框架\",{\"1\":{\"133\":1}}],[\"则线段完全在裁剪窗口外\",{\"1\":{\"148\":1}}],[\"则接受该线段\",{\"1\":{\"148\":1}}],[\"迭代判断\",{\"1\":{\"148\":1}}],[\"求出虚交点\",{\"1\":{\"148\":1}}],[\"必相交\",{\"1\":{\"148\":1}}],[\"必不相交\",{\"1\":{\"144\":1,\"148\":1}}],[\"所在区域的编码\",{\"1\":{\"148\":1}}],[\"所以并不会导致最终颜色发生跳变\",{\"1\":{\"48\":1}}],[\"右对齐\",{\"1\":{\"162\":1}}],[\"右\",{\"1\":{\"148\":1}}],[\"右边是通过改变模型uv实现\",{\"1\":{\"47\":1}}],[\"左对齐\",{\"1\":{\"162\":1}}],[\"左\",{\"1\":{\"148\":1}}],[\"左中右分别使用10\",{\"1\":{\"148\":1}}],[\"左边是通过旋转模型实现\",{\"1\":{\"47\":1}}],[\"对于下面这个单例实现方式\",{\"1\":{\"187\":1}}],[\"对于单例模式有了一个新的认识\",{\"1\":{\"186\":1}}],[\"对空间进行编码\",{\"1\":{\"148\":1}}],[\"对flowmap的原理进行解释\",{\"1\":{\"45\":1}}],[\"递归判断\",{\"1\":{\"148\":1}}],[\"无法被外部访问\",{\"1\":{\"188\":1}}],[\"无法立即判断的情况下对线段进行裁剪\",{\"1\":{\"148\":1}}],[\"无法执行其他命令\",{\"1\":{\"97\":1}}],[\"向内裁剪\",{\"1\":{\"147\":2}}],[\"逐轴计算实际\",{\"1\":{\"147\":1}}],[\"预计算不等式中的各项\",{\"1\":{\"147\":1}}],[\"−tx​∗dx​≥xmaxx​−x0x​\",{\"1\":{\"147\":1}}],[\"−td≥xmax​−x0​\",{\"1\":{\"147\":1}}],[\"联立方程\",{\"1\":{\"147\":1}}],[\"方向\",{\"1\":{\"146\":1,\"147\":1}}],[\"方向向量为d\",{\"1\":{\"144\":1}}],[\"终点为x1​\",{\"1\":{\"146\":1,\"147\":1}}],[\"某个轴上出现\",{\"1\":{\"144\":1}}],[\"的值\",{\"1\":{\"227\":1}}],[\"的上下限并判断该轴内是否可能相交\",{\"1\":{\"147\":1}}],[\"的上下限\",{\"1\":{\"147\":1}}],[\"的情况\",{\"1\":{\"144\":1}}],[\"的正负决定进入和离开该轴的时间\",{\"1\":{\"144\":1}}],[\"的数值区域十分有限\",{\"1\":{\"58\":1}}],[\"根据静态对象的构造时机以及c++11后局部静态变量在第一次被访问时初始化是线程安全的特性\",{\"1\":{\"187\":1}}],[\"根据线程是否安全分为线程安全和线程不安全\",{\"1\":{\"186\":1}}],[\"根据线段两端点所在区域编码快速决定线段与aabb的关系\",{\"1\":{\"148\":1}}],[\"根据创建时机单例模式分为懒汉式和饿汉式\",{\"1\":{\"186\":1}}],[\"根据被除项的正负决定是上限还是下限\",{\"1\":{\"147\":1}}],[\"根据预计算结果\",{\"1\":{\"147\":1}}],[\"根据方向向量\",{\"1\":{\"144\":1}}],[\"根据工况选用合适的模数\",{\"1\":{\"124\":1}}],[\"画板链接\",{\"1\":{\"144\":1}}],[\"和\",{\"1\":{\"144\":1,\"146\":1,\"147\":1}}],[\"成立则相交\",{\"1\":{\"144\":1,\"146\":1}}],[\"是否成立\",{\"1\":{\"144\":1,\"146\":1}}],[\"是一个周期函数\",{\"1\":{\"48\":1}}],[\"判断\",{\"1\":{\"144\":1,\"146\":1}}],[\"取最小值作为离开aabb的时间\",{\"1\":{\"144\":1,\"146\":1}}],[\"取最大值作为进入aabb的时间\",{\"1\":{\"144\":1,\"146\":1}}],[\"算法\",{\"1\":{\"144\":1,\"146\":1,\"147\":1}}],[\"射线法\",{\"0\":{\"146\":1}}],[\"射线方程为x=x0​+t∗d\",{\"1\":{\"144\":1}}],[\"射线起点为x0​\",{\"1\":{\"144\":1}}],[\"射线与aabb求交算法\",{\"0\":{\"144\":1}}],[\"零\",{\"0\":{\"143\":1}}],[\"线段两端点均在aabb某一侧\",{\"1\":{\"148\":1}}],[\"线段全在aabb内\",{\"1\":{\"148\":1}}],[\"线段与轴的上限相交\",{\"1\":{\"148\":1}}],[\"线段与轴的下限相交\",{\"1\":{\"148\":1}}],[\"线段与矩形相交\",{\"1\":{\"147\":1}}],[\"线段与aabb求交算法\",{\"0\":{\"145\":1}}],[\"线段与aabb求交的算法\",{\"0\":{\"142\":1}}],[\"线段完全在边界外\",{\"1\":{\"147\":2}}],[\"线段在边界之外\",{\"1\":{\"147\":1}}],[\"线段平行于矩形的某一边\",{\"1\":{\"147\":1}}],[\"线段方程为x=x0​+t∗d\",{\"1\":{\"146\":1,\"147\":1}}],[\"线段起点为x0​\",{\"1\":{\"146\":1,\"147\":1}}],[\"线性空间是色彩在物理强度上的线性表达\",{\"1\":{\"58\":1}}],[\"线性空间\",{\"1\":{\"58\":1,\"61\":1}}],[\"线性空间和gamma空间\",{\"0\":{\"58\":1}}],[\"调试神器\",{\"0\":{\"165\":1}}],[\"调试\",{\"0\":{\"134\":1}}],[\"上\",{\"1\":{\"148\":1}}],[\"上中下分别使用10\",{\"1\":{\"148\":1}}],[\"上传相关的命令\",{\"1\":{\"134\":1}}],[\"上传\",{\"0\":{\"134\":1}}],[\"上图可点击此链接查看\",{\"1\":{\"49\":1}}],[\"上图中就是两种典型的实现方式\",{\"1\":{\"47\":1}}],[\"编译和上传\",{\"1\":{\"134\":1}}],[\"编译\",{\"0\":{\"134\":1}}],[\"编辑apache的gitweb配置文件\",{\"1\":{\"92\":1}}],[\"编辑gitweb配置文件\",{\"1\":{\"91\":1}}],[\"编辑samba配置文件\",{\"1\":{\"74\":1}}],[\"决定源文件\",{\"1\":{\"133\":1}}],[\"决定头文件\",{\"1\":{\"133\":1}}],[\"点击\",{\"1\":{\"132\":1}}],[\"进入androidsetup\",{\"1\":{\"227\":1}}],[\"进入sdk\",{\"0\":{\"226\":1}}],[\"进入stm32下载页面下载并安装stm32cubemx\",{\"1\":{\"132\":1}}],[\"进入\",{\"1\":{\"132\":1}}],[\"进一步假设basemap的采样函数为\",{\"1\":{\"49\":1}}],[\"主要还是围绕vscode\",{\"1\":{\"130\":1}}],[\"主动轮与从动轮转速的比值\",{\"1\":{\"123\":1}}],[\"介绍几种stm32开发环境搭建的方式\",{\"1\":{\"130\":1}}],[\"介绍页\",{\"0\":{\"0\":1}}],[\"镜像轴偏移角度2\",{\"1\":{\"125\":1}}],[\"镜像轴偏移角度1\",{\"1\":{\"125\":1}}],[\"↓\",{\"1\":{\"125\":1}}],[\"渐开线方程\",{\"1\":{\"125\":1}}],[\"顶隙系数\",{\"1\":{\"125\":1}}],[\"顶点颜色需要在时间尺度上连续\",{\"1\":{\"48\":1}}],[\"把方程式进行参数化\",{\"1\":{\"125\":1}}],[\"便捷工具\",{\"0\":{\"125\":1}}],[\"基于compute\",{\"0\":{\"220\":1}}],[\"基于conda的python环境搭建\",{\"0\":{\"172\":1}}],[\"基于vscode和stm32\",{\"0\":{\"135\":1}}],[\"基于platformio和stm32cubemx\",{\"0\":{\"131\":1}}],[\"基于树莓派的小巧nas实现\",{\"0\":{\"71\":1}}],[\"基圆半径\",{\"1\":{\"125\":1}}],[\"基圆直径\",{\"1\":{\"125\":1}}],[\"基圆\",{\"1\":{\"124\":1}}],[\"初定模数\",{\"1\":{\"124\":1}}],[\"初始化配置\",{\"0\":{\"108\":1}}],[\"初始化一个裸仓库\",{\"1\":{\"96\":1}}],[\"初始化仓库\",{\"0\":{\"96\":1}}],[\"乐呵一下就好了\",{\"1\":{\"124\":1}}],[\"想起来学机械设计的痛苦日子了\",{\"1\":{\"124\":1}}],[\"想要将感知强度真真正正地记录到数据中需要进行转换\",{\"1\":{\"58\":1}}],[\"想要在视觉上实现自然运动\",{\"1\":{\"48\":1}}],[\"想要让图形在视觉上发生运动\",{\"1\":{\"47\":1}}],[\"正常情况下是要分析受力情况\",{\"1\":{\"124\":1}}],[\"传动比\",{\"1\":{\"123\":1}}],[\"​\",{\"1\":{\"123\":1}}],[\"两相啮合齿轮分度圆圆心之间的距离\",{\"1\":{\"123\":1}}],[\"影响齿轮的接触强度和传动效率\",{\"1\":{\"123\":1}}],[\"压力角\",{\"1\":{\"123\":1,\"125\":1}}],[\"α=pi\",{\"1\":{\"125\":1}}],[\"α=20°\",{\"1\":{\"125\":1}}],[\"α\",{\"1\":{\"123\":1,\"125\":2}}],[\"分支可在deploy\",{\"1\":{\"199\":1}}],[\"分度圆上齿形法线与啮合线之间的夹角\",{\"1\":{\"123\":1}}],[\"分度圆是设计齿轮参数的参考圆\",{\"1\":{\"123\":1}}],[\"分度圆直径\",{\"1\":{\"123\":1,\"125\":1}}],[\"分享\",{\"2\":{\"3\":1}}],[\"齿跟圆直径\",{\"1\":{\"123\":1}}],[\"齿根圆直径\",{\"1\":{\"125\":1}}],[\"齿根圆\",{\"1\":{\"124\":1}}],[\"齿根形成的圆的直径\",{\"1\":{\"123\":1}}],[\"齿根到分度圆的距离\",{\"1\":{\"123\":1}}],[\"齿根高\",{\"1\":{\"123\":1}}],[\"齿顶形成的圆的直径\",{\"1\":{\"123\":1}}],[\"齿顶圆直径\",{\"1\":{\"123\":1,\"125\":1}}],[\"齿顶到分度圆的距离\",{\"1\":{\"123\":1}}],[\"齿顶高系数\",{\"1\":{\"125\":1}}],[\"齿顶高\",{\"1\":{\"123\":1}}],[\"齿轮图形画板\",{\"1\":{\"125\":1}}],[\"齿轮上齿的总数\",{\"1\":{\"123\":1}}],[\"齿轮的基本尺寸\",{\"1\":{\"123\":1}}],[\"齿轮的基准尺寸\",{\"1\":{\"123\":1}}],[\"齿轮的齿越大\",{\"1\":{\"123\":1}}],[\"齿数和分度圆\",{\"1\":{\"124\":1}}],[\"齿数决定了齿轮的分度圆直径和传动比\",{\"1\":{\"123\":1}}],[\"齿数\",{\"1\":{\"123\":1,\"124\":1,\"125\":1}}],[\"只是方向非单位向量\",{\"1\":{\"146\":1}}],[\"只有模数相等的齿轮才能啮合\",{\"1\":{\"123\":1}}],[\"只需要保证f1​和f2​的权重w1​和w2​在新旧周期更换时值为0\",{\"1\":{\"49\":1}}],[\"只需要保证basemap四方连续就好\",{\"1\":{\"48\":1}}],[\"模数越大\",{\"1\":{\"123\":1}}],[\"模数\",{\"1\":{\"123\":1}}],[\"公式\",{\"1\":{\"123\":1}}],[\"作用\",{\"1\":{\"123\":1}}],[\"参考射线与aabb求交的算法\",{\"1\":{\"146\":1}}],[\"参考文章\",{\"1\":{\"133\":1}}],[\"参考视频\",{\"1\":{\"132\":1,\"160\":1}}],[\"参考了下solidworks绘制齿轮这个视频\",{\"1\":{\"125\":1}}],[\"参考教程\",{\"1\":{\"27\":1}}],[\"参数t的上限约束到1\",{\"1\":{\"146\":1}}],[\"参数名\",{\"1\":{\"123\":1}}],[\"参数\",{\"1\":{\"123\":1}}],[\"参数解释\",{\"0\":{\"123\":1}}],[\"下图setupandroid\",{\"1\":{\"227\":1}}],[\"下面这个单例实现方式\",{\"1\":{\"188\":1}}],[\"下面是搜集到的三种算法即实现\",{\"1\":{\"142\":1}}],[\"下面是unity生成的线性空间和gamma空间的颜色强度图像\",{\"1\":{\"58\":1}}],[\"下方代码是将socks协议转成http协议\",{\"1\":{\"181\":1}}],[\"下划线或逗号\",{\"1\":{\"161\":1}}],[\"下\",{\"1\":{\"148\":1}}],[\"下载stm32cubemx和stm32cubeclt\",{\"0\":{\"136\":1}}],[\"下载打开solidworks后发现知识全还给老师了\",{\"1\":{\"122\":1}}],[\"动手之前觉得自己一个机械工程专业的人搞这个应该手到擒来\",{\"1\":{\"122\":1}}],[\"标准值为20°或25°\",{\"1\":{\"123\":1}}],[\"标准齿轮建模\",{\"0\":{\"122\":1}}],[\"标题\",{\"1\":{\"61\":1}}],[\"机械设计\",{\"0\":{\"120\":1},\"2\":{\"127\":1}}],[\"嵌入式开发\",{\"0\":{\"128\":1}}],[\"嵌入式\",{\"2\":{\"119\":1,\"139\":1}}],[\"速度话题发布\",{\"1\":{\"117\":1}}],[\"9\",{\"1\":{\"125\":7}}],[\"99\",{\"1\":{\"112\":1}}],[\"92f\",{\"1\":{\"60\":2}}],[\"5安卓环境搭建及调试\",{\"0\":{\"223\":1}}],[\"5678\",{\"1\":{\"164\":1}}],[\"54\",{\"1\":{\"149\":1}}],[\"5\",{\"0\":{\"165\":1},\"1\":{\"125\":1,\"149\":9,\"165\":1}}],[\"50\",{\"1\":{\"112\":1}}],[\"512\",{\"1\":{\"60\":1}}],[\"修改\",{\"1\":{\"112\":1}}],[\"此外\",{\"1\":{\"188\":1}}],[\"此处引用的静态指针位置在全局数据区\",{\"1\":{\"187\":1}}],[\"此时单例对象的指针处于文件作用域\",{\"1\":{\"188\":1}}],[\"此时可以通过bat设置代理并启动unity\",{\"1\":{\"180\":1}}],[\"此时应该正在配置必选的网络\",{\"1\":{\"112\":1}}],[\"此电脑\",{\"1\":{\"80\":1}}],[\"开机卡在网络配置\",{\"1\":{\"112\":1}}],[\"开发工具\",{\"0\":{\"28\":1}}],[\"每次开机卡在\",{\"0\":{\"112\":1}}],[\"树莓派安装ubuntu\",{\"0\":{\"112\":1}}],[\"树莓派\",{\"0\":{\"111\":1}}],[\"推荐配置\",{\"1\":{\"108\":1}}],[\"访问http\",{\"1\":{\"108\":1}}],[\"访问共享\",{\"0\":{\"77\":1}}],[\"启动\",{\"1\":{\"108\":1}}],[\"启用gitweb配置和cgi模块\",{\"1\":{\"92\":1}}],[\"包\",{\"1\":{\"107\":1}}],[\"也可以使用\",{\"1\":{\"107\":1}}],[\"软件源\",{\"0\":{\"106\":1}}],[\"|^20\",{\"1\":{\"162\":1}}],[\"|=\",{\"1\":{\"148\":3}}],[\"|\",{\"1\":{\"105\":1,\"106\":1,\"148\":2}}],[\"||\",{\"1\":{\"91\":1}}],[\"q\",{\"1\":{\"147\":3}}],[\"q1​=xmaxx​−x0x​\",{\"1\":{\"147\":1}}],[\"q0​=x0x​−xminx​\",{\"1\":{\"147\":1}}],[\"qo\",{\"1\":{\"105\":1}}],[\"qstx\",{\"1\":{\"60\":1,\"205\":1}}],[\"测试结果\",{\"1\":{\"149\":1}}],[\"测试代码\",{\"0\":{\"149\":1}}],[\"测试\",{\"0\":{\"98\":1}}],[\"测试配置\",{\"0\":{\"93\":1}}],[\"~lock\",{\"1\":{\"191\":1}}],[\"~\",{\"1\":{\"97\":1,\"173\":1}}],[\"需要手动配置\",{\"1\":{\"230\":1}}],[\"需要特定的创建和销毁顺序\",{\"1\":{\"187\":1}}],[\"需要确定是哪个边界\",{\"1\":{\"148\":1}}],[\"需要为git用户配置ssh公钥认证\",{\"1\":{\"97\":1}}],[\"需要在smb\",{\"1\":{\"82\":1}}],[\"考虑使用ssh的配置来限制允许的命令和操作\",{\"1\":{\"97\":1}}],[\"可能是有线也可能是无线\",{\"1\":{\"112\":1}}],[\"可选\",{\"0\":{\"97\":1}}],[\"可以防止命名空间污染\",{\"1\":{\"188\":1}}],[\"可以共享文件并在网络上的不同设备之间轻松访问\",{\"1\":{\"71\":1}}],[\"可以看到线性空间下能表征暗部\",{\"1\":{\"58\":1}}],[\"通常齿根高系数hf​∗=1\",{\"1\":{\"123\":1}}],[\"通常齿顶高系数ha​∗=1\",{\"1\":{\"123\":1}}],[\"通常为\",{\"1\":{\"95\":1}}],[\"通过python实现其他协议代理转http协议代理\",{\"0\":{\"181\":1}}],[\"通过\",{\"1\":{\"162\":1}}],[\"通过软件源安装\",{\"0\":{\"104\":1}}],[\"通过ssh拉取仓库正常\",{\"1\":{\"65\":1}}],[\"并在解决方案平台\",{\"1\":{\"232\":1}}],[\"并在unity\",{\"1\":{\"45\":1}}],[\"并执行打包到手机上\",{\"1\":{\"231\":1}}],[\"并复制命令执行即可安装最新gpu版\",{\"1\":{\"174\":1}}],[\"并加以组合获取9个编码\",{\"1\":{\"148\":1}}],[\"并对区域进行编码\",{\"1\":{\"148\":1}}],[\"并且通过添加轴的的维度完全可以应用于三维情况\",{\"1\":{\"142\":1}}],[\"并为其设置一个登录shell\",{\"1\":{\"95\":1}}],[\"然后在访问的地方extern即可\",{\"1\":{\"188\":1}}],[\"然后计算齿顶圆\",{\"1\":{\"124\":1}}],[\"然后重启apache\",{\"1\":{\"92\":1}}],[\"然后设置git代理\",{\"1\":{\"65\":1}}],[\"配置platformio\",{\"1\":{\"133\":1}}],[\"配置项目\",{\"0\":{\"133\":1}}],[\"配置工程各种设置\",{\"1\":{\"132\":1}}],[\"配置时钟和引脚\",{\"1\":{\"132\":1}}],[\"配置网页\",{\"1\":{\"108\":1}}],[\"配置apache\",{\"0\":{\"92\":1}}],[\"配置gitweb\",{\"0\":{\"91\":1}}],[\"配置sdk\",{\"0\":{\"230\":1}}],[\"配置samba\",{\"0\":{\"74\":1}}],[\"配置ssh访问\",{\"0\":{\"97\":1}}],[\"配置ssh\",{\"1\":{\"66\":1}}],[\"首先将环境切换到正确环境后\",{\"1\":{\"174\":1}}],[\"首先想到的方法是借助射线与aabb求交的算法\",{\"1\":{\"142\":1}}],[\"首先\",{\"1\":{\"90\":1,\"91\":1}}],[\"首先要明确两者所描述物理量的不同\",{\"1\":{\"58\":1}}],[\"局域网git服务器\",{\"0\":{\"87\":1}}],[\"七\",{\"0\":{\"82\":1}}],[\"填好用户密码即可\",{\"1\":{\"81\":1}}],[\"填充texture\",{\"1\":{\"60\":1}}],[\"输入smb\",{\"1\":{\"81\":1}}],[\"输入用户名密码即可访问\",{\"1\":{\"78\":1}}],[\"中添加\",{\"1\":{\"232\":1}}],[\"中\",{\"1\":{\"148\":2}}],[\"中间结果预计算\",{\"1\":{\"147\":1}}],[\"中心距\",{\"1\":{\"123\":1,\"125\":1}}],[\"中访问\",{\"1\":{\"80\":1}}],[\"中点击扫描到的设备\",{\"1\":{\"78\":1}}],[\"弹窗输入用户名密码即可访问\",{\"1\":{\"79\":1}}],[\"文档维护的不像unity那么清楚\",{\"1\":{\"223\":1}}],[\"文本对齐与填充\",{\"0\":{\"162\":1}}],[\"文件内容如下\",{\"1\":{\"92\":1}}],[\"文件\",{\"1\":{\"81\":1}}],[\"文件管理\",{\"1\":{\"78\":1}}],[\"文章分享\",{\"0\":{\"2\":1}}],[\"华为手机访问\",{\"0\":{\"78\":1}}],[\"六\",{\"0\":{\"77\":1}}],[\"五\",{\"0\":{\"76\":1}}],[\"四\",{\"0\":{\"75\":1}}],[\"安卓平台\",{\"0\":{\"243\":1}}],[\"安卓终端\",{\"0\":{\"29\":1}}],[\"安装完成后\",{\"1\":{\"230\":1}}],[\"安装android\",{\"1\":{\"226\":1}}],[\"安装platformio\",{\"0\":{\"133\":1}}],[\"安装对应的固件包\",{\"1\":{\"132\":1}}],[\"安装\",{\"0\":{\"107\":1,\"173\":1,\"174\":1}}],[\"安装git\",{\"1\":{\"90\":1}}],[\"安装必需的软件包\",{\"0\":{\"90\":1}}],[\"安装samba\",{\"0\":{\"72\":1}}],[\"拉取时权限错误\",{\"1\":{\"66\":1}}],[\"解决方法\",{\"1\":{\"65\":1,\"66\":1}}],[\"解压缩文件\",{\"0\":{\"25\":1}}],[\"释放图像\",{\"1\":{\"61\":1}}],[\"显示\",{\"1\":{\"61\":1}}],[\"轴标签\",{\"1\":{\"61\":2}}],[\"轴等长\",{\"1\":{\"61\":1}}],[\"轴和\",{\"1\":{\"61\":1}}],[\"ndk\",{\"1\":{\"229\":1}}],[\"ndkroot\",{\"1\":{\"229\":1}}],[\"nullptr\",{\"1\":{\"188\":5}}],[\"num\",{\"1\":{\"164\":3}}],[\"numpy\",{\"1\":{\"143\":1}}],[\"num2str\",{\"1\":{\"61\":1}}],[\"n\",{\"1\":{\"161\":5,\"164\":4,\"181\":4}}],[\"npm\",{\"1\":{\"200\":1}}],[\"np\",{\"1\":{\"143\":2,\"144\":1,\"149\":6}}],[\"neq\",{\"1\":{\"148\":1}}],[\"netplan\",{\"1\":{\"112\":1}}],[\"networkd\",{\"1\":{\"112\":2}}],[\"network\",{\"0\":{\"112\":1},\"1\":{\"112\":4},\"2\":{\"183\":1}}],[\"new\",{\"1\":{\"60\":6,\"187\":1,\"188\":2}}],[\"name\",{\"1\":{\"91\":1,\"173\":2,\"181\":2}}],[\"nas\",{\"0\":{\"85\":1},\"2\":{\"84\":1,\"100\":1}}],[\"nano\",{\"1\":{\"74\":1,\"91\":1,\"92\":1,\"97\":1}}],[\"nmbd\",{\"1\":{\"76\":1}}],[\"noexcept\",{\"1\":{\"191\":2}}],[\"nodiscard\",{\"1\":{\"191\":1}}],[\"node\",{\"1\":{\"180\":1}}],[\"now\",{\"1\":{\"163\":5,\"181\":5}}],[\"none\",{\"1\":{\"148\":1,\"149\":1,\"181\":2}}],[\"norm\",{\"1\":{\"144\":1}}],[\"northwest\",{\"1\":{\"61\":1}}],[\"not\",{\"1\":{\"112\":1,\"148\":1,\"181\":3,\"235\":1}}],[\"no\",{\"1\":{\"66\":1,\"74\":2}}],[\"绘制线段\",{\"1\":{\"149\":1}}],[\"绘制线性空间到\",{\"1\":{\"61\":1}}],[\"绘制\",{\"1\":{\"61\":1,\"149\":1}}],[\"绘制曲线\",{\"1\":{\"61\":1}}],[\"创建环境\",{\"1\":{\"173\":1}}],[\"创建git用户\",{\"0\":{\"95\":1}}],[\"创建共享文件夹\",{\"0\":{\"73\":1}}],[\"创建新图形窗口\",{\"1\":{\"61\":1}}],[\"创建一个新的texture2d对象\",{\"1\":{\"60\":1}}],[\"^20\",{\"1\":{\"162\":1}}],[\"^\",{\"1\":{\"61\":2}}],[\">=\",{\"1\":{\"181\":1}}],[\">20\",{\"1\":{\"162\":3}}],[\">manage\",{\"1\":{\"132\":1}}],[\">连接到服务器\",{\"1\":{\"81\":1}}],[\">映射网络驱动器\",{\"1\":{\"80\":1}}],[\">网上邻居\",{\"1\":{\"78\":1}}],[\">浏览\",{\"1\":{\"78\":1}}],[\">\",{\"1\":{\"61\":1,\"144\":1,\"146\":1,\"147\":2,\"148\":1,\"149\":1,\"181\":1}}],[\"空间的转换曲线\",{\"1\":{\"61\":1}}],[\"空间的输出值\",{\"1\":{\"61\":1}}],[\"空间\",{\"1\":{\"61\":1}}],[\"校正后的输出值\",{\"1\":{\"61\":1}}],[\"计算交点\",{\"1\":{\"148\":1}}],[\"计算点的区域编码\",{\"1\":{\"148\":1}}],[\"计算逐个轴中\",{\"1\":{\"147\":1}}],[\"计算线段离开各个轴的时间\",{\"1\":{\"146\":1}}],[\"计算线段进入各个轴的时间\",{\"1\":{\"146\":1}}],[\"计算射线离开各个轴的时间\",{\"1\":{\"144\":1}}],[\"计算射线进入各个轴的时间\",{\"1\":{\"144\":1}}],[\"计算从线性空间到\",{\"1\":{\"61\":1}}],[\"计算\",{\"1\":{\"61\":1,\"144\":1,\"146\":1,\"147\":1}}],[\"到线性空间的转换曲线\",{\"1\":{\"61\":1}}],[\"到\",{\"1\":{\"61\":1}}],[\"值\",{\"1\":{\"61\":2}}],[\"zygisk\",{\"1\":{\"212\":1}}],[\"z1+z2\",{\"1\":{\"125\":2}}],[\"z1​+z2​\",{\"1\":{\"123\":1}}],[\"z+2\",{\"1\":{\"125\":1}}],[\"z+2ha\",{\"1\":{\"125\":1}}],[\"z=m\",{\"1\":{\"125\":1}}],[\"z=\",{\"1\":{\"125\":1}}],[\"zero\",{\"1\":{\"60\":2}}],[\"z\",{\"1\":{\"60\":1,\"123\":1,\"125\":13}}],[\"zip\",{\"1\":{\"25\":1}}],[\"6\",{\"1\":{\"149\":6}}],[\"682171111f\",{\"1\":{\"60\":3}}],[\"64\",{\"1\":{\"60\":1,\"173\":2}}],[\"mtx\",{\"1\":{\"191\":4}}],[\"mutex\",{\"1\":{\"191\":6}}],[\"mutex>\",{\"1\":{\"191\":1}}],[\"mul\",{\"1\":{\"143\":1}}],[\"mesh\",{\"0\":{\"205\":1}}],[\"memory\",{\"1\":{\"192\":2}}],[\"method\",{\"1\":{\"181\":6}}],[\"menuitem\",{\"1\":{\"60\":1}}],[\"m=\",{\"1\":{\"125\":3}}],[\"m=1\",{\"1\":{\"60\":2}}],[\"m模数\",{\"1\":{\"125\":1}}],[\"m\",{\"1\":{\"123\":1,\"125\":3,\"163\":4}}],[\"miniconda3\",{\"1\":{\"173\":2}}],[\"miniconda\",{\"1\":{\"173\":1}}],[\"min\",{\"1\":{\"143\":6,\"144\":6,\"146\":6,\"147\":2,\"148\":2,\"149\":4}}],[\"micro\",{\"1\":{\"117\":3}}],[\"mime\",{\"1\":{\"92\":1}}],[\"mod\",{\"1\":{\"92\":4}}],[\"mymutex\",{\"1\":{\"191\":5}}],[\"my\",{\"1\":{\"91\":1,\"165\":2}}],[\"mkdir\",{\"1\":{\"73\":1,\"97\":1}}],[\"msg\",{\"1\":{\"117\":1}}],[\"msgs\",{\"1\":{\"117\":1}}],[\"ms\",{\"1\":{\"65\":1}}],[\"manager中安装android\",{\"0\":{\"226\":1}}],[\"main\",{\"1\":{\"106\":1,\"181\":1,\"188\":1}}],[\"matplotlib\",{\"1\":{\"143\":1}}],[\"matlab绘制转换函数曲线\",{\"0\":{\"61\":1}}],[\"mathf\",{\"1\":{\"60\":8}}],[\"max\",{\"1\":{\"60\":2,\"143\":6,\"144\":6,\"146\":6,\"147\":2,\"148\":2,\"149\":2}}],[\"hub只能使用http协议的代理\",{\"1\":{\"180\":1}}],[\"hub路径\",{\"1\":{\"180\":1}}],[\"hub\",{\"1\":{\"180\":3}}],[\"hub的设置中\",{\"1\":{\"180\":1}}],[\"hub启用网络代理\",{\"0\":{\"180\":1}}],[\"hub设置代理\",{\"0\":{\"179\":1}}],[\"hi\",{\"1\":{\"165\":1}}],[\"headers\",{\"1\":{\"181\":2}}],[\"help\",{\"1\":{\"132\":1}}],[\"height\",{\"1\":{\"60\":3}}],[\"hf=\",{\"1\":{\"125\":1}}],[\"hf\",{\"1\":{\"125\":1}}],[\"hf​=1\",{\"1\":{\"123\":1}}],[\"hf​\",{\"1\":{\"123\":1}}],[\"handle\",{\"1\":{\"181\":3}}],[\"ha=\",{\"1\":{\"125\":1}}],[\"ha\",{\"1\":{\"125\":3}}],[\"ha​=m\",{\"1\":{\"123\":1}}],[\"ha​\",{\"1\":{\"123\":1}}],[\"half3\",{\"1\":{\"60\":2}}],[\"h\",{\"1\":{\"96\":1,\"97\":1,\"163\":2,\"181\":3,\"188\":1}}],[\"hopetheme\",{\"1\":{\"200\":1}}],[\"hostname\",{\"1\":{\"181\":1}}],[\"host\",{\"1\":{\"181\":20}}],[\"home\",{\"1\":{\"95\":2,\"97\":1,\"227\":1,\"229\":3}}],[\"hold\",{\"1\":{\"61\":2}}],[\"html\",{\"1\":{\"60\":2}}],[\"https\",{\"1\":{\"65\":2,\"105\":1,\"106\":1,\"173\":1,\"174\":1,\"180\":1}}],[\"http\",{\"1\":{\"60\":2,\"65\":1,\"93\":1,\"180\":1,\"181\":9}}],[\"hlsl\",{\"1\":{\"60\":2}}],[\"$site\",{\"1\":{\"91\":1}}],[\"$my\",{\"1\":{\"91\":1}}],[\"$home\",{\"1\":{\"91\":1}}],[\"$git\",{\"1\":{\"91\":1}}],[\"$projectroot\",{\"1\":{\"91\":1}}],[\"$\",{\"1\":{\"60\":1,\"148\":4}}],[\"保证工作流配置的分支为正常的工作分支\",{\"1\":{\"199\":1}}],[\"保证新旧周期切换时uv连续即可\",{\"1\":{\"46\":1}}],[\"保留两位小数\",{\"1\":{\"164\":1}}],[\"保存配置文件后\",{\"1\":{\"76\":1}}],[\"保存texture为png文件\",{\"1\":{\"60\":1}}],[\"保持当前图像\",{\"1\":{\"61\":1}}],[\"应用设置的像素颜色\",{\"1\":{\"60\":1}}],[\"应用flowmap的过程抽象为\",{\"1\":{\"48\":1}}],[\"x86\",{\"1\":{\"173\":2}}],[\"xlim\",{\"1\":{\"149\":1}}],[\"xlabel\",{\"1\":{\"61\":1,\"149\":1}}],[\"xn​\",{\"1\":{\"148\":1}}],[\"x1​\",{\"1\":{\"148\":1}}],[\"x0​\",{\"1\":{\"148\":1}}],[\"x=x0​+tmax​∗d\",{\"1\":{\"147\":1}}],[\"x=x0​+tmin​∗d\",{\"1\":{\"147\":1}}],[\"x=x0​+t∗d\",{\"1\":{\"147\":1}}],[\"x=x0​+texit​∗d\",{\"1\":{\"144\":1,\"146\":1}}],[\"x=x0​+tenter​∗d\",{\"1\":{\"144\":1,\"146\":1}}],[\"xmax​\",{\"1\":{\"144\":1,\"146\":1,\"147\":1}}],[\"xmin​≤x≤xmax​\",{\"1\":{\"147\":1}}],[\"xmin​\",{\"1\":{\"144\":1,\"146\":1,\"147\":1}}],[\"xt=m\",{\"1\":{\"125\":1}}],[\"xt=rb\",{\"1\":{\"125\":1}}],[\"xiaomi\",{\"1\":{\"112\":1}}],[\"xray\",{\"1\":{\"107\":1}}],[\"xattr\",{\"1\":{\"82\":1}}],[\"x++\",{\"1\":{\"60\":1}}],[\"x\",{\"1\":{\"60\":5,\"61\":7,\"143\":6,\"149\":1}}],[\"<class\",{\"1\":{\"191\":1}}],[\"<my\",{\"1\":{\"173\":3}}],[\"<20\",{\"1\":{\"162\":2}}],[\"<<\",{\"1\":{\"148\":3}}],[\"<directory\",{\"1\":{\"92\":1}}],[\"<ifdefine\",{\"1\":{\"92\":1}}],[\"<ifmodule\",{\"1\":{\"92\":4}}],[\"<=\",{\"1\":{\"60\":3}}],[\"<\",{\"1\":{\"60\":4,\"92\":6,\"144\":1,\"146\":1,\"147\":4,\"148\":1}}],[\"+=\",{\"1\":{\"181\":2}}],[\"+<\",{\"1\":{\"133\":1}}],[\"+m\",{\"1\":{\"125\":1}}],[\"+rb\",{\"1\":{\"125\":1}}],[\"+execcgi\",{\"1\":{\"92\":1}}],[\"+followsymlinks\",{\"1\":{\"92\":1}}],[\"+\",{\"1\":{\"60\":4,\"143\":2,\"148\":2,\"149\":6,\"165\":3,\"181\":1}}],[\"+dir⋅fract\",{\"1\":{\"48\":1}}],[\"+dir⋅t\",{\"1\":{\"48\":1}}],[\"len\",{\"1\":{\"181\":2}}],[\"legend\",{\"1\":{\"61\":1,\"149\":1}}],[\"ls=\",{\"1\":{\"149\":2}}],[\"last\",{\"1\":{\"181\":3}}],[\"latest\",{\"1\":{\"173\":2}}],[\"label=\",{\"1\":{\"149\":1}}],[\"layout\",{\"1\":{\"117\":1}}],[\"liang\",{\"0\":{\"147\":1},\"1\":{\"147\":1,\"149\":3}}],[\"list\",{\"1\":{\"106\":2,\"173\":1}}],[\"linux\",{\"1\":{\"173\":2}}],[\"linalg\",{\"1\":{\"144\":1}}],[\"link\",{\"1\":{\"91\":1}}],[\"line\",{\"0\":{\"226\":1},\"1\":{\"149\":3,\"181\":6,\"226\":1}}],[\"linestyle=\",{\"1\":{\"149\":2}}],[\"linewidth=0\",{\"1\":{\"149\":3}}],[\"linewidth=1\",{\"1\":{\"149\":1}}],[\"linewidth\",{\"1\":{\"61\":2}}],[\"lineartogammaspaceexact\",{\"1\":{\"60\":4}}],[\"lineartogammaspace\",{\"1\":{\"60\":1}}],[\"linear\",{\"1\":{\"60\":1,\"61\":6}}],[\"lineargamma\",{\"1\":{\"60\":1}}],[\"linspace\",{\"1\":{\"61\":1}}],[\"linrgb\",{\"1\":{\"60\":6}}],[\"l查看配置结果\",{\"1\":{\"65\":1}}],[\"lower\",{\"1\":{\"181\":1}}],[\"lock\",{\"1\":{\"181\":4,\"191\":14,\"192\":1}}],[\"local这个文件夹必不存在\",{\"1\":{\"227\":1}}],[\"localhost\",{\"1\":{\"108\":1}}],[\"location\",{\"1\":{\"61\":1}}],[\"log\",{\"1\":{\"60\":1}}],[\"将解决方案配置\",{\"1\":{\"232\":1}}],[\"将其声明为非静态\",{\"1\":{\"188\":1}}],[\"将对象的创建和销毁的控制权交给了使用者\",{\"1\":{\"188\":1}}],[\"将整个空间用aabb四条边划分为9个区域\",{\"1\":{\"148\":1}}],[\"将线段视为有上限的射线\",{\"1\":{\"146\":1}}],[\"将所有可能的网络类型都设置为可选\",{\"1\":{\"112\":1}}],[\"将文件保存到项目文件夹下\",{\"1\":{\"60\":1}}],[\"将texture转换为png格式\",{\"1\":{\"60\":1}}],[\"将你的个人介绍和档案放置在此处\",{\"1\":{\"0\":1}}],[\"生成工程代码\",{\"1\":{\"132\":1}}],[\"生成\",{\"1\":{\"60\":1}}],[\"bat\",{\"0\":{\"229\":1}}],[\"bat第55行报错\",{\"1\":{\"227\":1}}],[\"bat中第44行查询的值为空\",{\"1\":{\"227\":1}}],[\"baserequesthandler\",{\"1\":{\"181\":1}}],[\"bash\",{\"1\":{\"173\":1}}],[\"barsky\",{\"1\":{\"147\":1,\"149\":3}}],[\"barsky算法\",{\"0\":{\"147\":1}}],[\"bare\",{\"1\":{\"96\":1}}],[\"b=\",{\"1\":{\"165\":1}}],[\"black\",{\"1\":{\"149\":2}}],[\"blogspot\",{\"1\":{\"60\":2}}],[\"block\",{\"1\":{\"42\":1}}],[\"break\",{\"1\":{\"148\":4,\"181\":1}}],[\"browsable\",{\"1\":{\"74\":1}}],[\"but\",{\"1\":{\"191\":1}}],[\"button\",{\"1\":{\"60\":1}}],[\"build\",{\"1\":{\"133\":2,\"180\":1}}],[\"bob\",{\"1\":{\"165\":1}}],[\"board\",{\"1\":{\"133\":1}}],[\"bool\",{\"1\":{\"60\":2}}],[\"be\",{\"0\":{\"112\":1}}],[\"by\",{\"1\":{\"112\":1}}],[\"by=\",{\"1\":{\"106\":1}}],[\"bytes\",{\"1\":{\"60\":2,\"181\":6}}],[\"byte\",{\"1\":{\"60\":1}}],[\"bin\",{\"1\":{\"95\":2,\"97\":1}}],[\"b\",{\"1\":{\"60\":2,\"61\":1,\"165\":3,\"181\":2}}],[\"epic官方教程大概看下就可\",{\"1\":{\"223\":1}}],[\"error\",{\"1\":{\"181\":1}}],[\"errors=\",{\"1\":{\"181\":2}}],[\"established\",{\"1\":{\"181\":1}}],[\"e\",{\"1\":{\"180\":1,\"181\":2}}],[\"edgecolor=\",{\"1\":{\"149\":1}}],[\"editorwindow\",{\"1\":{\"60\":1}}],[\"elif\",{\"1\":{\"148\":3}}],[\"else\",{\"1\":{\"60\":5,\"144\":1,\"146\":1,\"147\":2,\"148\":5,\"149\":1,\"181\":5}}],[\"explicit\",{\"1\":{\"191\":1}}],[\"export\",{\"1\":{\"191\":1,\"200\":1}}],[\"exc\",{\"1\":{\"181\":1}}],[\"exception\",{\"1\":{\"181\":1}}],[\"except\",{\"1\":{\"181\":2}}],[\"extras\",{\"0\":{\"229\":1}}],[\"extract\",{\"1\":{\"181\":2}}],[\"extern\",{\"1\":{\"188\":1}}],[\"extend\",{\"1\":{\"149\":15}}],[\"extension设置\",{\"1\":{\"137\":1}}],[\"extension配置\",{\"0\":{\"137\":1}}],[\"extension\",{\"0\":{\"135\":1}}],[\"exe等\",{\"1\":{\"229\":1}}],[\"exe\",{\"1\":{\"180\":1}}],[\"exact\",{\"1\":{\"60\":1}}],[\"embeded\",{\"1\":{\"132\":1}}],[\"eth0\",{\"1\":{\"112\":1}}],[\"ethernets\",{\"1\":{\"112\":1}}],[\"etc\",{\"1\":{\"74\":2,\"91\":1,\"92\":1,\"105\":1,\"106\":2,\"112\":2}}],[\"echo\",{\"1\":{\"106\":1,\"180\":1}}],[\"equal\",{\"1\":{\"61\":1}}],[\"end\",{\"1\":{\"149\":4}}],[\"env>\",{\"1\":{\"173\":3}}],[\"env\",{\"1\":{\"133\":1,\"173\":2}}],[\"enable\",{\"1\":{\"92\":3,\"108\":1}}],[\"encodetopng\",{\"1\":{\"60\":1}}],[\"engine\",{\"2\":{\"13\":1}}],[\"il2cppdumper\",{\"1\":{\"212\":2}}],[\"ignore\",{\"1\":{\"181\":2}}],[\"importer\",{\"1\":{\"205\":1}}],[\"import\",{\"1\":{\"143\":4,\"163\":1,\"181\":8}}],[\"image\",{\"2\":{\"41\":1,\"44\":1}}],[\"icore\",{\"1\":{\"133\":1}}],[\"i=n2​n1​​=z1​z2​​\",{\"1\":{\"123\":1}}],[\"i\",{\"1\":{\"123\":1,\"147\":6,\"149\":2,\"163\":1,\"200\":1}}],[\"it\",{\"1\":{\"112\":1}}],[\"ipad挂载\",{\"0\":{\"81\":1},\"1\":{\"81\":1}}],[\"ip\",{\"1\":{\"79\":1,\"81\":1,\"93\":1,\"98\":1}}],[\"inv\",{\"1\":{\"144\":4,\"146\":4}}],[\"inverse\",{\"1\":{\"61\":1}}],[\"in\",{\"1\":{\"144\":1,\"146\":1,\"147\":1,\"148\":2,\"149\":3,\"181\":3}}],[\"inf\",{\"1\":{\"144\":2,\"146\":1}}],[\"information\",{\"1\":{\"112\":1}}],[\"index\",{\"1\":{\"143\":2,\"174\":1}}],[\"inc\",{\"1\":{\"133\":1}}],[\"ini文件\",{\"1\":{\"133\":1}}],[\"init\",{\"1\":{\"96\":1,\"112\":2,\"143\":2,\"188\":3}}],[\"instance可以在其他地方访问\",{\"1\":{\"188\":1}}],[\"instance吧\",{\"1\":{\"188\":1}}],[\"instance\",{\"1\":{\"112\":1,\"187\":4,\"188\":13}}],[\"install\",{\"1\":{\"72\":1,\"90\":1,\"107\":1,\"174\":1,\"225\":1}}],[\"input\",{\"1\":{\"61\":1}}],[\"int16multiarray\",{\"1\":{\"117\":1}}],[\"intensity\",{\"1\":{\"61\":2}}],[\"int\",{\"1\":{\"60\":4,\"161\":1,\"165\":2,\"181\":1}}],[\"ifdefine>\",{\"1\":{\"92\":1}}],[\"ifmodule>\",{\"1\":{\"92\":4}}],[\"if\",{\"1\":{\"60\":6,\"144\":3,\"146\":3,\"147\":7,\"148\":6,\"149\":1,\"181\":13}}],[\"is\",{\"0\":{\"112\":1},\"1\":{\"60\":8,\"112\":1,\"149\":7,\"181\":3}}],[\"io\",{\"1\":{\"60\":1}}],[\"附件\",{\"0\":{\"59\":1}}],[\"转换函数\",{\"1\":{\"58\":1}}],[\"拟合得到一个幂函数曲线y=x^0\",{\"1\":{\"58\":1}}],[\"拟合得到一个幂函数曲线y=x^2\",{\"1\":{\"58\":1}}],[\"物理强度为纵轴\",{\"1\":{\"58\":1}}],[\"以访问adb\",{\"1\":{\"229\":1}}],[\"以安装vuepress\",{\"1\":{\"200\":1}}],[\"以x轴为例\",{\"1\":{\"147\":3}}],[\"以感知强度为横轴\",{\"1\":{\"58\":1}}],[\"以物理强度为横轴\",{\"1\":{\"58\":1}}],[\"从左到右gamma空间下从0增长到1\",{\"1\":{\"58\":1}}],[\"从左到右线性空间下从0增长到1\",{\"1\":{\"58\":1}}],[\"视觉意义上的暗部\",{\"1\":{\"58\":1}}],[\"色彩空间的作用及各空间之间的转换\",{\"0\":{\"57\":1}}],[\"色彩空间\",{\"0\":{\"55\":1}}],[\"经典算法\",{\"0\":{\"53\":1}}],[\"制作flowmap的houdini文件\",{\"1\":{\"50\":1}}],[\"效果\",{\"1\":{\"50\":1}}],[\"实现\",{\"1\":{\"144\":1,\"147\":1,\"148\":2}}],[\"实现一个简陋的流动效果\",{\"1\":{\"50\":1}}],[\"实用工具推荐\",{\"0\":{\"20\":1}}],[\"使用我下面这个链接也能很方便进行计算\",{\"1\":{\"125\":1}}],[\"使用\",{\"1\":{\"97\":1}}],[\"使用以下命令创建一个名为git的新用户\",{\"1\":{\"95\":1}}],[\"使用ase编写了flowmap采样的shader\",{\"1\":{\"50\":1}}],[\"使得可以在同一图上绘制多条曲线\",{\"1\":{\"61\":1}}],[\"使得每个采样在跳变时权重为0\",{\"1\":{\"46\":1}}],[\"404\",{\"1\":{\"235\":1}}],[\"4096\",{\"1\":{\"181\":2}}],[\"40\",{\"1\":{\"149\":1}}],[\"4=360\",{\"1\":{\"125\":2}}],[\"443\",{\"1\":{\"65\":1,\"181\":2}}],[\"4166667f\",{\"1\":{\"60\":1}}],[\"416666667f\",{\"1\":{\"60\":1}}],[\"4f\",{\"1\":{\"60\":1}}],[\"45454545f\",{\"1\":{\"60\":1}}],[\"4545\",{\"1\":{\"58\":1}}],[\"4\",{\"0\":{\"50\":1,\"81\":1,\"93\":1,\"98\":1,\"164\":1},\"1\":{\"125\":2,\"147\":1,\"149\":2}}],[\"最终studio\",{\"1\":{\"227\":1}}],[\"最终颜色关于时间的变化\",{\"1\":{\"49\":1}}],[\"最终颜色c=f1​w1​+f2​w2​在时间上是连续的\",{\"1\":{\"49\":1}}],[\"最近发现c++里面可以通过实现lock\",{\"1\":{\"191\":1}}],[\"最近看cherno的一个讲解视频\",{\"1\":{\"186\":1}}],[\"最近想打印一个齿轮\",{\"1\":{\"122\":1}}],[\"最后将这些采样颜色加权求和作为最终输出颜色\",{\"1\":{\"48\":1}}],[\"权重关于时间的变化\",{\"1\":{\"49\":1}}],[\"关于时间的变化如下图所示\",{\"1\":{\"49\":1}}],[\"whl\",{\"1\":{\"174\":1}}],[\"while\",{\"1\":{\"148\":1,\"181\":1,\"192\":1}}],[\"walle机器人开发\",{\"0\":{\"117\":1}}],[\"wallebot\",{\"0\":{\"115\":1}}],[\"wait\",{\"0\":{\"112\":1}}],[\"wlan0\",{\"1\":{\"112\":1}}],[\"wget\",{\"1\":{\"105\":1,\"173\":1}}],[\"wifis\",{\"1\":{\"112\":1}}],[\"with\",{\"1\":{\"112\":1,\"181\":2,\"191\":1}}],[\"will\",{\"1\":{\"112\":1}}],[\"windows挂载\",{\"0\":{\"80\":1},\"1\":{\"80\":1}}],[\"windows访问\",{\"0\":{\"79\":1},\"1\":{\"79\":1}}],[\"width\",{\"1\":{\"60\":4}}],[\"write\",{\"1\":{\"112\":1}}],[\"writeallbytes\",{\"1\":{\"60\":1}}],[\"writable\",{\"1\":{\"74\":1}}],[\"w\",{\"1\":{\"60\":1}}],[\"w2​=1−w1​\",{\"1\":{\"49\":1}}],[\"w1​=min\",{\"1\":{\"49\":1}}],[\"wx+d\",{\"1\":{\"49\":1}}],[\"wx\",{\"1\":{\"49\":1}}],[\"本地代理协议及端口\",{\"1\":{\"65\":1}}],[\"本文构造的权重函数为\",{\"1\":{\"49\":1}}],[\"本来想用猛兽派对的尼莫模型尝试一下毛发渲染\",{\"1\":{\"33\":1}}],[\"yml文件中配置\",{\"1\":{\"199\":1}}],[\"ylim\",{\"1\":{\"149\":1}}],[\"ylabel\",{\"1\":{\"61\":1,\"149\":1}}],[\"yt=m\",{\"1\":{\"125\":1}}],[\"yt=rb\",{\"1\":{\"125\":1}}],[\"y^y\",{\"1\":{\"124\":1}}],[\"yaml\",{\"1\":{\"112\":1}}],[\"your\",{\"1\":{\"75\":1,\"93\":1,\"98\":1}}],[\"yes\",{\"1\":{\"74\":2}}],[\"y++\",{\"1\":{\"60\":1}}],[\"y\",{\"1\":{\"60\":4,\"61\":6,\"90\":1,\"143\":6,\"149\":1,\"163\":2,\"173\":1}}],[\"y2​=mod\",{\"1\":{\"49\":1}}],[\"y1​=mod\",{\"1\":{\"49\":1}}],[\"y指代采样uv\",{\"1\":{\"49\":1}}],[\"第二次采样比第一次提前d个周期\",{\"1\":{\"49\":1}}],[\"假设\",{\"1\":{\"144\":1,\"146\":1,\"147\":1}}],[\"假设使用两次flowmap采样\",{\"1\":{\"49\":1}}],[\"假设现在需要制作一个水面在球体表面循环流动的效果\",{\"1\":{\"47\":1}}],[\"采样周期为t=w1​\",{\"1\":{\"49\":1}}],[\"另外w表示采样频率\",{\"1\":{\"49\":1}}],[\"详细证明\",{\"0\":{\"49\":1}}],[\"3f\",{\"1\":{\"164\":2}}],[\"39\",{\"1\":{\"149\":1}}],[\"360\",{\"1\":{\"125\":2}}],[\"305306011f\",{\"1\":{\"60\":1}}],[\"3\",{\"0\":{\"49\":1,\"80\":1,\"92\":1,\"97\":1,\"107\":1,\"125\":1,\"134\":1,\"148\":1,\"163\":1,\"194\":1,\"200\":1,\"227\":1,\"231\":1},\"1\":{\"125\":2,\"149\":1}}],[\"而且单例间存在依赖关系\",{\"1\":{\"187\":1}}],[\"而且还要反复迭代修改\",{\"1\":{\"124\":1}}],[\"而非必选\",{\"1\":{\"112\":1}}],[\"而gamma空间下明暗很均匀\",{\"1\":{\"58\":1}}],[\"而flowmap上记录的流动方向一般并不是整体一致的\",{\"1\":{\"48\":1}}],[\"而神奇的flowmap就属于后者\",{\"1\":{\"47\":1}}],[\"因为我是安装在自定义目录下\",{\"1\":{\"230\":1}}],[\"因为人眼对光线的感知强度与光线的物理强度之间是非线性的\",{\"1\":{\"58\":1}}],[\"因为每个采样颜色在发生跳变时权重为0\",{\"1\":{\"48\":1}}],[\"因为basemap上有很多像素\",{\"1\":{\"48\":1}}],[\"因此android\",{\"1\":{\"227\":1}}],[\"因此去看了下msvc中std\",{\"1\":{\"191\":1}}],[\"因此可以进行多次错开周期的采样\",{\"1\":{\"48\":1}}],[\"因此顶点色ct​在新旧周期切换时很容易发生突变\",{\"1\":{\"48\":1}}],[\"因此不会让时间t过大而采样到很远的点\",{\"1\":{\"48\":1}}],[\"除非恰好在切换时uv是连续的\",{\"1\":{\"48\":1}}],[\"这一步会卡顿一段时间\",{\"1\":{\"232\":1}}],[\"这一步决定了基本的装配结构和传动比\",{\"1\":{\"124\":1}}],[\"这有助于增强安全性\",{\"1\":{\"97\":1}}],[\"这有助于提高安全性和简化权限管理\",{\"1\":{\"94\":1}}],[\"这将限制用户只能进行git相关操作\",{\"1\":{\"95\":1}}],[\"这个配置块下增加如下配置即可\",{\"1\":{\"82\":1}}],[\"这个操作引入进来的\",{\"1\":{\"48\":1}}],[\"这是连接时的文件夹地址\",{\"1\":{\"74\":1}}],[\"这是从\",{\"1\":{\"48\":1}}],[\"这里使用x指代时间t\",{\"1\":{\"49\":1}}],[\"这就是flowmap的魔法\",{\"1\":{\"47\":1}}],[\"故有\",{\"1\":{\"49\":2}}],[\"故使用flowmap后的顶点颜色为\",{\"1\":{\"48\":1}}],[\"故上式改写为\",{\"1\":{\"48\":1}}],[\"==\",{\"1\":{\"147\":1,\"148\":1,\"181\":3}}],[\"=m\",{\"1\":{\"125\":1}}],[\"=0\",{\"1\":{\"125\":1}}],[\"=1\",{\"1\":{\"125\":1}}],[\"=g\",{\"1\":{\"48\":1}}],[\"=\",{\"1\":{\"48\":2,\"60\":17,\"61\":5,\"74\":5,\"82\":1,\"91\":4,\"133\":6,\"143\":3,\"144\":10,\"146\":10,\"147\":8,\"148\":16,\"149\":32,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"165\":6,\"181\":34,\"187\":1,\"188\":7,\"191\":3}}],[\"=flow\",{\"1\":{\"48\":2}}],[\"vuepress\",{\"1\":{\"200\":1},\"2\":{\"202\":1}}],[\"validation\",{\"1\":{\"180\":1}}],[\"value\",{\"1\":{\"60\":13,\"61\":4}}],[\"var\",{\"1\":{\"162\":9,\"165\":2}}],[\"visualize\",{\"1\":{\"149\":2}}],[\"vs\",{\"0\":{\"135\":1,\"137\":1},\"1\":{\"137\":1,\"149\":1}}],[\"vscode左下角是编译\",{\"1\":{\"134\":1}}],[\"vscode插件中搜索并安装platformio\",{\"1\":{\"133\":1}}],[\"v2ray\",{\"1\":{\"107\":1}}],[\"v2raya\",{\"0\":{\"106\":1,\"107\":1},\"1\":{\"105\":2,\"106\":4,\"107\":1,\"108\":3}}],[\"vfs\",{\"1\":{\"82\":1}}],[\"vec2d\",{\"1\":{\"143\":6,\"149\":8}}],[\"vector4\",{\"1\":{\"60\":9}}],[\"version\",{\"1\":{\"60\":3,\"112\":1}}],[\"void\",{\"1\":{\"60\":4,\"188\":6,\"192\":2}}],[\"vt​\",{\"1\":{\"48\":3}}],[\"v\",{\"1\":{\"48\":6,\"49\":1,\"60\":5,\"143\":14}}],[\"ue5\",{\"0\":{\"223\":1}}],[\"urlparse\",{\"1\":{\"181\":1}}],[\"urllib\",{\"1\":{\"181\":2}}],[\"url\",{\"1\":{\"174\":1,\"181\":7}}],[\"uri\",{\"1\":{\"91\":1}}],[\"up\",{\"1\":{\"181\":2}}],[\"upper\",{\"1\":{\"181\":3}}],[\"upload\",{\"1\":{\"133\":1}}],[\"update\",{\"1\":{\"106\":1}}],[\"ubuntu相关问题汇总\",{\"0\":{\"111\":1}}],[\"ubuntu\",{\"0\":{\"101\":1,\"103\":1},\"1\":{\"103\":1},\"2\":{\"100\":1,\"102\":1,\"110\":1,\"114\":1}}],[\"unlock\",{\"1\":{\"191\":1,\"192\":1}}],[\"unlocks\",{\"1\":{\"191\":1}}],[\"unlock两个方法实现自定义锁\",{\"1\":{\"191\":1}}],[\"unreal将会自动填写所需的android调试变量\",{\"1\":{\"232\":1}}],[\"unreal会在这一步主要工作\",{\"1\":{\"229\":1}}],[\"unreal配置android环境\",{\"0\":{\"228\":1}}],[\"unreal\",{\"0\":{\"184\":1}}],[\"unauthorized=0\",{\"1\":{\"180\":1}}],[\"unable\",{\"1\":{\"65\":1}}],[\"uniform\",{\"1\":{\"149\":24}}],[\"unity导入renderdoc\",{\"0\":{\"205\":1}}],[\"unity插件\",{\"0\":{\"203\":1}}],[\"unity\",{\"0\":{\"177\":1,\"179\":1,\"180\":1},\"1\":{\"180\":3},\"2\":{\"178\":1,\"182\":1,\"185\":1,\"204\":1,\"206\":1,\"207\":1,\"209\":1,\"213\":1,\"214\":1,\"216\":1,\"219\":1,\"221\":1}}],[\"unityengine\",{\"1\":{\"60\":1}}],[\"unityeditor\",{\"1\":{\"60\":1}}],[\"unity生成线性空间和gamma空间图片的自定义窗口\",{\"0\":{\"60\":1}}],[\"unitypackage文件\",{\"1\":{\"50\":1}}],[\"unitypy\",{\"1\":{\"27\":1,\"211\":1}}],[\"unity中实现flowmap\",{\"0\":{\"50\":1}}],[\"unity游戏逆向工具汇总\",{\"0\":{\"210\":1}}],[\"unity游戏逆向\",{\"0\":{\"208\":1}}],[\"unity游戏shader提取\",{\"1\":{\"27\":1}}],[\"unity游戏解包\",{\"0\":{\"27\":1}}],[\"usr\",{\"1\":{\"92\":2,\"95\":2,\"97\":1}}],[\"username\",{\"1\":{\"75\":1}}],[\"user\",{\"1\":{\"65\":1}}],[\"useful\",{\"1\":{\"60\":2}}],[\"using\",{\"1\":{\"60\":3,\"191\":1}}],[\"ut​\",{\"1\":{\"48\":3}}],[\"u\",{\"1\":{\"48\":6,\"49\":1,\"96\":1,\"97\":1}}],[\"不知道是不是因为直接launch有符号没有被加载\",{\"1\":{\"232\":1}}],[\"不然后面unreal的bat脚本无法找到sdk安装目录\",{\"1\":{\"227\":1}}],[\"不影响实际数值\",{\"1\":{\"161\":1}}],[\"不成立则不相交\",{\"1\":{\"144\":1,\"146\":1}}],[\"不妨将basemap的采样抽象为函数c=f\",{\"1\":{\"48\":1}}],[\"不外乎两种情况\",{\"1\":{\"47\":1}}],[\"但版本不同差异较大\",{\"1\":{\"200\":1}}],[\"但在写入时会阻塞所有读者和其他写者\",{\"1\":{\"194\":1}}],[\"但在服务器上部署miniconda是必须的\",{\"1\":{\"173\":1}}],[\"但感觉还是不合适\",{\"1\":{\"188\":1}}],[\"但感觉和类内也差不多\",{\"1\":{\"188\":1}}],[\"但这种方式不能直观地显式创建和销毁单例对象\",{\"1\":{\"187\":1}}],[\"但这通常很难做到\",{\"1\":{\"48\":1}}],[\"但是diy嘛\",{\"1\":{\"124\":1}}],[\"但是https方式拉取仓库报错\",{\"1\":{\"65\":1}}],[\"但是可以通过构造更加巧妙的权重函数来实现一阶连续\",{\"1\":{\"49\":1}}],[\"但是可以通过两者混合加权来实现最终颜色c=f1​w1​+f2​w2​在时间上是连续的\",{\"1\":{\"49\":1}}],[\"但是一般情况下认为顶点是从附近移动过来的而不是无穷远处\",{\"1\":{\"48\":1}}],[\"但是如果只是让贴图某个区域周期性流动呢\",{\"1\":{\"48\":1}}],[\"但截帧拿到模型csv后\",{\"1\":{\"33\":1}}],[\"如下\",{\"1\":{\"188\":1}}],[\"如\",{\"1\":{\"162\":1,\"163\":1,\"164\":1,\"165\":1}}],[\"如需计算交点\",{\"1\":{\"144\":1,\"146\":1,\"147\":1}}],[\"如何快速判断任意线段与任意aabb是否相交\",{\"1\":{\"142\":1}}],[\"如上方gif右侧的球体所示\",{\"1\":{\"48\":1}}],[\"如果想让s\",{\"1\":{\"188\":1}}],[\"如果两个端点的区域编码按位与不为零\",{\"1\":{\"148\":1}}],[\"如果两个端点都在裁剪窗口内\",{\"1\":{\"148\":1}}],[\"如果希望通过ssh访问git仓库\",{\"1\":{\"97\":1}}],[\"如果需要进一步限制\",{\"1\":{\"97\":1}}],[\"如果需要用户认证\",{\"1\":{\"75\":1}}],[\"如果让整个贴图的uv在同一方向上移动\",{\"1\":{\"48\":1}}],[\"如果在一片区域内实现这种效果\",{\"1\":{\"47\":1}}],[\"即为所求\",{\"1\":{\"144\":1,\"146\":1,\"147\":1}}],[\"即\",{\"1\":{\"48\":1,\"147\":1}}],[\"在用户path环境中添加platform\",{\"1\":{\"229\":1}}],[\"在用户环境变量中设置android\",{\"1\":{\"229\":1}}],[\"在用现成工具转fbx这一步总是出现各种问题\",{\"1\":{\"33\":1}}],[\"在theme\",{\"1\":{\"200\":1}}],[\"在tortoisegit的设置中将ssh\",{\"1\":{\"66\":1}}],[\"在unlock函数解锁\",{\"1\":{\"191\":1}}],[\"在unity\",{\"1\":{\"180\":1}}],[\"在ubuntu上创建一个单独的git用户\",{\"1\":{\"94\":1}}],[\"在ubuntu上部署git\",{\"0\":{\"88\":1}}],[\"在ubuntu上使用samba搭建个人nas\",{\"1\":{\"71\":1}}],[\"在下图官方界面选择合适的版本\",{\"1\":{\"174\":1}}],[\"在指定轴上投影\",{\"1\":{\"144\":1}}],[\"在射线与aabb相交的前提下保证进入时机在线段终点之前\",{\"1\":{\"142\":1}}],[\"在solidworks中建模\",{\"1\":{\"124\":1}}],[\"在浏览器中打开以下url来访问gitweb界面\",{\"1\":{\"93\":1}}],[\"在ipad\",{\"1\":{\"82\":1}}],[\"在\",{\"1\":{\"78\":1,\"80\":1}}],[\"在flowmap中就是要防止顶点颜色突然跳变\",{\"1\":{\"48\":1}}],[\"那最应该避免的就是防止顶点瞬移\",{\"1\":{\"48\":1}}],[\"24\",{\"1\":{\"163\":1}}],[\"200\",{\"1\":{\"181\":1}}],[\"20\",{\"1\":{\"149\":1}}],[\"2017进入网页ui\",{\"1\":{\"108\":1}}],[\"2012\",{\"1\":{\"60\":2}}],[\"2=m\",{\"1\":{\"125\":1}}],[\"2=d\",{\"1\":{\"125\":1}}],[\"2c\",{\"1\":{\"125\":1}}],[\"2ha\",{\"1\":{\"125\":1}}],[\"25m\",{\"1\":{\"123\":1}}],[\"25\",{\"1\":{\"123\":1,\"125\":1}}],[\"256\",{\"1\":{\"61\":1}}],[\"212ab2fc321ef91189d7858a8a4bc589af7ea380be6764b1d0078291467ca4f9\",{\"1\":{\"112\":1}}],[\"21282\",{\"1\":{\"65\":1}}],[\"2f\",{\"1\":{\"60\":1,\"164\":2,\"181\":2}}],[\"2\",{\"0\":{\"48\":1,\"61\":1,\"66\":1,\"79\":1,\"91\":1,\"96\":1,\"106\":1,\"108\":1,\"124\":1,\"133\":1,\"137\":1,\"147\":1,\"162\":1,\"193\":1,\"199\":1,\"226\":1,\"230\":1},\"1\":{\"58\":1,\"60\":2,\"61\":4,\"97\":1,\"112\":1,\"125\":7,\"144\":1,\"146\":1,\"148\":7,\"149\":1}}],[\"就可以看到某块区域发生移动的视觉效果\",{\"1\":{\"47\":1}}],[\"就仿佛上一个帧中颜色相同的顶点移动到当前顶点一样\",{\"1\":{\"47\":1}}],[\"让每次采样颜色的权重在接近周期切换时权重渐变到0\",{\"1\":{\"48\":1}}],[\"让顶点上的发生变化\",{\"1\":{\"47\":1}}],[\"让模型\",{\"1\":{\"47\":1}}],[\"改变模型uv实现流动效果\",{\"1\":{\"47\":1}}],[\"改变顶点位置和改变顶点颜色\",{\"1\":{\"47\":1}}],[\"发生运动就属于前者\",{\"1\":{\"47\":1}}],[\"普通mesh或蒙皮mesh\",{\"1\":{\"47\":1}}],[\"原理\",{\"0\":{\"47\":1},\"1\":{\"148\":1}}],[\"15\",{\"1\":{\"165\":1}}],[\"1024\",{\"1\":{\"181\":2}}],[\"10807\",{\"1\":{\"180\":2,\"181\":1}}],[\"10808\",{\"1\":{\"65\":2,\"181\":1}}],[\"1000000000\",{\"1\":{\"161\":1}}],[\"1000000\",{\"1\":{\"149\":1}}],[\"10\",{\"1\":{\"148\":6,\"149\":40,\"165\":1,\"173\":1}}],[\"19de\",{\"1\":{\"112\":1}}],[\"1234\",{\"1\":{\"164\":1}}],[\"127\",{\"1\":{\"65\":2,\"180\":2,\"181\":2}}],[\"12\",{\"1\":{\"60\":2,\"163\":1}}],[\"1−dy1​​\",{\"1\":{\"49\":1}}],[\"1\",{\"0\":{\"47\":1,\"60\":1,\"65\":1,\"78\":1,\"90\":1,\"95\":1,\"104\":1,\"105\":1,\"112\":1,\"123\":1,\"132\":1,\"136\":1,\"146\":1,\"161\":1,\"192\":1,\"198\":1,\"225\":1,\"229\":1},\"1\":{\"49\":2,\"60\":5,\"61\":3,\"65\":2,\"97\":1,\"117\":3,\"143\":6,\"144\":1,\"146\":2,\"147\":7,\"148\":4,\"149\":28,\"180\":2,\"181\":8}}],[\"其余情况需按照左右上下的顺序\",{\"1\":{\"148\":1}}],[\"其实一次采样也行\",{\"1\":{\"46\":1}}],[\"其关键在于如何构造这些采样结果的权重\",{\"1\":{\"46\":1}}],[\"0b00\",{\"1\":{\"148\":1}}],[\"0b01\",{\"1\":{\"148\":2}}],[\"0b10\",{\"1\":{\"148\":2}}],[\"01\",{\"1\":{\"148\":8}}],[\"012522878f\",{\"1\":{\"60\":3}}],[\"00\",{\"1\":{\"148\":8}}],[\"0031308f\",{\"1\":{\"60\":1}}],[\"0≤t≤1\",{\"1\":{\"146\":1,\"147\":1}}],[\"055f\",{\"1\":{\"60\":9}}],[\"0f\",{\"1\":{\"60\":4,\"164\":1}}],[\"04045f\",{\"1\":{\"60\":1}}],[\"08\",{\"1\":{\"60\":2}}],[\"0\",{\"0\":{\"46\":1},\"1\":{\"60\":23,\"61\":2,\"65\":4,\"117\":3,\"125\":1,\"143\":6,\"144\":4,\"146\":4,\"147\":12,\"148\":5,\"149\":25,\"180\":4,\"181\":8}}],[\"feature\",{\"0\":{\"218\":1},\"2\":{\"222\":1}}],[\"f\",{\"1\":{\"143\":2,\"149\":1,\"161\":2,\"162\":3,\"163\":4,\"164\":3,\"165\":2,\"181\":3}}],[\"flag\",{\"1\":{\"192\":5}}],[\"flags\",{\"1\":{\"133\":1}}],[\"float\",{\"1\":{\"60\":7,\"144\":2,\"146\":1,\"164\":1}}],[\"flowmap\",{\"2\":{\"52\":1}}],[\"flowmap在时间尺度上通过更改顶点的uv坐标\",{\"1\":{\"47\":1}}],[\"flowmap可以使用任意多次且不低于一次的采样\",{\"1\":{\"46\":1}}],[\"flowmap的关键并不在于使用两个相隔半个周期的采样\",{\"1\":{\"46\":1}}],[\"flowmap采样原理\",{\"0\":{\"45\":1}}],[\"found\",{\"1\":{\"235\":1}}],[\"following\",{\"1\":{\"112\":1}}],[\"forever\",{\"1\":{\"181\":1}}],[\"for\",{\"0\":{\"112\":2},\"1\":{\"60\":6,\"144\":1,\"146\":1,\"147\":1,\"148\":2,\"149\":3,\"181\":2}}],[\"facecolor=\",{\"1\":{\"149\":1}}],[\"failed\",{\"1\":{\"65\":1,\"180\":2}}],[\"fatal\",{\"1\":{\"65\":1}}],[\"false\",{\"1\":{\"60\":1,\"144\":1,\"146\":1,\"147\":3,\"148\":2}}],[\"first\",{\"1\":{\"181\":2}}],[\"filter\",{\"1\":{\"133\":1}}],[\"file\",{\"1\":{\"60\":1,\"112\":2}}],[\"filepath\",{\"1\":{\"60\":3}}],[\"filename\",{\"1\":{\"60\":9}}],[\"filefolder\",{\"1\":{\"60\":2}}],[\"figure\",{\"1\":{\"61\":1}}],[\"framework\",{\"1\":{\"133\":1}}],[\"fract\",{\"1\":{\"48\":1}}],[\"from\",{\"1\":{\"60\":2,\"112\":1,\"163\":1}}],[\"f1​和f2​关于时间的变化如下图所示\",{\"1\":{\"49\":1}}],[\"f1​=y13​+y12​\",{\"1\":{\"49\":1}}],[\"f2​=y23​+y22​\",{\"1\":{\"49\":1}}],[\"f=y3+y2\",{\"1\":{\"49\":1}}],[\"f指代顶点色c\",{\"1\":{\"49\":1}}],[\"fbx\",{\"0\":{\"238\":1},\"1\":{\"34\":1},\"2\":{\"37\":1}}],[\"图像压缩算法\",{\"0\":{\"42\":1}}],[\"图像压缩\",{\"0\":{\"40\":1}}],[\"root的值\",{\"1\":{\"229\":1}}],[\"ros2\",{\"1\":{\"117\":2},\"2\":{\"119\":1}}],[\"ros\",{\"1\":{\"117\":3}}],[\"rdc\",{\"1\":{\"205\":1}}],[\"rb=db\",{\"1\":{\"125\":1}}],[\"rb\",{\"1\":{\"125\":2}}],[\"runtime\",{\"1\":{\"149\":4}}],[\"run\",{\"1\":{\"117\":1}}],[\"running\",{\"0\":{\"112\":1},\"1\":{\"181\":1}}],[\"range\",{\"1\":{\"144\":1,\"146\":1,\"147\":1,\"148\":2,\"149\":3}}],[\"random\",{\"1\":{\"143\":1,\"149\":24}}],[\"ray\",{\"1\":{\"144\":1}}],[\"raspberrypi\",{\"2\":{\"84\":1,\"100\":1,\"110\":1,\"114\":1}}],[\"rapidcsv\",{\"1\":{\"34\":1}}],[\"r\",{\"1\":{\"60\":2,\"61\":1,\"149\":2,\"181\":6}}],[\"release\",{\"1\":{\"192\":1}}],[\"reuse\",{\"1\":{\"181\":1}}],[\"recv\",{\"1\":{\"181\":5}}],[\"rectangle\",{\"1\":{\"149\":3}}],[\"rect\",{\"1\":{\"143\":1,\"149\":4}}],[\"request\",{\"1\":{\"181\":8}}],[\"reject\",{\"1\":{\"180\":1}}],[\"rem\",{\"1\":{\"180\":1}}],[\"remove\",{\"1\":{\"173\":1}}],[\"report\",{\"1\":{\"181\":3}}],[\"repo\",{\"1\":{\"173\":1}}],[\"repository\",{\"1\":{\"65\":1}}],[\"result\",{\"1\":{\"164\":3}}],[\"restart\",{\"1\":{\"76\":2,\"92\":1}}],[\"reboot\",{\"1\":{\"112\":1}}],[\"read\",{\"1\":{\"74\":1}}],[\"return\",{\"1\":{\"60\":12,\"143\":6,\"144\":2,\"146\":2,\"147\":4,\"148\":3,\"181\":3,\"187\":2,\"188\":2}}],[\"refresh\",{\"1\":{\"60\":1}}],[\"renderer\",{\"1\":{\"112\":2},\"2\":{\"222\":1}}],[\"renderdoc\",{\"0\":{\"38\":1},\"2\":{\"37\":1,\"39\":1,\"207\":1}}],[\"render\",{\"2\":{\"36\":1,\"37\":1,\"43\":1,\"44\":1,\"51\":1,\"52\":1,\"62\":1}}],[\"rgbafloat\",{\"1\":{\"60\":1}}],[\"添加此行即可\",{\"1\":{\"200\":1}}],[\"添加千位逗号\",{\"1\":{\"164\":1}}],[\"添加\",{\"0\":{\"106\":1}}],[\"添加公钥\",{\"0\":{\"105\":1}}],[\"添加ssh公钥到authorized\",{\"1\":{\"97\":1}}],[\"添加imgui面板\",{\"1\":{\"35\":1}}],[\"添加渲染窗口\",{\"1\":{\"35\":1}}],[\"比较好用的一个转换工具是csvconverter\",{\"1\":{\"33\":1}}],[\"比如某个通道的数据读不出来balabala\",{\"1\":{\"33\":1}}],[\"遂决定自己写一个csv转fbx的工具\",{\"1\":{\"33\":1}}],[\"前言\",{\"0\":{\"33\":1,\"46\":1}}],[\"csv2\",{\"0\":{\"238\":1}}],[\"csv数据转fbx模型\",{\"0\":{\"32\":1}}],[\"cpp练级\",{\"0\":{\"236\":1}}],[\"cpp\",{\"1\":{\"188\":3}}],[\"custom\",{\"1\":{\"225\":1}}],[\"current\",{\"1\":{\"181\":1}}],[\"cu124\",{\"1\":{\"174\":1}}],[\"cuda的过程\",{\"1\":{\"172\":1}}],[\"center\",{\"1\":{\"149\":15}}],[\"c1​\",{\"1\":{\"148\":1}}],[\"c0​\",{\"1\":{\"148\":1}}],[\"cfg\",{\"1\":{\"112\":2}}],[\"capabilities\",{\"1\":{\"112\":1}}],[\"cherno建议将instance指针放在类外\",{\"1\":{\"188\":1}}],[\"cherno认为\",{\"1\":{\"186\":1}}],[\"changes\",{\"1\":{\"112\":1}}],[\"chmod\",{\"1\":{\"97\":1}}],[\"chilliant\",{\"1\":{\"60\":2}}],[\"cd\",{\"1\":{\"96\":1,\"97\":1}}],[\"c\",{\"1\":{\"96\":1,\"97\":1,\"125\":2,\"148\":4,\"163\":1}}],[\"cgid\",{\"1\":{\"92\":1}}],[\"cgi\",{\"1\":{\"92\":4}}],[\"c>\",{\"1\":{\"92\":4}}],[\"clear\",{\"1\":{\"192\":1}}],[\"client\",{\"1\":{\"181\":10}}],[\"client改为已安装git所使用的ssh\",{\"1\":{\"66\":1}}],[\"clip\",{\"1\":{\"148\":1,\"149\":1}}],[\"close\",{\"1\":{\"181\":4}}],[\"cloud\",{\"1\":{\"112\":4}}],[\"clone\",{\"1\":{\"98\":1}}],[\"class\",{\"1\":{\"60\":1,\"143\":2,\"181\":2,\"187\":1,\"188\":2,\"191\":2,\"192\":1}}],[\"create\",{\"1\":{\"60\":2,\"173\":1}}],[\"counter\",{\"1\":{\"149\":4}}],[\"couldn\",{\"1\":{\"65\":1}}],[\"collision\",{\"1\":{\"149\":7}}],[\"color=\",{\"1\":{\"149\":3}}],[\"color=line\",{\"1\":{\"149\":1}}],[\"colorvector4\",{\"1\":{\"60\":3}}],[\"color\",{\"1\":{\"60\":8,\"149\":3},\"2\":{\"56\":1,\"63\":1}}],[\"cohen\",{\"0\":{\"148\":1},\"1\":{\"148\":1,\"149\":1}}],[\"core\",{\"1\":{\"133\":1}}],[\"correction\",{\"1\":{\"61\":1}}],[\"code\",{\"0\":{\"135\":1,\"137\":1},\"1\":{\"132\":1,\"137\":1,\"148\":7}}],[\"cos\",{\"1\":{\"125\":11}}],[\"continue\",{\"1\":{\"181\":1}}],[\"conda\",{\"1\":{\"173\":5},\"2\":{\"176\":1,\"234\":1}}],[\"conf的\",{\"1\":{\"82\":1}}],[\"conf文件中配置的名称\",{\"1\":{\"79\":1}}],[\"conf\",{\"1\":{\"74\":2,\"91\":1,\"92\":2}}],[\"configuration\",{\"1\":{\"112\":1,\"232\":1}}],[\"configured\",{\"0\":{\"112\":1}}],[\"config\",{\"1\":{\"65\":3,\"112\":2}}],[\"connection\",{\"1\":{\"181\":1}}],[\"connect\",{\"1\":{\"65\":2,\"181\":4}}],[\"construct\",{\"1\":{\"191\":2}}],[\"const\",{\"1\":{\"60\":1,\"191\":2}}],[\"command\",{\"0\":{\"226\":1},\"1\":{\"226\":1}}],[\"compute\",{\"1\":{\"148\":5},\"2\":{\"222\":1}}],[\"compression\",{\"1\":{\"42\":1},\"2\":{\"41\":1,\"44\":1}}],[\"com\",{\"1\":{\"60\":2,\"173\":1,\"205\":1}}],[\"combine\",{\"1\":{\"60\":2}}],[\"ct​\",{\"1\":{\"48\":1}}],[\"ct​=f\",{\"1\":{\"48\":1}}],[\"c++锁的实现\",{\"0\":{\"191\":1}}],[\"c++单例模式\",{\"0\":{\"186\":1}}],[\"c++\",{\"2\":{\"16\":1,\"19\":1,\"190\":1,\"196\":1}}],[\"c++自定义内存分配和统计\",{\"0\":{\"14\":1}}],[\"type\",{\"1\":{\"191\":1}}],[\"tcpserver\",{\"1\":{\"181\":1}}],[\"tls\",{\"1\":{\"180\":1}}],[\"tx​≤pi​qi​​\",{\"1\":{\"147\":1}}],[\"tx​≤p1​q1​​\",{\"1\":{\"147\":1}}],[\"tx​≤p0​q0​​\",{\"1\":{\"147\":1}}],[\"tx​≥pi​qi​​\",{\"1\":{\"147\":1}}],[\"tx​≥p1​q1​​\",{\"1\":{\"147\":1}}],[\"tx​≥p0​q0​​\",{\"1\":{\"147\":1}}],[\"tx​∗dx​≥x0x​−xminx​\",{\"1\":{\"147\":1}}],[\"td≥x0​−xmin​\",{\"1\":{\"147\":1}}],[\"tmin​>tmax​\",{\"1\":{\"144\":1}}],[\"tmp\",{\"1\":{\"91\":1}}],[\"t1\",{\"1\":{\"144\":4,\"146\":4,\"147\":4}}],[\"t0\",{\"1\":{\"144\":4,\"146\":4,\"147\":4}}],[\"t≥0\",{\"1\":{\"144\":1}}],[\"time\",{\"1\":{\"143\":1,\"149\":4,\"181\":9}}],[\"title\",{\"1\":{\"61\":1,\"149\":1}}],[\"t取0到pi\",{\"1\":{\"125\":1}}],[\"ttyusb0\",{\"1\":{\"117\":1}}],[\"that\",{\"1\":{\"191\":1}}],[\"threadedtcpserver\",{\"1\":{\"181\":2}}],[\"thread\",{\"1\":{\"181\":1}}],[\"threadingmixin\",{\"1\":{\"181\":1}}],[\"threading\",{\"1\":{\"181\":3}}],[\"the\",{\"1\":{\"112\":2}}],[\"this\",{\"1\":{\"112\":1}}],[\"try\",{\"1\":{\"181\":2}}],[\"traceback\",{\"1\":{\"181\":2}}],[\"trace\",{\"1\":{\"180\":1}}],[\"tricks\",{\"1\":{\"144\":1,\"146\":1,\"147\":1}}],[\"true\",{\"1\":{\"112\":5,\"144\":1,\"146\":1,\"147\":1,\"148\":3,\"181\":2,\"200\":1}}],[\"troubleshoot\",{\"0\":{\"82\":1}}],[\"test\",{\"1\":{\"149\":2,\"192\":1}}],[\"texit​\",{\"1\":{\"144\":1,\"146\":1}}],[\"text\",{\"1\":{\"148\":1}}],[\"textureformat\",{\"1\":{\"60\":1}}],[\"texture\",{\"1\":{\"60\":7}}],[\"texture2d\",{\"1\":{\"60\":3}}],[\"texturecreator\",{\"1\":{\"60\":2}}],[\"textfield\",{\"1\":{\"60\":1}}],[\"tenter​≤texit​\",{\"1\":{\"144\":1,\"146\":1}}],[\"tenter​\",{\"1\":{\"144\":1,\"146\":1}}],[\"tee\",{\"1\":{\"105\":1,\"106\":1}}],[\"template\",{\"1\":{\"191\":1}}],[\"temp\",{\"1\":{\"91\":1}}],[\"technical\",{\"2\":{\"54\":1}}],[\"termux\",{\"1\":{\"29\":1}}],[\"t\",{\"1\":{\"48\":5,\"65\":1,\"125\":12,\"144\":8,\"146\":8,\"147\":9,\"148\":4,\"149\":4,\"191\":2}}],[\"torchaudio\",{\"1\":{\"174\":1}}],[\"torchvision\",{\"1\":{\"174\":1}}],[\"torch\",{\"1\":{\"174\":1}}],[\"tortoisegit\",{\"0\":{\"66\":1}}],[\"tostring\",{\"1\":{\"143\":4,\"149\":3}}],[\"topic\",{\"1\":{\"117\":1}}],[\"to\",{\"0\":{\"112\":1},\"1\":{\"60\":1,\"61\":6,\"65\":4,\"112\":2}}],[\"toggle\",{\"1\":{\"60\":1}}],[\"todos\",{\"0\":{\"35\":1}}],[\"tools等环境变量\",{\"1\":{\"229\":1}}],[\"tools\",{\"0\":{\"226\":1},\"1\":{\"60\":1,\"226\":1},\"2\":{\"31\":1,\"214\":1}}],[\"order\",{\"1\":{\"192\":2}}],[\"org\",{\"1\":{\"105\":1,\"106\":1,\"174\":1}}],[\"out\",{\"1\":{\"148\":4}}],[\"outcode1\",{\"1\":{\"148\":5}}],[\"outcode0\",{\"1\":{\"148\":7}}],[\"outcode\",{\"1\":{\"148\":9}}],[\"output\",{\"1\":{\"61\":1}}],[\"other\",{\"1\":{\"143\":6}}],[\"others\",{\"2\":{\"30\":1}}],[\"operator=\",{\"1\":{\"191\":1}}],[\"openwindow\",{\"1\":{\"60\":1}}],[\"optional\",{\"1\":{\"112\":3}}],[\"options\",{\"1\":{\"92\":1}}],[\"objects\",{\"1\":{\"82\":1}}],[\"obs\",{\"1\":{\"22\":1}}],[\"os上文件app访问samba文件全都是只读的情况\",{\"1\":{\"82\":1}}],[\"ok\",{\"1\":{\"74\":1}}],[\"offset\",{\"1\":{\"117\":1}}],[\"off\",{\"1\":{\"61\":1,\"180\":1}}],[\"only\",{\"1\":{\"74\":1}}],[\"on\",{\"1\":{\"61\":2}}],[\"ongui\",{\"1\":{\"60\":1}}],[\"adopt\",{\"1\":{\"191\":1}}],[\"address\",{\"1\":{\"181\":1}}],[\"add\",{\"1\":{\"143\":1,\"149\":1}}],[\"adduser\",{\"1\":{\"95\":1}}],[\"addhandler\",{\"1\":{\"92\":1}}],[\"atomic\",{\"1\":{\"192\":1}}],[\"at\",{\"1\":{\"181\":1}}],[\"ai\",{\"2\":{\"171\":1}}],[\"axvline\",{\"1\":{\"149\":1}}],[\"axhline\",{\"1\":{\"149\":1}}],[\"axis\",{\"1\":{\"61\":1,\"144\":7,\"146\":7,\"148\":16,\"149\":2}}],[\"aabb\",{\"1\":{\"144\":4,\"146\":4,\"147\":5,\"148\":10,\"149\":20}}],[\"aabb包围盒表示为\",{\"1\":{\"144\":1,\"146\":1,\"147\":1}}],[\"aabb求交算法\",{\"0\":{\"140\":1},\"2\":{\"141\":1}}],[\"array\",{\"1\":{\"143\":1,\"149\":6}}],[\"art\",{\"2\":{\"54\":1}}],[\"a=m\",{\"1\":{\"125\":1}}],[\"a=2m\",{\"1\":{\"123\":1}}],[\"agent\",{\"1\":{\"117\":2}}],[\"agent启动\",{\"1\":{\"117\":1}}],[\"acquire\",{\"1\":{\"192\":1}}],[\"activate\",{\"1\":{\"173\":1}}],[\"accept\",{\"1\":{\"148\":3}}],[\"access\",{\"1\":{\"65\":1,\"112\":1}}],[\"across\",{\"1\":{\"112\":1}}],[\"as\",{\"1\":{\"143\":2,\"181\":1}}],[\"asc\",{\"1\":{\"105\":2,\"106\":1}}],[\"assetdatabase\",{\"1\":{\"60\":1}}],[\"assetview\",{\"1\":{\"27\":1,\"211\":1}}],[\"assetripper\",{\"1\":{\"27\":1,\"211\":1}}],[\"assetstudio\",{\"1\":{\"27\":1,\"211\":1}}],[\"a2enmod\",{\"1\":{\"92\":1}}],[\"a2enconf\",{\"1\":{\"92\":1}}],[\"allow\",{\"1\":{\"181\":1}}],[\"alt\",{\"1\":{\"148\":1}}],[\"alias\",{\"1\":{\"92\":2}}],[\"almost\",{\"1\":{\"60\":1}}],[\"available\",{\"1\":{\"92\":1}}],[\"a\",{\"0\":{\"112\":1,\"152\":1},\"1\":{\"75\":1,\"112\":1,\"123\":1,\"165\":3,\"191\":1}}],[\"apache2\",{\"1\":{\"90\":1,\"92\":2}}],[\"apache和gitweb\",{\"1\":{\"90\":1}}],[\"apt\",{\"1\":{\"72\":1,\"90\":1,\"105\":2,\"106\":4,\"107\":1}}],[\"approximation\",{\"1\":{\"60\":1}}],[\"approximations\",{\"1\":{\"60\":2}}],[\"approximate\",{\"1\":{\"60\":1}}],[\"apply\",{\"1\":{\"60\":1}}],[\"application\",{\"1\":{\"60\":1}}],[\"app\",{\"1\":{\"29\":1}}],[\"after\",{\"1\":{\"65\":1}}],[\"anaconda\",{\"1\":{\"173\":1}}],[\"anaconda是带有gui的miniconda\",{\"1\":{\"173\":1}}],[\"android调试变量\",{\"1\":{\"232\":1}}],[\"android\",{\"0\":{\"229\":1},\"1\":{\"227\":1,\"232\":1}}],[\"and\",{\"1\":{\"61\":1,\"181\":2,\"191\":1,\"192\":1,\"199\":1}}],[\"an\",{\"1\":{\"60\":1,\"112\":1}}],[\"authorized\",{\"1\":{\"97\":1}}],[\"au\",{\"1\":{\"60\":2}}],[\"三\",{\"0\":{\"28\":1,\"74\":1,\"149\":1}}],[\"三五法则\",{\"0\":{\"17\":1}}],[\"贴图处理\",{\"0\":{\"26\":1}}],[\"79\",{\"1\":{\"149\":1}}],[\"700\",{\"1\":{\"97\":1}}],[\"7\",{\"1\":{\"25\":1}}],[\"pytorch官方页面\",{\"1\":{\"174\":1}}],[\"pytorch\",{\"1\":{\"172\":1,\"174\":1}}],[\"python=3\",{\"1\":{\"173\":1}}],[\"python\",{\"0\":{\"168\":1},\"2\":{\"166\":1,\"167\":1,\"169\":1,\"175\":1,\"176\":1,\"233\":1,\"234\":1}}],[\"python中五个必须会用的f\",{\"0\":{\"160\":1}}],[\"pyplot\",{\"1\":{\"143\":1}}],[\"p0\",{\"1\":{\"148\":13}}],[\"p0​<0\",{\"1\":{\"147\":1}}],[\"p0​>0\",{\"1\":{\"147\":1}}],[\"p0​=dx​\",{\"1\":{\"147\":1}}],[\"p2决定线段终点\",{\"1\":{\"146\":1}}],[\"p2\",{\"1\":{\"144\":2,\"146\":2,\"147\":3,\"149\":12}}],[\"p2共同决定射线方向\",{\"1\":{\"144\":1}}],[\"p1​<0\",{\"1\":{\"147\":1}}],[\"p1​>0\",{\"1\":{\"147\":1}}],[\"p1​=−dx​\",{\"1\":{\"147\":1}}],[\"p1决定线段起点\",{\"1\":{\"146\":1}}],[\"p1决定射线起点\",{\"1\":{\"144\":1}}],[\"p1\",{\"1\":{\"144\":5,\"146\":4,\"147\":7,\"148\":9,\"149\":12}}],[\"plugins\",{\"1\":{\"200\":1},\"2\":{\"207\":1}}],[\"plugin\",{\"1\":{\"200\":2}}],[\"plt\",{\"1\":{\"143\":1,\"149\":13}}],[\"platform\",{\"1\":{\"133\":1,\"232\":1}}],[\"platformio中创建工程\",{\"1\":{\"133\":1}}],[\"plot\",{\"1\":{\"61\":2,\"149\":1}}],[\"pip3\",{\"1\":{\"174\":1}}],[\"pi​<0\",{\"1\":{\"147\":1}}],[\"pi​>0\",{\"1\":{\"147\":1}}],[\"pi\",{\"1\":{\"125\":6}}],[\"pixpin\",{\"1\":{\"24\":1}}],[\"pub\",{\"1\":{\"117\":1}}],[\"public\",{\"1\":{\"60\":2,\"66\":1,\"105\":1,\"187\":1,\"188\":2,\"191\":1,\"192\":1}}],[\"perf\",{\"1\":{\"149\":4}}],[\"perfect\",{\"1\":{\"60\":1}}],[\"persist\",{\"1\":{\"112\":1}}],[\"pages分支上\",{\"1\":{\"199\":1}}],[\"page\",{\"0\":{\"199\":1}}],[\"pass\",{\"1\":{\"181\":1}}],[\"password\",{\"1\":{\"95\":1,\"112\":1}}],[\"parsed\",{\"1\":{\"181\":3}}],[\"parse\",{\"1\":{\"181\":2}}],[\"patch\",{\"1\":{\"149\":1}}],[\"path值\",{\"1\":{\"227\":1}}],[\"path为环境变量\",{\"1\":{\"227\":1}}],[\"path这个变量在注册表里面为空\",{\"1\":{\"227\":1}}],[\"path\",{\"1\":{\"60\":2,\"74\":1,\"225\":1,\"227\":1}}],[\"packages\",{\"1\":{\"132\":1}}],[\"point\",{\"1\":{\"148\":3}}],[\"points\",{\"1\":{\"112\":1}}],[\"port\",{\"1\":{\"65\":1,\"181\":19}}],[\"pow\",{\"1\":{\"60\":10}}],[\"p\",{\"1\":{\"60\":5,\"73\":1,\"97\":1,\"147\":4,\"148\":4,\"163\":1}}],[\"png\",{\"1\":{\"60\":1}}],[\"print\",{\"1\":{\"149\":3,\"161\":2,\"162\":3,\"163\":3,\"164\":3,\"165\":2,\"181\":7}}],[\"private\",{\"1\":{\"60\":4,\"188\":1,\"191\":1,\"192\":1}}],[\"pro\",{\"1\":{\"200\":1}}],[\"pro为例\",{\"1\":{\"200\":1}}],[\"protocol\",{\"1\":{\"133\":1}}],[\"provided\",{\"1\":{\"112\":1}}],[\"proxyhandler\",{\"1\":{\"181\":2}}],[\"proxy=http\",{\"1\":{\"180\":2}}],[\"proxy\",{\"1\":{\"65\":2,\"181\":2},\"2\":{\"183\":1}}],[\"program\",{\"2\":{\"15\":1,\"18\":1,\"189\":1,\"195\":1}}],[\"precise\",{\"1\":{\"60\":1}}],[\"pvrtextool\",{\"1\":{\"26\":1}}],[\"截图工具\",{\"0\":{\"24\":1}}],[\"scalar\",{\"1\":{\"143\":3}}],[\"script\",{\"1\":{\"92\":1}}],[\"screentogif\",{\"1\":{\"23\":1}}],[\"singleton\",{\"1\":{\"187\":6,\"188\":18}}],[\"sin\",{\"1\":{\"125\":4}}],[\"signed\",{\"1\":{\"106\":1}}],[\"support\",{\"1\":{\"180\":1}}],[\"sutherland\",{\"1\":{\"148\":1,\"149\":1}}],[\"sutherland算法\",{\"0\":{\"148\":1}}],[\"sub\",{\"1\":{\"143\":1}}],[\"subscriber\",{\"1\":{\"117\":1}}],[\"sudo\",{\"1\":{\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":2,\"90\":1,\"91\":1,\"92\":4,\"95\":1,\"96\":1,\"97\":2,\"105\":1,\"106\":2,\"107\":1,\"108\":2}}],[\"spinlock\",{\"1\":{\"192\":2}}],[\"split\",{\"1\":{\"181\":5}}],[\"speed\",{\"1\":{\"117\":1,\"181\":4}}],[\"space\",{\"2\":{\"56\":1,\"63\":1}}],[\"s\",{\"1\":{\"112\":1,\"163\":2,\"181\":10,\"188\":9}}],[\"solution\",{\"1\":{\"232\":2}}],[\"solidworks\",{\"2\":{\"127\":1}}],[\"solidworks建模\",{\"0\":{\"124\":1}}],[\"sock\",{\"1\":{\"181\":3}}],[\"socksocket\",{\"1\":{\"181\":1}}],[\"socks\",{\"1\":{\"181\":9}}],[\"socks5\",{\"1\":{\"65\":2,\"181\":2}}],[\"sockets\",{\"1\":{\"181\":2}}],[\"socketserver\",{\"1\":{\"181\":4}}],[\"socket\",{\"1\":{\"181\":9}}],[\"software\",{\"1\":{\"132\":1}}],[\"sources\",{\"1\":{\"106\":1}}],[\"ssh\",{\"1\":{\"97\":3}}],[\"ssh客户端配置\",{\"0\":{\"66\":1}}],[\"shutdown\",{\"1\":{\"188\":3}}],[\"show\",{\"1\":{\"149\":1}}],[\"sh\",{\"1\":{\"96\":1,\"97\":1,\"173\":2}}],[\"shell作为git用户的shell将限制该用户只能执行git操作\",{\"1\":{\"97\":1}}],[\"shell\",{\"1\":{\"95\":3}}],[\"share是smb\",{\"1\":{\"79\":1}}],[\"share\",{\"1\":{\"73\":1,\"74\":2,\"79\":1,\"81\":1,\"92\":2}}],[\"shader的高斯模糊\",{\"0\":{\"220\":1}}],[\"shader\",{\"1\":{\"50\":1},\"2\":{\"222\":1}}],[\"shader中做简单实现\",{\"1\":{\"45\":1}}],[\"smbd\",{\"1\":{\"76\":1}}],[\"smbpasswd\",{\"1\":{\"75\":1}}],[\"smb\",{\"1\":{\"74\":2}}],[\"src>\",{\"1\":{\"133\":1}}],[\"src\",{\"1\":{\"133\":1}}],[\"srv\",{\"1\":{\"73\":1,\"74\":1,\"91\":1,\"96\":1,\"98\":1}}],[\"srgb\",{\"1\":{\"60\":9}}],[\"says\",{\"1\":{\"165\":1}}],[\"samba\",{\"1\":{\"72\":1,\"73\":1,\"74\":3,\"79\":1,\"81\":1}}],[\"saved\",{\"1\":{\"60\":1}}],[\"savetextureaspng\",{\"1\":{\"60\":2}}],[\"searchpro\",{\"1\":{\"200\":1}}],[\"search\",{\"1\":{\"200\":2}}],[\"sent\",{\"1\":{\"181\":3}}],[\"sendall\",{\"1\":{\"181\":4}}],[\"select\",{\"1\":{\"181\":3}}],[\"self\",{\"1\":{\"143\":22,\"181\":2}}],[\"setupandroid\",{\"0\":{\"229\":1}}],[\"settings>pages>build\",{\"1\":{\"199\":1}}],[\"set\",{\"1\":{\"180\":3,\"181\":1,\"192\":1}}],[\"setpixel\",{\"1\":{\"60\":1}}],[\"segment\",{\"1\":{\"149\":1}}],[\"seg\",{\"1\":{\"146\":1,\"149\":1}}],[\"serial\",{\"1\":{\"117\":1,\"133\":1}}],[\"serve\",{\"1\":{\"181\":1}}],[\"server后\",{\"0\":{\"112\":1}}],[\"server安装vpn代理来解决仓库拉取失败的问题\",{\"1\":{\"103\":1}}],[\"server安装vpn\",{\"0\":{\"103\":1}}],[\"server\",{\"0\":{\"88\":1},\"1\":{\"65\":3,\"91\":1,\"93\":1,\"98\":1,\"181\":2}}],[\"service\",{\"1\":{\"108\":2}}],[\"ststm32\",{\"1\":{\"133\":1}}],[\"stm32cube\",{\"1\":{\"133\":1}}],[\"stm32cubemx生成工程代码\",{\"0\":{\"132\":1}}],[\"stm32开发环境搭建\",{\"0\":{\"130\":1}}],[\"stm32\",{\"0\":{\"137\":1},\"1\":{\"137\":1},\"2\":{\"119\":1,\"139\":1}}],[\"std\",{\"1\":{\"117\":1,\"191\":1,\"192\":3}}],[\"startswith\",{\"1\":{\"181\":1}}],[\"start\",{\"0\":{\"112\":1},\"1\":{\"108\":1,\"149\":4,\"180\":1,\"181\":4}}],[\"static\",{\"1\":{\"60\":1,\"187\":4,\"188\":9}}],[\"strip\",{\"1\":{\"181\":1}}],[\"string技巧\",{\"0\":{\"160\":1}}],[\"string\",{\"1\":{\"60\":5}}],[\"str\",{\"1\":{\"162\":1,\"165\":1}}],[\"streams\",{\"1\":{\"82\":1}}],[\"strengthened\",{\"1\":{\"191\":1}}],[\"strencolor\",{\"1\":{\"60\":2}}],[\"stren\",{\"1\":{\"60\":4}}],[\"studio重新生成解决方案\",{\"1\":{\"232\":1}}],[\"studio\",{\"1\":{\"22\":1,\"227\":1}}],[\"systemctl\",{\"1\":{\"76\":2,\"92\":1,\"108\":2}}],[\"system\",{\"1\":{\"60\":1,\"95\":1}}],[\"sdk路径即可\",{\"1\":{\"230\":1}}],[\"sdk\",{\"0\":{\"226\":1},\"1\":{\"34\":1,\"225\":1,\"226\":1,\"227\":4,\"229\":1,\"230\":1}}],[\"gca\",{\"1\":{\"149\":1}}],[\"getinstance\",{\"1\":{\"187\":2,\"188\":3}}],[\"getitem\",{\"1\":{\"143\":1}}],[\"getwindow<texturecreator>\",{\"1\":{\"60\":1}}],[\"genericstm32f103c8\",{\"1\":{\"133\":2}}],[\"generate\",{\"1\":{\"132\":1}}],[\"generated\",{\"1\":{\"112\":1}}],[\"graphics\",{\"2\":{\"151\":1}}],[\"gray\",{\"1\":{\"149\":1}}],[\"group\",{\"1\":{\"95\":1}}],[\"grid\",{\"1\":{\"61\":1,\"149\":1}}],[\"guard\",{\"1\":{\"191\":8}}],[\"guard通过在构造函数中调用lock函数上锁\",{\"1\":{\"191\":1}}],[\"guard的c++11实现\",{\"1\":{\"191\":1}}],[\"guest\",{\"1\":{\"74\":1}}],[\"guilayout\",{\"1\":{\"60\":3}}],[\"global\",{\"1\":{\"65\":3,\"82\":2}}],[\"gittest\",{\"1\":{\"96\":1,\"98\":1}}],[\"gitserver管理\",{\"0\":{\"94\":1}}],[\"gitweb>\",{\"1\":{\"92\":2}}],[\"gitweb通常在apache的配置文件中定义\",{\"1\":{\"91\":1}}],[\"gitweb\",{\"1\":{\"90\":1,\"91\":1,\"92\":6,\"93\":2}}],[\"git\",{\"0\":{\"69\":1},\"1\":{\"65\":2,\"90\":1,\"91\":2,\"95\":4,\"96\":4,\"97\":3,\"98\":4},\"2\":{\"67\":1,\"68\":1,\"70\":1,\"86\":1}}],[\"git代理设置\",{\"0\":{\"65\":1}}],[\"git使用过程一些细碎问题的解决方案\",{\"1\":{\"64\":1}}],[\"git使用技巧\",{\"0\":{\"64\":1}}],[\"gif工具\",{\"0\":{\"23\":1}}],[\"g\",{\"1\":{\"60\":2,\"149\":1}}],[\"gammatolinearspaceexact\",{\"1\":{\"60\":4}}],[\"gammatolinearspace\",{\"1\":{\"60\":1}}],[\"gamma\",{\"1\":{\"60\":9,\"61\":19}}],[\"gamma空间是色彩在人眼感知强度上的线性表达\",{\"1\":{\"58\":1}}],[\"gamma空间\",{\"1\":{\"58\":1}}],[\"gamedev\",{\"2\":{\"150\":1,\"151\":1,\"153\":1,\"154\":1,\"158\":1,\"159\":1}}],[\"game\",{\"2\":{\"9\":1,\"13\":1}}],[\"录屏工具\",{\"0\":{\"22\":1}}],[\"多媒体工具\",{\"0\":{\"21\":1}}],[\"构造与析构\",{\"2\":{\"19\":1}}],[\"类的构造与析构准则\",{\"0\":{\"17\":1}}],[\"二\",{\"0\":{\"17\":1,\"27\":1,\"73\":1,\"94\":1,\"135\":1,\"145\":1,\"181\":1,\"212\":1,\"228\":1}}],[\"内存\",{\"2\":{\"16\":1}}],[\"一般不需要修改\",{\"1\":{\"92\":1}}],[\"一\",{\"0\":{\"14\":1,\"21\":1,\"72\":1,\"89\":1,\"131\":1,\"144\":1,\"180\":1,\"211\":1}}],[\"游戏引擎\",{\"0\":{\"12\":1}}],[\"游戏开发\",{\"0\":{\"8\":1}}],[\"人工智能\",{\"0\":{\"10\":1},\"2\":{\"11\":1}}],[\"docs\",{\"1\":{\"199\":1}}],[\"don\",{\"1\":{\"191\":1}}],[\"down\",{\"1\":{\"181\":2}}],[\"download\",{\"1\":{\"174\":1,\"180\":1}}],[\"dy\",{\"1\":{\"147\":3}}],[\"dx\",{\"1\":{\"147\":3}}],[\"d=x1​−x0​\",{\"1\":{\"146\":1,\"147\":1}}],[\"d=m\",{\"1\":{\"125\":1}}],[\"d=mz\",{\"1\":{\"123\":1}}],[\"db=d\",{\"1\":{\"125\":1}}],[\"db\",{\"1\":{\"125\":1}}],[\"df​=d−2hf​\",{\"1\":{\"123\":1}}],[\"df​\",{\"1\":{\"123\":1}}],[\"datetime\",{\"1\":{\"163\":4}}],[\"data\",{\"1\":{\"117\":2,\"181\":6}}],[\"datasource\",{\"1\":{\"112\":1}}],[\"datapath\",{\"1\":{\"60\":1}}],[\"daxis​\",{\"1\":{\"144\":1}}],[\"da​=d+2ha​\",{\"1\":{\"123\":1}}],[\"da​\",{\"1\":{\"123\":1}}],[\"dhcp4\",{\"1\":{\"112\":2}}],[\"d\",{\"1\":{\"106\":1,\"112\":1,\"123\":1,\"125\":1,\"144\":8,\"146\":7,\"163\":2,\"200\":1}}],[\"dim\",{\"1\":{\"117\":1}}],[\"disable\",{\"1\":{\"112\":2}}],[\"disabled\",{\"1\":{\"95\":1,\"112\":1}}],[\"displayname\",{\"1\":{\"61\":2}}],[\"directory>\",{\"1\":{\"92\":1}}],[\"diy\",{\"2\":{\"7\":1,\"83\":1,\"99\":1,\"109\":1,\"113\":1,\"116\":1,\"118\":1,\"121\":1,\"126\":1,\"129\":1,\"138\":1,\"201\":1}}],[\"d1−y1​​\",{\"1\":{\"49\":1}}],[\"destructor\",{\"1\":{\"191\":1}}],[\"delete\",{\"1\":{\"188\":2,\"191\":2}}],[\"decode\",{\"1\":{\"181\":2}}],[\"deployment\",{\"1\":{\"199\":1}}],[\"deprecation\",{\"1\":{\"180\":1}}],[\"dependencies\",{\"0\":{\"34\":1}}],[\"deactivate\",{\"1\":{\"173\":1}}],[\"default\",{\"1\":{\"200\":1}}],[\"def\",{\"1\":{\"143\":8,\"144\":1,\"146\":1,\"147\":1,\"148\":2,\"149\":2,\"181\":3}}],[\"define\",{\"1\":{\"92\":2}}],[\"dev\",{\"1\":{\"117\":2}}],[\"develop\",{\"2\":{\"9\":1}}],[\"deb\",{\"1\":{\"106\":1}}],[\"debuggame\",{\"1\":{\"232\":1}}],[\"debugging\",{\"1\":{\"60\":2}}],[\"debug\",{\"1\":{\"60\":1}}],[\"极客小屋\",{\"0\":{\"6\":1}}],[\"技术美术\",{\"0\":{\"4\":1},\"2\":{\"5\":1}}],[\"博客主页\",{\"0\":{\"1\":1}}]],\"version\":2}}")).map(([e,t])=>[e,jn(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:n,options:s,id:r}})=>{const o=An[n];e==="suggest"?self.postMessage([e,r,Et(t,o,s)]):e==="search"?self.postMessage([e,r,vt(t,o,s,"max")]):self.postMessage({suggestions:[e,r,Et(t,o,s)],results:[e,r,vt(t,o,s,__SLIMSEARCH_SORT_STRATEGY__)]})};
//# sourceMappingURL=index.js.map
