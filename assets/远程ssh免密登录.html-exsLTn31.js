import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as s,d as n,e as h,r as l,o as r}from"./app-BBh0_QkO.js";const d={};function p(k,i){const e=l("BiliBili");return r(),t("div",null,[i[0]||(i[0]=s("h1",{id:"远程ssh免密登录",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#远程ssh免密登录"},[s("span",null,"远程SSH免密登录")])],-1)),i[1]||(i[1]=s("p",null,"使用SSH远程连接服务器时，经常需要输入密码。密码简单一点就不安全，密码复杂一点就每次登录都很繁琐。于是找了个偷懒的办法，能够保证密码可以维持复杂度，每次登录也不用很繁琐的去输入密码，针对SSH配置了免密登录设置。",-1)),n(e,{bvid:"BV152brzPEtk",time:"6"}),i[2]||(i[2]=h(`<h2 id="一、将本地公钥上传至服务器" tabindex="-1"><a class="header-anchor" href="#一、将本地公钥上传至服务器"><span>一、将本地公钥上传至服务器</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>生成密钥使用<strong>ssh-keygen</strong>命令，如：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-keygen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rsa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4096</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>Windows可以通过<strong>type</strong>命令打印文件内容，获取公钥内容：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;%USERPROFILE%\\.ssh\\id_rsa.pub&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后将公钥内容写入服务器的authorized_keys文件中：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;你的公钥内容&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">~/.ssh/authorized_keys</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 追加到文件末尾</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#cat 本地公钥文件.pub &gt;&gt; ~/.ssh/authorized_keys  # 将公钥追加到 authorized_keys</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、调整ssh认证配置" tabindex="-1"><a class="header-anchor" href="#二、调整ssh认证配置"><span>二、调整SSH认证配置</span></a></h2><p>需要在服务器SSH配置文件中，允许公钥登录、禁用密码登录（可选）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nano</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/ssh/sshd_config</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>保证：</p><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ini"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">PubkeyAuthentication yes</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">PasswordAuthentication no </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 可选</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重启SSH</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sshd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="三、确保权限问题" tabindex="-1"><a class="header-anchor" href="#三、确保权限问题"><span>三、确保权限问题</span></a></h2><div class="hint-container important"><p class="hint-container-title">重要</p><p>权限配置非常重要！！！ SSH 对目录和文件的权限有严格要求，过于宽松的权限（如 777）会导致认证失败。SSH 出于安全考虑，要求用户主目录的权限不能对“其他用户”开放写权限（即不能有 w）。如果其他用户可写你的主目录，攻击者可能篡改 .ssh 或 authorized_keys，导致未授权访问。</p></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 700</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 600</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh/authorized_keys</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如不想修改权限，可以继续调整SSH认证配置。</p><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ini"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">StrictModes no</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h2 id="四、免密登录和调试" tabindex="-1"><a class="header-anchor" href="#四、免密登录和调试"><span>四、免密登录和调试</span></a></h2><p>正常情况下，直接ssh即可免密登录</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 用户名@服务器IP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果还需要输入密码，通过以下命令开启调试，在客户端定位具体原因：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -vvv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 用户名@服务器IP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可能会像我一样，显示SSH 客户端尝试使用 .ssh\\id_rsa 私钥进行认证，但服务器拒绝了它，并最终回退到密码认证。</p><p>服务器端可以使用这个命令查看日志</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tail</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/log/auth.log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如我这里提示&quot;Authentication refused: bad ownership or modes for directory /home/usrname&quot;，明显是权限问题。</p>`,26))])}const g=a(d,[["render",p]]),b=JSON.parse('{"path":"/%E6%9E%81%E5%AE%A2%E5%B0%8F%E5%B1%8B/NAS/%E8%BF%9C%E7%A8%8Bssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95.html","title":"远程SSH免密登录","lang":"zh-CN","frontmatter":{"title":"远程SSH免密登录","icon":"mdi:ssh","date":"2025-08-16T00:00:00.000Z","order":2,"category":["DIY"],"tag":["NAS","Linux","SSH"],"description":"远程SSH免密登录 使用SSH远程连接服务器时，经常需要输入密码。密码简单一点就不安全，密码复杂一点就每次登录都很繁琐。于是找了个偷懒的办法，能够保证密码可以维持复杂度，每次登录也不用很繁琐的去输入密码，针对SSH配置了免密登录设置。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"远程SSH免密登录\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-16T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-24T14:15:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"QSTX\\",\\"url\\":\\"https://www.github.com/qstx\\"}]}"],["meta",{"property":"og:url","content":"https://qstx.github.io/%E6%9E%81%E5%AE%A2%E5%B0%8F%E5%B1%8B/NAS/%E8%BF%9C%E7%A8%8Bssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95.html"}],["meta",{"property":"og:site_name","content":"且试天下"}],["meta",{"property":"og:title","content":"远程SSH免密登录"}],["meta",{"property":"og:description","content":"远程SSH免密登录 使用SSH远程连接服务器时，经常需要输入密码。密码简单一点就不安全，密码复杂一点就每次登录都很繁琐。于是找了个偷懒的办法，能够保证密码可以维持复杂度，每次登录也不用很繁琐的去输入密码，针对SSH配置了免密登录设置。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-24T14:15:18.000Z"}],["meta",{"property":"article:tag","content":"SSH"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:tag","content":"NAS"}],["meta",{"property":"article:published_time","content":"2025-08-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-24T14:15:18.000Z"}]]},"git":{"createdTime":1755413731000,"updatedTime":1756044918000,"contributors":[{"name":"qstx","username":"qstx","email":"2031074519@qq.com","commits":2,"url":"https://github.com/qstx"}]},"readingTime":{"minutes":1.97,"words":592},"filePathRelative":"极客小屋/NAS/远程ssh免密登录.md","excerpt":"\\n<p>使用SSH远程连接服务器时，经常需要输入密码。密码简单一点就不安全，密码复杂一点就每次登录都很繁琐。于是找了个偷懒的办法，能够保证密码可以维持复杂度，每次登录也不用很繁琐的去输入密码，针对SSH配置了免密登录设置。</p>\\n","autoDesc":true}');export{g as comp,b as data};
